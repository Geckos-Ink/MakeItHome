{"version":3,"file":"src_app_modules_auth_sign-in_sign-in_routes_ts.js","mappings":"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","sources":["./src/app/modules/auth/sign-in/sign-in.component.ts","./src/app/modules/auth/sign-in/sign-in.component.html","./src/app/modules/auth/sign-in/sign-in.routes.ts"],"sourcesContent":["import { NgIf } from '@angular/common';\nimport { Component, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, NgForm, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertComponent, FuseAlertType } from '@fuse/components/alert';\nimport { AuthService } from 'app/core/auth/auth.service';\n\n@Component({\n    selector     : 'auth-sign-in',\n    templateUrl  : './sign-in.component.html',\n    encapsulation: ViewEncapsulation.None,\n    animations   : fuseAnimations,\n    standalone   : true,\n    imports      : [RouterLink, FuseAlertComponent, NgIf, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule, MatIconModule, MatCheckboxModule, MatProgressSpinnerModule],\n})\nexport class AuthSignInComponent implements OnInit\n{\n    @ViewChild('signInNgForm') signInNgForm: NgForm;\n\n    alert: { type: FuseAlertType; message: string } = {\n        type   : 'success',\n        message: '',\n    };\n    signInForm: UntypedFormGroup;\n    showAlert: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _authService: AuthService,\n        private _formBuilder: UntypedFormBuilder,\n        private _router: Router,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Create the form\n        this.signInForm = this._formBuilder.group({\n            email     : ['hughes.brian@company.com', [Validators.required, Validators.email]],\n            password  : ['admin', Validators.required],\n            rememberMe: [''],\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Sign in\n     */\n    signIn(): void\n    {\n        // Return if the form is invalid\n        if ( this.signInForm.invalid )\n        {\n            return;\n        }\n\n        // Disable the form\n        this.signInForm.disable();\n\n        // Hide the alert\n        this.showAlert = false;\n\n        // Sign in\n        this._authService.signIn(this.signInForm.value)\n            .subscribe(\n                () =>\n                {\n                    // Set the redirect url.\n                    // The '/signed-in-redirect' is a dummy url to catch the request and redirect the user\n                    // to the correct page after a successful sign in. This way, that url can be set via\n                    // routing file and we don't have to touch here.\n                    const redirectURL = this._activatedRoute.snapshot.queryParamMap.get('redirectURL') || '/signed-in-redirect';\n\n                    // Navigate to the redirect url\n                    this._router.navigateByUrl(redirectURL);\n\n                },\n                (response) =>\n                {\n                    // Re-enable the form\n                    this.signInForm.enable();\n\n                    // Reset the form\n                    this.signInNgForm.resetForm();\n\n                    // Set the alert\n                    this.alert = {\n                        type   : 'error',\n                        message: 'Wrong email or password',\n                    };\n\n                    // Show the alert\n                    this.showAlert = true;\n                },\n            );\n    }\n}\n","<div class=\"flex flex-col sm:flex-row items-center md:items-start sm:justify-center md:justify-start flex-auto min-w-0\">\n    <div class=\"md:flex md:items-center md:justify-end w-full sm:w-auto md:h-full md:w-1/2 py-8 px-4 sm:p-12 md:p-16 sm:rounded-2xl md:rounded-none sm:shadow md:shadow-none sm:bg-card\">\n        <div class=\"w-full max-w-80 sm:w-80 mx-auto sm:mx-0\">\n            <!-- Logo -->\n            <div class=\"w-12\">\n                <img src=\"assets/images/logo/logo.svg\">\n            </div>\n\n            <!-- Title -->\n            <div class=\"mt-8 text-4xl font-extrabold tracking-tight leading-tight\">Sign in</div>\n            <div class=\"flex items-baseline mt-0.5 font-medium\">\n                <div>Don't have an account?</div>\n                <a\n                    class=\"ml-1 text-primary-500 hover:underline\"\n                    [routerLink]=\"['/sign-up']\">Sign up\n                </a>\n            </div>\n\n            <!-- Alert -->\n            <fuse-alert\n                class=\"mt-8\"\n                [appearance]=\"'outline'\"\n                [showIcon]=\"false\"\n                [type]=\"'info'\">\n                You are browsing <strong>Fuse Demo</strong>. Click on the \"Sign in\" button to access the Demo and Documentation.\n            </fuse-alert>\n\n            <!-- Alert -->\n            <fuse-alert\n                class=\"mt-8\"\n                *ngIf=\"showAlert\"\n                [appearance]=\"'outline'\"\n                [showIcon]=\"false\"\n                [type]=\"alert.type\"\n                [@shake]=\"alert.type === 'error'\">\n                {{alert.message}}\n            </fuse-alert>\n\n            <!-- Sign in form -->\n            <form\n                class=\"mt-8\"\n                [formGroup]=\"signInForm\"\n                #signInNgForm=\"ngForm\">\n\n                <!-- Email field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Email address</mat-label>\n                    <input\n                        id=\"email\"\n                        matInput\n                        [formControlName]=\"'email'\">\n                    <mat-error *ngIf=\"signInForm.get('email').hasError('required')\">\n                        Email address is required\n                    </mat-error>\n                    <mat-error *ngIf=\"signInForm.get('email').hasError('email')\">\n                        Please enter a valid email address\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Password field -->\n                <mat-form-field class=\"w-full\">\n                    <mat-label>Password</mat-label>\n                    <input\n                        id=\"password\"\n                        matInput\n                        type=\"password\"\n                        [formControlName]=\"'password'\"\n                        #passwordField>\n                    <button\n                        mat-icon-button\n                        type=\"button\"\n                        (click)=\"passwordField.type === 'password' ? passwordField.type = 'text' : passwordField.type = 'password'\"\n                        matSuffix>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            *ngIf=\"passwordField.type === 'password'\"\n                            [svgIcon]=\"'heroicons_solid:eye'\"></mat-icon>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            *ngIf=\"passwordField.type === 'text'\"\n                            [svgIcon]=\"'heroicons_solid:eye-slash'\"></mat-icon>\n                    </button>\n                    <mat-error>\n                        Password is required\n                    </mat-error>\n                </mat-form-field>\n\n                <!-- Actions -->\n                <div class=\"inline-flex items-center justify-between w-full mt-1.5\">\n                    <mat-checkbox\n                        class=\"-ml-2\"\n                        [color]=\"'primary'\"\n                        [formControlName]=\"'rememberMe'\">\n                        Remember me\n                    </mat-checkbox>\n                    <a\n                        class=\"text-md font-medium text-primary-500 hover:underline\"\n                        [routerLink]=\"['/forgot-password']\">Forgot password?\n                    </a>\n                </div>\n\n                <!-- Submit button -->\n                <button\n                    class=\"fuse-mat-button-large w-full mt-6\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [disabled]=\"signInForm.disabled\"\n                    (click)=\"signIn()\">\n                    <span *ngIf=\"!signInForm.disabled\">\n                        Sign in\n                    </span>\n                    <mat-progress-spinner\n                        *ngIf=\"signInForm.disabled\"\n                        [diameter]=\"24\"\n                        [mode]=\"'indeterminate'\"></mat-progress-spinner>\n                </button>\n\n                <!-- Separator -->\n                <div class=\"flex items-center mt-8\">\n                    <div class=\"flex-auto mt-px border-t\"></div>\n                    <div class=\"mx-2 text-secondary\">Or continue with</div>\n                    <div class=\"flex-auto mt-px border-t\"></div>\n                </div>\n\n                <!-- Single sign-on buttons -->\n                <div class=\"flex items-center mt-8 space-x-4\">\n                    <button\n                        class=\"flex-auto\"\n                        type=\"button\"\n                        mat-stroked-button>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'feather:facebook'\"></mat-icon>\n                    </button>\n                    <button\n                        class=\"flex-auto\"\n                        type=\"button\"\n                        mat-stroked-button>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'feather:twitter'\"></mat-icon>\n                    </button>\n                    <button\n                        class=\"flex-auto\"\n                        type=\"button\"\n                        mat-stroked-button>\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'feather:github'\"></mat-icon>\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n    <div class=\"relative hidden md:flex flex-auto items-center justify-center w-1/2 h-full p-16 lg:px-28 overflow-hidden bg-gray-800 dark:border-l\">\n        <!-- Background - @formatter:off -->\n        <!-- Rings -->\n        <svg class=\"absolute inset-0 pointer-events-none\"\n             viewBox=\"0 0 960 540\" width=\"100%\" height=\"100%\" preserveAspectRatio=\"xMidYMax slice\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g class=\"text-gray-700 opacity-25\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"100\">\n                <circle r=\"234\" cx=\"196\" cy=\"23\"></circle>\n                <circle r=\"234\" cx=\"790\" cy=\"491\"></circle>\n            </g>\n        </svg>\n        <!-- Dots -->\n        <svg class=\"absolute -top-16 -right-16 text-gray-700\"\n             viewBox=\"0 0 220 192\" width=\"220\" height=\"192\" fill=\"none\">\n            <defs>\n                <pattern id=\"837c3e70-6c3a-44e6-8854-cc48c737b659\" x=\"0\" y=\"0\" width=\"20\" height=\"20\" patternUnits=\"userSpaceOnUse\">\n                    <rect x=\"0\" y=\"0\" width=\"4\" height=\"4\" fill=\"currentColor\"></rect>\n                </pattern>\n            </defs>\n            <rect width=\"220\" height=\"192\" fill=\"url(#837c3e70-6c3a-44e6-8854-cc48c737b659)\"></rect>\n        </svg>\n        <!-- @formatter:on -->\n        <!-- Content -->\n        <div class=\"z-10 relative w-full max-w-2xl\">\n            <div class=\"text-7xl font-bold leading-none text-gray-100\">\n                <div>Welcome to</div>\n                <div>our community</div>\n            </div>\n            <div class=\"mt-6 text-lg tracking-tight leading-6 text-gray-400\">\n                Fuse helps developers to build organized and well coded dashboards full of beautiful and rich modules.\n                Join us and start building your application today.\n            </div>\n            <div class=\"flex items-center mt-8\">\n                <div class=\"flex flex-0 items-center -space-x-1.5\">\n                    <img\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\n                        src=\"assets/images/avatars/female-18.jpg\">\n                    <img\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\n                        src=\"assets/images/avatars/female-11.jpg\">\n                    <img\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\n                        src=\"assets/images/avatars/male-09.jpg\">\n                    <img\n                        class=\"flex-0 w-10 h-10 rounded-full ring-4 ring-offset-1 ring-gray-800 ring-offset-gray-800 object-cover\"\n                        src=\"assets/images/avatars/male-16.jpg\">\n                </div>\n                <div class=\"ml-4 font-medium tracking-tight text-gray-400\">More than 17k people joined us, it's your turn</div>\n            </div>\n        </div>\n    </div>\n</div>\n","import { Routes } from '@angular/router';\nimport { AuthSignInComponent } from 'app/modules/auth/sign-in/sign-in.component';\n\nexport default [\n    {\n        path     : '',\n        component: AuthSignInComponent,\n    },\n] as Routes;\n"],"names":["NgIf","FormsModule","ReactiveFormsModule","Validators","MatButtonModule","MatCheckboxModule","MatFormFieldModule","MatIconModule","MatInputModule","MatProgressSpinnerModule","RouterLink","fuseAnimations","FuseAlertComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r0","alert","type","ɵɵadvance","ɵɵtextInterpolate1","message","ɵɵelement","AuthSignInComponent","constructor","_activatedRoute","_authService","_formBuilder","_router","showAlert","ngOnInit","signInForm","group","email","required","password","rememberMe","signIn","invalid","disable","value","subscribe","redirectURL","snapshot","queryParamMap","get","navigateByUrl","response","enable","signInNgForm","resetForm","_","ɵɵdirectiveInject","i1","ActivatedRoute","i2","AuthService","i3","UntypedFormBuilder","Router","_2","selectors","viewQuery","AuthSignInComponent_Query","rf","ctx","ɵɵtemplate","AuthSignInComponent_fuse_alert_17_Template","AuthSignInComponent_mat_error_24_Template","AuthSignInComponent_mat_error_25_Template","ɵɵlistener","AuthSignInComponent_Template_button_click_31_listener","ɵɵrestoreView","_r9","_r4","ɵɵreference","ɵɵresetView","AuthSignInComponent_mat_icon_32_Template","AuthSignInComponent_mat_icon_33_Template","AuthSignInComponent_Template_button_click_41_listener","AuthSignInComponent_span_42_Template","AuthSignInComponent_mat_progress_spinner_43_Template","ɵɵnamespaceSVG","ɵɵnamespaceHTML","ɵɵpureFunction0","_c1","hasError","_c2","disabled","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i4","MatFormField","MatLabel","MatError","MatSuffix","i5","MatInput","i6","MatButton","MatIconButton","i7","MatIcon","i8","MatCheckbox","i9","MatProgressSpinner","encapsulation","data","animation","path","component"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}