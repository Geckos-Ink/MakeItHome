{"version":3,"file":"src_app_modules_admin_apps_scrumboard_scrumboard_routes_ts.js","mappings":"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","sources":["./src/app/modules/admin/apps/scrumboard/board/add-card/add-card.component.ts","./src/app/modules/admin/apps/scrumboard/board/add-card/add-card.component.html","./src/app/modules/admin/apps/scrumboard/board/add-list/add-list.component.ts","./src/app/modules/admin/apps/scrumboard/board/add-list/add-list.component.html","./src/app/modules/admin/apps/scrumboard/board/board.component.ts","./src/app/modules/admin/apps/scrumboard/board/board.component.html","./src/app/modules/admin/apps/scrumboard/boards/boards.component.ts","./src/app/modules/admin/apps/scrumboard/boards/boards.component.html","./src/app/modules/admin/apps/scrumboard/card/card.component.ts","./src/app/modules/admin/apps/scrumboard/card/card.component.html","./src/app/modules/admin/apps/scrumboard/card/details/details.component.ts","./src/app/modules/admin/apps/scrumboard/card/details/details.component.html","./src/app/modules/admin/apps/scrumboard/scrumboard.models.ts","./src/app/modules/admin/apps/scrumboard/scrumboard.routes.ts","./src/app/modules/admin/apps/scrumboard/scrumboard.service.ts"],"sourcesContent":["import { CdkTextareaAutosize, TextFieldModule } from '@angular/cdk/text-field';\nimport { NgClass } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector       : 'scrumboard-board-add-card',\n    templateUrl    : './add-card.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, NgClass, MatIconModule, FormsModule, ReactiveFormsModule, TextFieldModule],\n})\nexport class ScrumboardBoardAddCardComponent implements OnInit\n{\n    @ViewChild('titleInput') titleInput: ElementRef;\n    @ViewChild('titleAutosize') titleAutosize: CdkTextareaAutosize;\n    @Input() buttonTitle: string = 'Add a card';\n    @Output() readonly saved: EventEmitter<string> = new EventEmitter<string>();\n\n    form: UntypedFormGroup;\n    formVisible: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _formBuilder: UntypedFormBuilder,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Initialize the new list form\n        this.form = this._formBuilder.group({\n            title: [''],\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Save\n     */\n    save(): void\n    {\n        // Get the new list title\n        const title = this.form.get('title').value;\n\n        // Return, if the title is empty\n        if ( !title || title.trim() === '' )\n        {\n            return;\n        }\n\n        // Execute the observable\n        this.saved.next(title.trim());\n\n        // Clear the new list title and hide the form\n        this.formVisible = false;\n        this.form.get('title').setValue('');\n\n        // Reset the size of the textarea\n        setTimeout(() =>\n        {\n            this.titleInput.nativeElement.value = '';\n            this.titleAutosize.reset();\n        });\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Toggle the visibility of the form\n     */\n    toggleFormVisibility(): void\n    {\n        // Toggle the visibility\n        this.formVisible = !this.formVisible;\n\n        // If the form becomes visible, focus on the title field\n        if ( this.formVisible )\n        {\n            this.titleInput.nativeElement.focus();\n        }\n    }\n}\n","<div\n    class=\"p-3 pt-0\"\n    [class.h-13]=\"!formVisible\">\n    <div class=\"relative flex w-full h-full rounded-lg\">\n        <button\n            class=\"absolute inset-0 justify-start w-full rounded-lg\"\n            [ngClass]=\"{'opacity-0 pointer-events-none': formVisible}\"\n            mat-button\n            (click)=\"toggleFormVisibility()\"\n            disableRipple>\n            <mat-icon\n                class=\"icon-size-5\"\n                [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n            <span class=\"ml-2 text-secondary\">{{buttonTitle}}</span>\n        </button>\n        <form\n            class=\"flex flex-col items-start w-full\"\n            [ngClass]=\"{'opacity-0': !formVisible}\"\n            [formGroup]=\"form\">\n            <div class=\"flex w-full p-5 rounded-lg shadow bg-card\">\n                <textarea\n                    class=\"w-full text-lg font-medium leading-5\"\n                    [spellcheck]=\"'off'\"\n                    [formControlName]=\"'title'\"\n                    [placeholder]=\"'Enter card title...'\"\n                    (keydown.enter)=\"save()\"\n                    cdkTextareaAutosize\n                    #titleInput\n                    #titleAutosize=\"cdkTextareaAutosize\">\n                </textarea>\n            </div>\n            <div class=\"flex items-center mt-2\">\n                <button\n                    class=\"h-8 min-h-8\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [type]=\"'button'\"\n                    (click)=\"save()\">\n                    Add card\n                </button>\n                <button\n                    class=\"ml-1 w-8 h-8 min-h-8\"\n                    mat-icon-button\n                    [type]=\"'button'\"\n                    (click)=\"toggleFormVisibility()\">\n                    <mat-icon\n                        class=\"icon-size-4\"\n                        [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { NgClass } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector       : 'scrumboard-board-add-list',\n    templateUrl    : './add-list.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, NgClass, MatIconModule, FormsModule, ReactiveFormsModule],\n})\nexport class ScrumboardBoardAddListComponent implements OnInit\n{\n    @ViewChild('titleInput') titleInput: ElementRef;\n    @Input() buttonTitle: string = 'Add a list';\n    @Output() readonly saved: EventEmitter<string> = new EventEmitter<string>();\n\n    form: UntypedFormGroup;\n    formVisible: boolean = false;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _formBuilder: UntypedFormBuilder,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Initialize the new list form\n        this.form = this._formBuilder.group({\n            title: [''],\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Save\n     */\n    save(): void\n    {\n        // Get the new list title\n        const title = this.form.get('title').value;\n\n        // Return, if the title is empty\n        if ( !title || title.trim() === '' )\n        {\n            return;\n        }\n\n        // Execute the observable\n        this.saved.next(title.trim());\n\n        // Clear the new list title and hide the form\n        this.form.get('title').setValue('');\n        this.formVisible = false;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Toggle the visibility of the form\n     */\n    toggleFormVisibility(): void\n    {\n        // Toggle the visibility\n        this.formVisible = !this.formVisible;\n\n        // If the form becomes visible, focus on the title field\n        if ( this.formVisible )\n        {\n            this.titleInput.nativeElement.focus();\n        }\n    }\n}\n","<div\n    class=\"mt-11 w-64 py-2.5 px-2\"\n    [class.h-15]=\"!formVisible\">\n    <div class=\"relative flex w-full h-full overflow-hidden rounded-xl bg-gray-200 dark:bg-gray-700\">\n        <button\n            class=\"absolute inset-0 justify-start w-full px-3 rounded-xl bg-transparent\"\n            [ngClass]=\"{'opacity-0 pointer-events-none': formVisible}\"\n            mat-button\n            (click)=\"toggleFormVisibility()\"\n            disableRipple>\n            <mat-icon\n                class=\"icon-size-5\"\n                [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n            <span class=\"ml-2 text-secondary\">{{buttonTitle}}</span>\n        </button>\n        <form\n            class=\"flex flex-col items-start w-full p-3\"\n            [ngClass]=\"{'opacity-0': !formVisible}\"\n            [formGroup]=\"form\">\n            <input\n                class=\"w-full py-2 px-3 leading-5 rounded-md shadow-sm border border-gray-300 bg-white focus:border-primary dark:border-gray-500 dark:focus:border-primary dark:bg-black dark:bg-opacity-5\"\n                [autocomplete]=\"'off'\"\n                [formControlName]=\"'title'\"\n                [placeholder]=\"'Enter list title...'\"\n                (keydown.enter)=\"save()\"\n                #titleInput>\n            <div class=\"flex items-center mt-2\">\n                <button\n                    class=\"h-8 min-h-8\"\n                    mat-flat-button\n                    [color]=\"'primary'\"\n                    [type]=\"'button'\"\n                    (click)=\"save()\">\n                    Add list\n                </button>\n                <button\n                    class=\"ml-1 w-8 h-8 min-h-8\"\n                    mat-icon-button\n                    [type]=\"'button'\"\n                    (click)=\"toggleFormVisibility()\">\n                    <mat-icon\n                        class=\"icon-size-4\"\n                        [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\n                </button>\n            </div>\n        </form>\n    </div>\n</div>\n","import { CdkDrag, CdkDragDrop, CdkDragHandle, CdkDropList, CdkDropListGroup, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport { DatePipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { RouterLink, RouterOutlet, Router } from '@angular/router';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { Board, Card, List } from 'app/modules/admin/apps/scrumboard/scrumboard.models';\nimport { ScrumboardService } from 'app/modules/admin/apps/scrumboard/scrumboard.service';\nimport { DateTime } from 'luxon';\nimport { Subject, takeUntil } from 'rxjs';\nimport { ScrumboardBoardAddCardComponent } from './add-card/add-card.component';\nimport { ScrumboardBoardAddListComponent } from './add-list/add-list.component';\n\nimport { FuseMockApiUtils } from '@fuse/lib/mock-api';\n\nimport * as $ from 'jquery';\n\n@Component({\n    selector       : 'scrumboard-board',\n    templateUrl    : './board.component.html',\n    styleUrls      : ['./board.component.scss'],\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, RouterLink, MatIconModule, CdkScrollable, CdkDropList, CdkDropListGroup, NgFor, CdkDrag, CdkDragHandle, MatMenuModule, NgIf, NgClass, ScrumboardBoardAddCardComponent, ScrumboardBoardAddListComponent, RouterOutlet, DatePipe],\n})\nexport class ScrumboardBoardComponent implements OnInit, OnDestroy\n{\n    board: Board;\n    listTitleForm: UntypedFormGroup;\n\n    // Private\n    private readonly _positionStep: number = 65536;\n    private readonly _maxListCount: number = 200;\n    private readonly _maxPosition: number = this._positionStep * 500;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _formBuilder: UntypedFormBuilder,\n        private _fuseConfirmationService: FuseConfirmationService,\n        private _scrumboardService: ScrumboardService,\n        private router: Router,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Initialize the list title form\n        this.listTitleForm = this._formBuilder.group({\n            title: [''],\n        });\n\n        // Get the board\n        this._scrumboardService.board$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((board: Board) =>\n            {\n                this.board = {...board};\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        let waitUpdateBoardName = null\n        $(\"#scrumboard-board-name\").on(\"keypress\", ()=>{\n            clearTimeout(waitUpdateBoardName)\n            waitUpdateBoardName = setTimeout(()=>{\n                this.board.title = $(\"#scrumboard-board-name\").html() as string\n                this._scrumboardService.updateBoard(this.board.id, this.board)\n            },100)\n        })\n\n        let waitUpdateBoardDescription = null\n        $(\"#scrumboard-board-description\").on(\"keypress\", ()=>{\n            clearTimeout(waitUpdateBoardDescription)\n            waitUpdateBoardDescription = setTimeout(()=>{\n                this.board.description = $(\"#scrumboard-board-description\").html() as string\n                this._scrumboardService.updateBoard(this.board.id, this.board)\n            },100)\n        })\n\n        let deleteConfirm = 0\n        $(\"#scrumboard-deleteBoard\").on(\"click\", ()=>{\n            if(deleteConfirm == 0){\n                $(\"#scrumboard-deleteBoard\").css('background-color','rgba(255,0,0,1)')\n\n                setTimeout(()=>{\n                    $(\"#scrumboard-deleteBoard\").css('background-color','rgba(255,100,100,0.75)')\n                    deleteConfirm = 0\n                }, 5000)\n            }\n            else {                \n                this._scrumboardService.deleteBoard(this.board.id);\n                this.router.navigate(['/apps/scrumboard/']);\n            }\n\n            deleteConfirm++\n        });\n        \n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n\n        $(\"#scrumboard-board-name\").off(\"keypress\")\n        $(\"#scrumboard-board-description\").off(\"keypress\")\n        $(\"#scrumboard-deleteBoard\").off(\"click\");\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Focus on the given element to start editing the list title\n     *\n     * @param listTitleInput\n     */\n    renameList(listTitleInput: HTMLElement): void\n    {\n        // Use timeout so it can wait for menu to close\n        setTimeout(() =>\n        {\n            listTitleInput.focus();\n        });\n    }\n\n    /**\n     * Add new list\n     *\n     * @param title\n     */\n    addList(title: string): void\n    {\n        // Limit the max list count\n        if ( this.board.lists.length >= this._maxListCount )\n        {\n            return;\n        }\n\n        // Create a new list model\n        const list = new List({\n            id: FuseMockApiUtils.guid(),\n            boardId : this.board.id,\n            position: this.board.lists.length ? this.board.lists[this.board.lists.length - 1].position + this._positionStep : this._positionStep,\n            title   : title,\n        });\n\n        // Save the list\n        this._scrumboardService.createList(list).subscribe();\n    }\n\n    /**\n     * Update the list title\n     *\n     * @param event\n     * @param list\n     */\n    updateListTitle(event: any, list: List): void\n    {\n        // Get the target element\n        const element: HTMLInputElement = event.target;\n\n        // Get the new title\n        const newTitle = element.value;\n\n        // If the title is empty...\n        if ( !newTitle || newTitle.trim() === '' )\n        {\n            // Reset to original title and return\n            element.value = list.title;\n            return;\n        }\n\n        // Update the list title and element value\n        list.title = element.value = newTitle.trim();\n\n        // Update the list\n        this._scrumboardService.updateList(list).subscribe();\n    }\n\n    /**\n     * Delete the list\n     *\n     * @param id\n     */\n    deleteList(id): void\n    {\n        // Open the confirmation dialog\n        const confirmation = this._fuseConfirmationService.open({\n            title  : 'Delete list',\n            message: 'Are you sure you want to delete this list and its cards? This action cannot be undone!',\n            actions: {\n                confirm: {\n                    label: 'Delete',\n                },\n            },\n        });\n\n        // Subscribe to the confirmation dialog closed action\n        confirmation.afterClosed().subscribe((result) =>\n        {\n            // If the confirm button pressed...\n            if ( result === 'confirmed' )\n            {\n                // Delete the list\n                this._scrumboardService.deleteList(id).subscribe();\n            }\n        });\n    }\n\n    /**\n     * Add new card\n     */\n    addCard(list: List, title: string): void\n    {\n        // Create a new card model\n        const card = new Card({\n            id: FuseMockApiUtils.guid(),\n            boardId : this.board.id,\n            listId  : list.id,\n            position: list.cards.length ? list.cards[list.cards.length - 1].position + this._positionStep : this._positionStep,\n            title   : title,\n        });\n\n        // Save the card\n        this._scrumboardService.createCard(card).subscribe();\n    }\n\n    /**\n     * List dropped\n     *\n     * @param event\n     */\n    listDropped(event: CdkDragDrop<List[]>): void\n    {\n        // Move the item\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n\n        // Calculate the positions\n        const updated = this._calculatePositions(event);\n\n        // Update the lists\n        this._scrumboardService.updateLists(updated).subscribe();\n    }\n\n    /**\n     * Card dropped\n     *\n     * @param event\n     */\n    cardDropped(event: CdkDragDrop<Card[]>): void\n    {\n        // Move or transfer the item\n        if ( event.previousContainer === event.container )\n        {\n            // Move the item\n            moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n        }\n        else\n        {\n            // Transfer the item\n            transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n\n            // Update the card's list it\n            event.container.data[event.currentIndex].listId = event.container.id;\n        }\n\n        // Calculate the positions\n        const updated = this._calculatePositions(event);\n\n        // Update the cards\n        this._scrumboardService.updateCards(updated).subscribe();\n    }\n\n    /**\n     * Check if the given ISO_8601 date string is overdue\n     *\n     * @param date\n     */\n    isOverdue(date: string): boolean\n    {\n        return DateTime.fromISO(date).startOf('day') < DateTime.now().startOf('day');\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Calculate and set item positions\n     * from given CdkDragDrop event\n     *\n     * @param event\n     * @private\n     */\n    private _calculatePositions(event: CdkDragDrop<any[]>): any[]\n    {\n        // Get the items\n        let items = event.container.data;\n        const currentItem = items[event.currentIndex];\n        const prevItem = items[event.currentIndex - 1] || null;\n        const nextItem = items[event.currentIndex + 1] || null;\n\n        // If the item moved to the top...\n        if ( !prevItem )\n        {\n            // If the item moved to an empty container\n            if ( !nextItem )\n            {\n                currentItem.position = this._positionStep;\n            }\n            else\n            {\n                currentItem.position = nextItem.position / 2;\n            }\n        }\n        // If the item moved to the bottom...\n        else if ( !nextItem )\n        {\n            currentItem.position = prevItem.position + this._positionStep;\n        }\n        // If the item moved in between other items...\n        else\n        {\n            currentItem.position = (prevItem.position + nextItem.position) / 2;\n        }\n\n        // Check if all item positions need to be updated\n        if ( !Number.isInteger(currentItem.position) || currentItem.position >= this._maxPosition )\n        {\n            // Re-calculate all orders\n            items = items.map((value, index) =>\n            {\n                value.position = (index + 1) * this._positionStep;\n                return value;\n            });\n\n            // Return items\n            return items;\n        }\n\n        // Return currentItem\n        return [currentItem];\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0\">\n\n    <!-- Header -->\n    <div class=\"flex flex-col sm:flex-row flex-0 sm:items-center sm:justify-between p-6 sm:py-8 sm:px-10 border-b bg-card dark:bg-transparent\">\n        <!-- Title -->\n        <div class=\"flex-1 min-w-0\">\n            <h2 class=\"text-2xl md:text-3xl font-extrabold tracking-tight leading-7 sm:leading-10 truncate\" id=\"scrumboard-board-name\" contenteditable=\"true\">\n                {{board.title}}\n            </h2>\n\n            <h4 class=\"text-1xl md:text-2xl font-extrabold tracking-tight leading-7 sm:leading-10 truncate\" id=\"scrumboard-board-description\" contenteditable=\"true\">\n                {{board.description}}\n            </h4>\n        </div>\n        <!-- Actions -->\n        <div class=\"flex shrink-0 items-center mt-6 sm:mt-0 sm:ml-4\">\n            <a\n                mat-stroked-button\n                id=\"scrumboard-deleteBoard\"\n                style=\"margin-right:30px; background-color:rgba(255,100,100,0.75);\"\n            >\n                <mat-icon\n                    class=\"icon-size-5\"\n                    [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                <span class=\"ml-2\">Delete</span>\n            </a>\n\n            <a\n                mat-stroked-button\n                [routerLink]=\"['..']\">\n                <mat-icon\n                    class=\"icon-size-5\"\n                    [svgIcon]=\"'heroicons_solid:view-columns'\"></mat-icon>\n                <span class=\"ml-2\">Boards</span>\n            </a>\n            <!--<button\n                class=\"ml-3\"\n                mat-stroked-button>\n                <mat-icon\n                    class=\"icon-size-5\"\n                    [svgIcon]=\"'heroicons_solid:cog-8-tooth'\"></mat-icon>\n                <span class=\"ml-2\">Settings</span>\n            </button>-->\n        </div>\n    </div>\n\n    <!-- Main -->\n    <div\n        class=\"flex-auto p-6 sm:p-8 sm:pt-4\"\n        cdkScrollable>\n\n        <!-- Lists -->\n        <div\n            class=\"flex\"\n            cdkDropList\n            [cdkDropListData]=\"board.lists\"\n            [cdkDropListOrientation]=\"'horizontal'\"\n            (cdkDropListDropped)=\"listDropped($event)\">\n\n            <!-- Group all cdkDropList's after this point together so that the cards can be transferred between lists -->\n            <div\n                class=\"flex items-start\"\n                cdkDropListGroup>\n\n                <!-- List -->\n                <ng-container *ngFor=\"let list of board.lists; trackBy: trackByFn\">\n                    <div\n                        class=\"flex-0 w-72 p-2 rounded-2xl bg-default\"\n                        cdkDrag\n                        [cdkDragLockAxis]=\"'x'\">\n\n                        <div\n                            class=\"flex items-center justify-between\"\n                            cdkDragHandle>\n                            <div class=\"flex items-center w-full py-2 px-3 rounded-md cursor-text border border-transparent focus-within:bg-white focus-within:shadow-sm focus-within:border-primary dark:focus-within:bg-gray-900\">\n                                <input\n                                    class=\"w-full font-medium leading-5 bg-transparent\"\n                                    [spellcheck]=\"'false'\"\n                                    [value]=\"list.title\"\n                                    (focusout)=\"updateListTitle($event, list)\"\n                                    (keydown.enter)=\"listTitleInput.blur()\"\n                                    #listTitleInput>\n                            </div>\n                            <div class=\"flex items-center justify-center min-w-6 ml-4 text-sm font-semibold leading-6 rounded-full bg-gray-300 text-secondary dark:bg-gray-700\">\n                                {{list.cards.length}}\n                            </div>\n                            <div class=\"ml-1\">\n                                <button\n                                    class=\"w-8 h-8 min-h-8\"\n                                    mat-icon-button\n                                    [matMenuTriggerFor]=\"listMenu\">\n                                    <mat-icon\n                                        class=\"icon-size-5\"\n                                        [svgIcon]=\"'heroicons_solid:ellipsis-vertical'\"></mat-icon>\n                                </button>\n                                <mat-menu #listMenu=\"matMenu\">\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"renameList(listTitleInput)\">\n                                        <mat-icon\n                                            class=\"icon-size-5\"\n                                            [svgIcon]=\"'heroicons_solid:pencil-square'\"></mat-icon>\n                                        Rename list\n                                    </button>\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"deleteList(list.id)\">\n                                        <mat-icon\n                                            class=\"icon-size-5\"\n                                            [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                                        Delete list\n                                    </button>\n                                </mat-menu>\n                            </div>\n                        </div>\n\n                        <!-- Cards -->\n                        <div class=\"mt-2 rounded-xl bg-gray-400 bg-opacity-12 dark:bg-transparent dark:border\">\n                            <div\n                                [id]=\"list.id\"\n                                class=\"p-3 pb-0\"\n                                cdkDropList\n                                [cdkDropListData]=\"list.cards\"\n                                (cdkDropListDropped)=\"cardDropped($event)\">\n\n                                <!-- Card -->\n                                <ng-container *ngFor=\"let card of list.cards; trackBy: trackByFn\">\n                                    <a\n                                        class=\"flex flex-col items-start mb-3 p-5 space-y-3 shadow rounded-lg overflow-hidden bg-card\"\n                                        [routerLink]=\"['card', card.id]\"\n                                        cdkDrag>\n                                        <!-- Cover image -->\n                                        <ng-container *ngIf=\"card.coverImage\">\n                                            <div class=\"-mx-5 -mt-5 mb-2\">\n                                                <img\n                                                    class=\"w-full object-cover\"\n                                                    [src]=\"card.coverImage\">\n                                            </div>\n                                        </ng-container>\n                                        <!-- Title -->\n                                        <div class=\"text-lg font-medium leading-5\">{{card.title}}</div>\n                                        <!-- Labels -->\n                                        <ng-container *ngIf=\"card.labels.length\">\n                                            <div>\n                                                <div class=\"flex flex-wrap -mx-1 -mb-2\">\n                                                    <ng-container *ngFor=\"let label of card.labels; trackBy: trackByFn\">\n                                                        <div class=\"mx-1 mb-2 py-0.5 px-3 rounded-full text-sm font-medium text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                                                            {{label.title}}\n                                                        </div>\n                                                    </ng-container>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                        <!-- Due date -->\n                                        <ng-container *ngIf=\"card.dueDate\">\n                                            <div\n                                                class=\"flex items-center rounded text-sm font-medium leading-5 text-secondary\"\n                                                [ngClass]=\"{'text-red-600': isOverdue(card.dueDate)}\">\n                                                <mat-icon\n                                                    class=\"icon-size-4 text-current\"\n                                                    [svgIcon]=\"'heroicons_outline:clock'\"></mat-icon>\n                                                <div class=\"ml-1\">\n                                                    {{card.dueDate | date: 'longDate'}}\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </a>\n                                </ng-container>\n                            </div>\n\n                            <!-- New card -->\n                            <scrumboard-board-add-card\n                                (saved)=\"addCard(list, $event)\"\n                                [buttonTitle]=\"list.cards.length ? 'Add another card' : 'Add a card'\">\n                            </scrumboard-board-add-card>\n                        </div>\n                    </div>\n                </ng-container>\n\n                <!-- New list -->\n                <scrumboard-board-add-list\n                    (saved)=\"addList($event)\"\n                    [buttonTitle]=\"board.lists.length ? 'Add another list' : 'Add a list'\">\n                </scrumboard-board-add-list>\n\n            </div>\n\n        </div>\n\n    </div>\n\n</div>\n\n<!-- Invisible router-outlet for ScrumboardCard component -->\n<div class=\"absolute invisible w-0 h-0 opacity-0 pointer-events-none\">\n    <router-outlet></router-outlet>\n</div>\n","import { CdkScrollable } from '@angular/cdk/scrolling';\nimport { NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { RouterLink } from '@angular/router';\nimport { Board } from 'app/modules/admin/apps/scrumboard/scrumboard.models';\nimport { ScrumboardService } from 'app/modules/admin/apps/scrumboard/scrumboard.service';\nimport { DateTime } from 'luxon';\nimport { Subject, takeUntil } from 'rxjs';\n\nimport { FuseMockApiUtils } from '@fuse/lib/mock-api';\nimport { members } from 'app/mock-api/apps/scrumboard/data';\n\n@Component({\n    selector       : 'scrumboard-boards',\n    templateUrl    : './boards.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [CdkScrollable, NgFor, RouterLink, MatIconModule, NgIf],\n})\nexport class ScrumboardBoardsComponent implements OnInit, OnDestroy\n{\n    boards: Board[];\n\n    // Private\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _scrumboardService: ScrumboardService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the boards\n        this._scrumboardService.boards$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((boards: Board[]) =>\n            {\n                this.boards = boards;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Format the given ISO_8601 date as a relative date\n     *\n     * @param date\n     */\n    formatDateAsRelative(date: string): string\n    {\n        return DateTime.fromISO(date).toRelative();\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    newBoard(){\n        let board = {\n            id          : FuseMockApiUtils.guid(),\n            title       : 'New Dashboard',\n            description : 'Roadmap for the new project',\n            icon        : 'heroicons_outline:rectangle-group',\n            lastActivity: (new Date()).toISOString(),\n            lists: [],\n            labels: [],\n            members: []\n        }\n\n        this._scrumboardService.createBoard(board as Board)\n    }\n}\n","<div\n    class=\"absolute inset-0 flex flex-col min-w-0 overflow-y-auto\"\n    cdkScrollable>\n\n    <!-- Main -->\n    <div class=\"flex flex-col flex-auto items-center p-6 sm:p-10\">\n\n        <!-- Title -->\n        <!--<div class=\"mt-4 md:mt-24 text-3xl md:text-6xl font-extrabold tracking-tight leading-7 sm:leading-10\">\n            Scrumboard Boards\n        </div>-->\n\n        <!-- Boards -->\n        <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mt-8 md:mt-16\">\n            <ng-container *ngFor=\"let board of boards; trackBy: trackByFn\">\n                <a\n                    class=\"flex flex-col items-start w-56 p-6 rounded-lg shadow bg-card rounded-lg hover:shadow-xl transition-shadow duration-150 ease-in-out\"\n                    [routerLink]=\"[board.id]\">\n                    <div class=\"flex items-center justify-center p-4 rounded-full bg-primary-50 text-primary-700 dark:bg-primary dark:text-on-primary\">\n                        <mat-icon\n                            class=\"text-current\"\n                            [svgIcon]=\"board.icon\"></mat-icon>\n                    </div>\n                    <!-- Title -->\n                    <div class=\"mt-5 text-lg font-medium leading-5\">{{board.title}}</div>\n                    <!-- Description -->\n                    <div class=\"mt-0.5 line-clamp-2 text-secondary\">{{board.description}}</div>\n                    <!-- Members -->\n                    <ng-container *ngIf=\"board.members?.length\">\n                        <div class=\"w-12 h-1 mt-6 border-t-2\"></div>\n                        <div class=\"flex items-center mt-6 -space-x-1.5\">\n                            <ng-container *ngFor=\"let member of board.members.slice(0, 5); trackBy: trackByFn\">\n                                <img\n                                    class=\"flex-0 w-8 h-8 rounded-full ring ring-offset-1 ring-bg-card ring-offset-transparent object-cover\"\n                                    [src]=\"member.avatar\"\n                                    alt=\"Member avatar\">\n                            </ng-container>\n                            <ng-container *ngIf=\"board.members.length > 5\">\n                                <div class=\"flex flex-0 items-center justify-center w-8 h-8 rounded-full ring ring-offset-1 ring-bg-card ring-offset-transparent bg-gray-200 text-gray-500\">\n                                    <div class=\"text-md font-semibold\">\n                                        +{{ board.members.slice(5).length }}\n                                    </div>\n                                </div>\n                            </ng-container>\n                        </div>\n                    </ng-container>\n                    <!-- Last activity -->\n                    <div class=\"flex items-center mt-4 text-md font-md\">\n                        <div class=\"text-secondary\">Edited:</div>\n                        <div class=\"ml-1\">{{formatDateAsRelative(board.lastActivity)}}</div>\n                    </div>\n                </a>\n            </ng-container>\n            <!-- New board -->\n            <div (click)=\"newBoard()\" class=\"flex flex-col items-center justify-center w-56 rounded-lg cursor-pointer border-2 border-gray-300 border-dashed hover:bg-hover transition-colors duration-150 ease-in-out\">\n                <mat-icon\n                    class=\"icon-size-12 text-hint\"\n                    [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n            </div>\n        </div>\n\n    </div>\n\n</div>\n\n\n","import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ScrumboardCardDetailsComponent } from 'app/modules/admin/apps/scrumboard/card/details/details.component';\n\n@Component({\n    selector       : 'scrumboard-card',\n    templateUrl    : './card.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n})\nexport class ScrumboardCardComponent implements OnInit\n{\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _matDialog: MatDialog,\n        private _router: Router,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Launch the modal\n        this._matDialog.open(ScrumboardCardDetailsComponent, {autoFocus: false})\n            .afterClosed()\n            .subscribe(() =>\n            {\n                // Go up twice because card routes are set up like this; \"card/CARD_ID\"\n                this._router.navigate(['./../..'], {relativeTo: this._activatedRoute});\n            });\n    }\n}\n","SCRUMBOARD -> BOARDS -> LIST -> CARD\n","import { TextFieldModule } from '@angular/cdk/text-field';\nimport { DatePipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxChange, MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { Board, Card, Label } from 'app/modules/admin/apps/scrumboard/scrumboard.models';\nimport { ScrumboardService } from 'app/modules/admin/apps/scrumboard/scrumboard.service';\nimport { assign } from 'lodash-es';\nimport { DateTime } from 'luxon';\nimport { debounceTime, Subject, takeUntil, tap } from 'rxjs';\n\n@Component({\n    selector       : 'scrumboard-card-details',\n    templateUrl    : './details.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, MatIconModule, FormsModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, TextFieldModule, NgClass, NgIf, MatDatepickerModule, NgFor, MatCheckboxModule, DatePipe],\n})\nexport class ScrumboardCardDetailsComponent implements OnInit, OnDestroy\n{\n    @ViewChild('labelInput') labelInput: ElementRef<HTMLInputElement>;\n    board: Board;\n    card: Card;\n    cardForm: UntypedFormGroup;\n    labels: Label[];\n    filteredLabels: Label[];\n\n    // Private\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        public matDialogRef: MatDialogRef<ScrumboardCardDetailsComponent>,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _formBuilder: UntypedFormBuilder,\n        private _scrumboardService: ScrumboardService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the board\n        this._scrumboardService.board$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((board) =>\n            {\n                // Board data\n                this.board = board;\n\n                // Get the labels\n                this.labels = this.filteredLabels = board.labels;\n            });\n\n        // Get the card details\n        this._scrumboardService.card$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((card) =>\n            {\n                this.card = card;\n            });\n\n        // Prepare the card form\n        this.cardForm = this._formBuilder.group({\n            id         : [''],\n            title      : ['', Validators.required],\n            description: [''],\n            labels     : [[]],\n            dueDate    : [null],\n        });\n\n        // Fill the form\n        this.cardForm.setValue({\n            id         : this.card.id,\n            title      : this.card.title,\n            description: this.card.description,\n            labels     : this.card.labels,\n            dueDate    : this.card.dueDate,\n        });\n\n        // Update card when there is a value change on the card form\n        this.cardForm.valueChanges\n            .pipe(\n                tap((value) =>\n                {\n                    // Update the card object\n                    this.card = assign(this.card, value);\n                }),\n                debounceTime(300),\n                takeUntil(this._unsubscribeAll),\n            )\n            .subscribe((value) =>\n            {\n                // Update the card on the server\n                this._scrumboardService.updateCard(value.id, value).subscribe();\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Return whether the card has the given label\n     *\n     * @param label\n     */\n    hasLabel(label: Label): boolean\n    {\n        return !!this.card.labels.find(cardLabel => cardLabel.id === label.id);\n    }\n\n    /**\n     * Filter labels\n     *\n     * @param event\n     */\n    filterLabels(event): void\n    {\n        // Get the value\n        const value = event.target.value.toLowerCase();\n\n        // Filter the labels\n        this.filteredLabels = this.labels.filter(label => label.title.toLowerCase().includes(value));\n    }\n\n    /**\n     * Filter labels input key down event\n     *\n     * @param event\n     */\n    filterLabelsInputKeyDown(event): void\n    {\n        // Return if the pressed key is not 'Enter'\n        if ( event.key !== 'Enter' )\n        {\n            return;\n        }\n\n        // If there is no label available...\n        if ( this.filteredLabels.length === 0 )\n        {\n            // Return\n            return;\n        }\n\n        // If there is a label...\n        const label = this.filteredLabels[0];\n        const isLabelApplied = this.card.labels.find(cardLabel => cardLabel.id === label.id);\n\n        // If the found label is already applied to the card...\n        if ( isLabelApplied )\n        {\n            // Remove the label from the card\n            this.removeLabelFromCard(label);\n        }\n        else\n        {\n            // Otherwise add the label to the card\n            this.addLabelToCard(label);\n        }\n    }\n\n    /**\n     * Toggle card label\n     *\n     * @param label\n     * @param change\n     */\n    toggleProductTag(label: Label, change: MatCheckboxChange): void\n    {\n        if ( change.checked )\n        {\n            this.addLabelToCard(label);\n        }\n        else\n        {\n            this.removeLabelFromCard(label);\n        }\n    }\n\n    /**\n     * Add label to the card\n     *\n     * @param label\n     */\n    addLabelToCard(label: Label): void\n    {\n        // Add the label\n        this.card.labels.unshift(label);\n\n        // Update the card form data\n        this.cardForm.get('labels').patchValue(this.card.labels);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Remove label from the card\n     *\n     * @param label\n     */\n    removeLabelFromCard(label: Label): void\n    {\n        // Remove the label\n        this.card.labels.splice(this.card.labels.findIndex(cardLabel => cardLabel.id === label.id), 1);\n\n        // Update the card form data\n        this.cardForm.get('labels').patchValue(this.card.labels);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Check if the given date is overdue\n     */\n    isOverdue(date: string): boolean\n    {\n        return DateTime.fromISO(date).startOf('day') < DateTime.now().startOf('day');\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read the given file for demonstration purposes\n     *\n     * @param file\n     */\n    private _readAsDataURL(file: File): Promise<any>\n    {\n        // Return a new promise\n        return new Promise((resolve, reject) =>\n        {\n            // Create a new reader\n            const reader = new FileReader();\n\n            // Resolve the promise on success\n            reader.onload = (): void =>\n            {\n                resolve(reader.result);\n            };\n\n            // Reject the promise on error\n            reader.onerror = (e): void =>\n            {\n                reject(e);\n            };\n\n            // Read the file as the\n            reader.readAsDataURL(file);\n        });\n    }\n}\n","<style>\n    .mat-mdc-dialog-container{\n        scale: 0.65;translate: 0px -90px !important; min-width:800px;\n    }\n\n    .mat-datepicker-popup {\n        scale:0.7;\n        translate: 0px 70px !important;                \n    }\n</style>\n\n<div class=\"flex flex-col flex-auto\" style=\"\">\n\n    <!-- Header -->\n    <div class=\"flex flex-0 items-center justify-between h-16 pr-3 sm:pr-5 pl-6 sm:pl-8 bg-primary text-on-primary\">\n        <div class=\"text-lg font-medium\">Card</div>\n        <button\n            mat-icon-button\n            (click)=\"matDialogRef.close()\"\n            [tabIndex]=\"-1\">\n            <mat-icon\n                class=\"text-current\"\n                [svgIcon]=\"'heroicons_outline:x-mark'\"></mat-icon>\n        </button>\n    </div>\n\n    <!-- Card form -->\n    <form\n        class=\"flex flex-col flex-0 items-start w-full p-6 sm:p-8 space-y-6\"\n        [formGroup]=\"cardForm\">\n\n        <!-- Title -->\n        <mat-form-field\n            class=\"w-full\"\n            [subscriptSizing]=\"'dynamic'\">\n            <mat-label>Title</mat-label>\n            <textarea\n                matInput\n                [formControlName]=\"'title'\"\n                [rows]=\"1\"\n                cdkTextareaAutosize\n                [cdkAutosizeMinRows]=\"1\">\n            </textarea>\n        </mat-form-field>\n\n        <!-- Description -->\n        <mat-form-field\n            class=\"w-full\"\n            [subscriptSizing]=\"'dynamic'\">\n            <mat-label>Description</mat-label>\n            <textarea\n                matInput\n                [formControlName]=\"'description'\"\n                [rows]=\"1\"\n                cdkTextareaAutosize\n                [cdkAutosizeMinRows]=\"1\">\n            </textarea>\n        </mat-form-field>\n\n        <!-- Due date -->\n        <div>\n            <div class=\"font-medium\">Due date</div>\n            <div\n                class=\"relative flex items-center mt-1.5 px-4 leading-9 rounded-full cursor-pointer\"\n                [ngClass]=\"{'text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700': !card.dueDate,\n                            'text-green-800 bg-green-200 dark:text-green-100 dark:bg-green-500': card.dueDate && !isOverdue(card.dueDate),\n                            'text-red-800 bg-red-200 dark:text-red-100 dark:bg-red-500': card.dueDate && isOverdue(card.dueDate)}\"\n                (click)=\"dueDatePicker.open()\">\n                <mat-icon\n                    class=\"icon-size-5 text-current\"\n                    [svgIcon]=\"'heroicons_solid:calendar'\"></mat-icon>\n                <span class=\"ml-2 text-md font-medium\">\n                    <ng-container *ngIf=\"card.dueDate\">{{card.dueDate | date:'longDate'}}</ng-container>\n                    <ng-container *ngIf=\"!card.dueDate\">Not set</ng-container>\n                </span>\n                <mat-form-field\n                    class=\"fuse-mat-dense invisible absolute inset-0 -mt-2.5 opacity-0 pointer-events-none\"\n                    [subscriptSizing]=\"'dynamic'\">\n                    <input\n                        matInput\n                        [formControlName]=\"'dueDate'\"\n                        [matDatepicker]=\"dueDatePicker\">\n                    <mat-datepicker #dueDatePicker>\n                        <mat-datepicker-actions>\n                            <button\n                                mat-button\n                                (click)=\"cardForm.get('dueDate').setValue(null)\"\n                                matDatepickerCancel>\n                                Clear\n                            </button>\n                            <button\n                                mat-flat-button\n                                [color]=\"'primary'\"\n                                matDatepickerApply>\n                                Select\n                            </button>\n                        </mat-datepicker-actions>\n                    </mat-datepicker>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <!-- Labels -->\n        <div class=\"w-full\">\n            <div class=\"font-medium\">Labels</div>\n            <div class=\"mt-1 rounded-md border border-gray-300 shadow-sm overflow-hidden\">\n                <!-- Header -->\n                <div class=\"flex items-center my-2 mx-3\">\n                    <div class=\"flex items-center flex-auto min-w-0\">\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'heroicons_solid:magnifying-glass'\"></mat-icon>\n                        <input\n                            class=\"min-w-0 ml-2 py-1 border-0\"\n                            type=\"text\"\n                            placeholder=\"Enter label name\"\n                            (input)=\"filterLabels($event)\"\n                            (keydown)=\"filterLabelsInputKeyDown($event)\"\n                            [maxLength]=\"50\">\n                    </div>\n                </div>\n                <!-- Available labels -->\n                <div class=\"max-h-40 leading-none overflow-y-auto border-t\">\n                    <!-- Labels -->\n                    <ng-container *ngFor=\"let label of filteredLabels; trackBy: trackByFn\">\n                        <mat-checkbox\n                            class=\"flex items-center h-10 min-h-10 pl-1 pr-4\"\n                            [color]=\"'primary'\"\n                            [checked]=\"hasLabel(label)\"\n                            (change)=\"toggleProductTag(label, $event)\">\n                            {{label.title}}\n                        </mat-checkbox>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n\n    </form>\n</div>\n","import { IBoard, ICard, ILabel, IList, IMember } from 'app/modules/admin/apps/scrumboard/scrumboard.types';\n\n// -----------------------------------------------------------------------------------------------------\n// @ Board\n// -----------------------------------------------------------------------------------------------------\nexport class Board implements Required<IBoard>\n{\n    id: string | null;\n    title: string;\n    description: string | null;\n    icon: string | null;\n    lastActivity: string | null;\n    lists: List[];\n    labels: Label[];\n    members: Member[];\n\n    /**\n     * Constructor\n     */\n    constructor(board: IBoard)\n    {\n        this.id = board.id || null;\n        this.title = board.title;\n        this.description = board.description || null;\n        this.icon = board.icon || null;\n        this.lastActivity = board.lastActivity || null;\n        this.lists = [];\n        this.labels = [];\n        this.members = [];\n\n        // Lists\n        if ( board.lists )\n        {\n            this.lists = board.lists.map((list) =>\n            {\n                if ( !(list instanceof List) )\n                {\n                    return new List(list);\n                }\n\n                return list;\n            });\n        }\n\n        // Labels\n        if ( board.labels )\n        {\n            this.labels = board.labels.map((label) =>\n            {\n                if ( !(label instanceof Label) )\n                {\n                    return new Label(label);\n                }\n\n                return label;\n            });\n        }\n\n        // Members\n        if ( board.members )\n        {\n            this.members = board.members.map((member) =>\n            {\n                if ( !(member instanceof Member) )\n                {\n                    return new Member(member);\n                }\n\n                return member;\n            });\n        }\n    }\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ List\n// -----------------------------------------------------------------------------------------------------\nexport class List implements Required<IList>\n{\n    id: string | null;\n    boardId: string;\n    position: number;\n    title: string;\n    cards: Card[];\n\n    /**\n     * Constructor\n     */\n    constructor(list: IList)\n    {\n        this.id = list.id || null;\n        this.boardId = list.boardId;\n        this.position = list.position;\n        this.title = list.title;\n        this.cards = [];\n\n        // Cards\n        if ( list.cards )\n        {\n            this.cards = list.cards.map((card) =>\n            {\n                if ( !(card instanceof Card) )\n                {\n                    return new Card(card);\n                }\n\n                return card;\n            });\n        }\n    }\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ Card\n// -----------------------------------------------------------------------------------------------------\nexport class Card implements Required<ICard>\n{\n    id: string | null;\n    boardId: string;\n    listId: string;\n    position: number;\n    title: string;\n    description: string | null;\n    labels: Label[];\n    dueDate: string | null;\n\n    /**\n     * Constructor\n     */\n    constructor(card: ICard)\n    {\n        this.id = card.id || null;\n        this.boardId = card.boardId;\n        this.listId = card.listId;\n        this.position = card.position;\n        this.title = card.title;\n        this.description = card.description || null;\n        this.labels = [];\n        this.dueDate = card.dueDate || null;\n\n        // Labels\n        if ( card.labels )\n        {\n            this.labels = card.labels.map((label) =>\n            {\n                if ( !(label instanceof Label) )\n                {\n                    return new Label(label);\n                }\n\n                return label;\n            });\n        }\n    }\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ Member\n// -----------------------------------------------------------------------------------------------------\nexport class Member implements Required<IMember>\n{\n    id: string | null;\n    name: string;\n    avatar: string | null;\n\n    /**\n     * Constructor\n     */\n    constructor(member: IMember)\n    {\n        this.id = member.id || null;\n        this.name = member.name;\n        this.avatar = member.avatar || null;\n    }\n}\n\n// -----------------------------------------------------------------------------------------------------\n// @ Label\n// -----------------------------------------------------------------------------------------------------\nexport class Label implements Required<ILabel>\n{\n    id: string | null;\n    boardId: string;\n    title: string;\n\n    /**\n     * Constructor\n     */\n    constructor(label: ILabel)\n    {\n        this.id = label.id || null;\n        this.boardId = label.boardId;\n        this.title = label.title;\n    }\n}\n","import { inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, Routes } from '@angular/router';\nimport { ScrumboardBoardComponent } from 'app/modules/admin/apps/scrumboard/board/board.component';\nimport { ScrumboardBoardsComponent } from 'app/modules/admin/apps/scrumboard/boards/boards.component';\nimport { ScrumboardCardComponent } from 'app/modules/admin/apps/scrumboard/card/card.component';\nimport { Board } from 'app/modules/admin/apps/scrumboard/scrumboard.models';\nimport { ScrumboardService } from 'app/modules/admin/apps/scrumboard/scrumboard.service';\nimport { catchError, Observable, throwError } from 'rxjs';\n\n/**\n * Board resolver\n *\n * @param route\n * @param state\n */\nconst boardResolver = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Board> =>\n{\n    const scrumboardService = inject(ScrumboardService);\n    const router = inject(Router);\n\n    return scrumboardService.getBoard(route.paramMap.get('boardId'))\n        .pipe(\n            // Error here means the requested board is not available\n            catchError((error) =>\n            {\n                // Log the error\n                console.error(error);\n\n                // Get the parent url\n                const parentUrl = state.url.split('/').slice(0, -1).join('/');\n\n                // Navigate to there\n                router.navigateByUrl(parentUrl);\n\n                // Throw an error\n                return throwError(error);\n            }),\n        );\n};\n\n/**\n * Card resolver\n *\n * @param route\n * @param state\n */\nconst cardResolver = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\n{\n    const scrumboardService = inject(ScrumboardService);\n    const router = inject(Router);\n\n    return scrumboardService.getCard(route.paramMap.get('cardId'))\n        .pipe(\n            // Error here means the requested card is not available\n            catchError((error) =>\n            {\n                // Log the error\n                console.error(error);\n\n                // Get the parent url\n                const parentUrl = state.url.split('/').slice(0, -1).join('/');\n\n                // Navigate to there\n                router.navigateByUrl(parentUrl);\n\n                // Throw an error\n                return throwError(error);\n            }),\n        );\n};\n\nexport default [\n    {\n        path     : '',\n        component: ScrumboardBoardsComponent,\n        resolve  : {\n            boards: () => inject(ScrumboardService).getBoards(),\n        },\n    },\n    {\n        path     : ':boardId',\n        component: ScrumboardBoardComponent,\n        resolve  : {\n            board: boardResolver,\n        },\n        children : [\n            {\n                path     : 'card/:cardId',\n                component: ScrumboardCardComponent,\n                resolve  : {\n                    card: cardResolver,\n                },\n            },\n        ],\n    },\n] as Routes;\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Board, Card, Label, List } from 'app/modules/admin/apps/scrumboard/scrumboard.models';\nimport { BehaviorSubject, map, Observable, of, switchMap, take, tap, throwError } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class ScrumboardService\n{\n    // Private\n    private _board: BehaviorSubject<Board | null>;\n    private _boards: BehaviorSubject<Board[] | null>;\n    private _card: BehaviorSubject<Card | null>;\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _httpClient: HttpClient,\n    )\n    {\n        // Set the private defaults\n        this._board = new BehaviorSubject(null);\n        this._boards = new BehaviorSubject(null);\n        this._card = new BehaviorSubject(null);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for board\n     */\n    get board$(): Observable<Board>\n    {\n        return this._board.asObservable();\n    }\n\n    /**\n     * Getter for boards\n     */\n    get boards$(): Observable<Board[]>\n    {\n        return this._boards.asObservable();\n    }\n\n    /**\n     * Getter for card\n     */\n    get card$(): Observable<Card>\n    {\n        return this._card.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get boards\n     */\n    getBoards(): Observable<Board[]>\n    {\n        return this._httpClient.get<Board[]>('api/apps/scrumboard/boards').pipe(\n            map((response) => {\n                if(response)\n                    return response.map(item => new Board(item))\n\n                return []\n            }),\n            tap(boards => this._boards.next(boards)),\n        );\n    }\n\n    updateBoards() : Observable<Board[]>\n    {\n        return this._httpClient.patch<Board[]>('api/apps/scrumboard/boards', this._boards.getValue()).pipe(\n            tap((boards) => {\n                this._boards.next(boards)\n            }),\n        );\n    }\n\n    /**\n     * Get board\n     *\n     * @param id\n     */\n    getBoard(id: string): Observable<Board>\n    {\n        let boards = this._boards.getValue()\n\n        let board = null\n        for(let _board of boards){\n            if(_board.id == id){\n                board = _board\n                break;\n            }\n        }\n\n        this._board.next(board)\n\n        let resp = new BehaviorSubject<Board>(board)\n        return resp.asObservable()\n    }\n\n    /**\n     * Create board\n     *\n     * @param board\n     */\n    createBoard(board: Board): Observable<Board>\n    {\n        let boards = this._boards.getValue() || []\n        boards.push(board)        \n        this._boards.next(boards)\n\n        this.updateBoards().subscribe()\n\n        let resp = new BehaviorSubject<Board>(board)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the board\n     *\n     * @param id\n     * @param board\n     */\n    updateBoard(id: string, board: Board): Observable<Board>\n    {\n        let boards = this._boards.getValue()\n\n        // Find the index of the updated board\n        const index = boards.findIndex(item => item.id === id);\n\n        // Update the board\n        boards[index] = board;\n\n        // Update the boards\n        this._boards.next(boards);\n\n        this.updateBoards().subscribe()\n\n        let resp = new BehaviorSubject<Board>(board)\n        return resp.asObservable()\n    }\n\n    /**\n     * Delete the board\n     *\n     * @param id\n     */\n    deleteBoard(id: string): Observable<boolean>\n    {\n        let boards = this._boards.getValue()\n\n        // Find the index of the deleted board\n        const index = boards.findIndex(item => item.id === id);\n\n        // Delete the board\n        boards.splice(index, 1);\n\n        // Update the boards\n        this._boards.next(boards);\n\n        this.updateBoards().subscribe()\n        \n        let resp = new BehaviorSubject<boolean>(true)\n        return resp.asObservable()\n    }\n\n    /**\n     * Create list\n     *\n     * @param list\n     */\n    createList(list: List): Observable<List>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Update the board lists with the new list\n        board.lists = [...board.lists, list];\n\n        // Sort the board lists\n        board.lists.sort((a, b) => a.position - b.position);\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoards().subscribe()\n\n        let resp = new BehaviorSubject<List>(list)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the list\n     *\n     * @param list\n     */\n    updateList(list: List): Observable<List>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Find the index of the updated list\n        const index = board.lists.findIndex(item => item.id === list.id);\n\n        // Update the list\n        board.lists[index] = list;\n\n        // Sort the board lists\n        board.lists.sort((a, b) => a.position - b.position);\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoards().subscribe()\n\n        let resp = new BehaviorSubject<List>(list)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the lists\n     *\n     * @param lists\n     */\n    updateLists(lists: List[]): Observable<List[]>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Go through the updated lists\n        lists.forEach((updatedList) =>\n        {\n            // Find the index of the updated list\n            const index = board.lists.findIndex(item => item.id === updatedList.id);\n\n            // Update the list\n            board.lists[index] = updatedList;\n        });\n\n        // Sort the board lists\n        board.lists.sort((a, b) => a.position - b.position);\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        let resp = new BehaviorSubject<List[]>(lists)\n        return resp.asObservable()\n    }\n\n    /**\n     * Delete the list\n     *\n     * @param id\n     */\n    deleteList(id: string): Observable<boolean>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Find the index of the deleted list\n        const index = board.lists.findIndex(item => item.id === id);\n\n        // Delete the list\n        board.lists.splice(index, 1);\n\n        // Sort the board lists\n        board.lists.sort((a, b) => a.position - b.position);\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        let resp = new BehaviorSubject<boolean>(true)\n        return resp.asObservable()\n    }\n\n    /**\n     * Get card\n     */\n    getCard(id: string): Observable<Card>\n    {\n        let board = this._board.getValue()\n\n        // Find the card\n        const card = board.lists.find(list => list.cards.some(item => item.id === id))\n            .cards.find(item => item.id === id);\n\n        // Update the card\n        this._card.next(card);\n\n        // Return the card\n        let resp = new BehaviorSubject<Card>(card)\n        return resp.asObservable()\n    }\n\n    /**\n     * Create card\n     *\n     * @param card\n     */\n    createCard(card: Card): Observable<Card>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Find the list and push the new card in it\n        board.lists.forEach((listItem, index, list) =>\n        {\n            if ( listItem.id === card.listId )\n            {\n                list[index].cards.push(card);\n            }\n        });\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        // Return the card\n        let resp = new BehaviorSubject<Card>(card)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the card\n     *\n     * @param id\n     * @param card\n     */\n    updateCard(id: string, card: Card): Observable<Card>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Find the card and update it\n        board.lists.forEach((listItem) =>\n        {\n            listItem.cards.forEach((cardItem, index, array) =>\n            {\n                if ( cardItem.id === id )\n                {\n                    array[index] = card;\n                }\n            });\n        });\n\n        // Update the board\n        this._board.next(board);\n\n        // Update the card\n        this._card.next(card);\n\n        this.updateBoard(board.id, board).subscribe()\n        \n        // Return the card\n        let resp = new BehaviorSubject<Card>(card)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the cards\n     *\n     * @param cards\n     */\n    updateCards(cards: Card[]): Observable<Card[]>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Go through the updated cards\n        cards.forEach((updatedCard) =>\n        {\n            // Find the index of the updated card's list\n            const listIndex = board.lists.findIndex(list => list.id === updatedCard.listId);\n\n            // Find the index of the updated card\n            const cardIndex = board.lists[listIndex].cards.findIndex(item => item.id === updatedCard.id);\n\n            // Update the card\n            board.lists[listIndex].cards[cardIndex] = updatedCard;\n\n            // Sort the cards\n            board.lists[listIndex].cards.sort((a, b) => a.position - b.position);\n        });\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        let resp = new BehaviorSubject<Card[]>(cards)\n        return resp.asObservable()\n    }\n\n    /**\n     * Delete the card\n     *\n     * @param id\n     */\n    deleteCard(id: string): Observable<boolean>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Find the card and delete it\n        board.lists.forEach((listItem) =>\n        {\n            listItem.cards.forEach((cardItem, index, array) =>\n            {\n                if ( cardItem.id === id )\n                {\n                    array.splice(index, 1);\n                }\n            });\n        });\n\n        // Update the board\n        this._board.next(board);\n\n        // Update the card\n        this._card.next(null);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        let resp = new BehaviorSubject<boolean>(true)\n        return resp.asObservable()\n    }\n\n    /**\n     * Create label\n     *\n     * @param label\n     */\n    createLabel(label: Label): Observable<Label>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Update the board labels with the new label\n        board.labels = [...board.labels, label];\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        // Return new label from observable\n        let resp = new BehaviorSubject<Label>(label)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the label\n     *\n     * @param id\n     * @param label\n     */\n    updateLabel(id: string, label: Label): Observable<Label>\n    {\n        // Get the board value\n        const board = this._board.value;\n\n        // Find the index of the updated label\n        const index = board.labels.findIndex(item => item.id === id);\n\n        // Update the label\n        board.labels[index] = label;\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        // Return new label from observable\n        let resp = new BehaviorSubject<Label>(label)\n        return resp.asObservable()\n    }\n\n    /**\n     * Delete the label\n     *\n     * @param id\n     */\n    deleteLabel(id: string): Observable<boolean>\n    {\n        // Get the board value\n        const board = this._board.value;\n        \n        // Find the index of the deleted label\n        const index = board.labels.findIndex(item => item.id === id);\n\n        // Delete the label\n        board.labels.splice(index, 1);\n\n        // If the label is deleted...\n        // Remove the label from any card that uses it\n        board.lists.forEach((list) =>\n        {\n            list.cards.forEach((card) =>\n            {\n                const labelIndex = card.labels.findIndex(label => label.id === id);\n                if ( labelIndex > -1 )\n                {\n                    card.labels.splice(labelIndex, 1);\n                }\n            });\n        });\n\n        // Update the board\n        this._board.next(board);\n\n        this.updateBoard(board.id, board).subscribe()\n\n        // Return the deleted status\n        let resp = new BehaviorSubject<boolean>(true)\n        return resp.asObservable()\n    }\n\n    /**\n     * Search within board cards\n     *\n     * @param query\n     */\n    search(query: string): Observable<Card[] | null>\n    {\n        // @TODO: Update the board cards based on the search results\n        return this._httpClient.get<Card[] | null>('api/apps/scrumboard/board/search', {params: {query}});\n    }\n}\n"],"names":["TextFieldModule","NgClass","EventEmitter","FormsModule","ReactiveFormsModule","MatButtonModule","MatIconModule","ScrumboardBoardAddCardComponent","constructor","_changeDetectorRef","_formBuilder","buttonTitle","saved","formVisible","ngOnInit","form","group","title","save","get","value","trim","next","setValue","setTimeout","titleInput","nativeElement","titleAutosize","reset","markForCheck","toggleFormVisibility","focus","_","i0","ɵɵdirectiveInject","ChangeDetectorRef","i1","UntypedFormBuilder","_2","selectors","viewQuery","ScrumboardBoardAddCardComponent_Query","rf","ctx","ɵɵelementStart","ɵɵlistener","ScrumboardBoardAddCardComponent_Template_button_click_2_listener","ɵɵelement","ɵɵtext","ɵɵelementEnd","ScrumboardBoardAddCardComponent_Template_textarea_keydown_enter_8_listener","ScrumboardBoardAddCardComponent_Template_button_click_13_listener","ScrumboardBoardAddCardComponent_Template_button_click_15_listener","ɵɵclassProp","ɵɵadvance","ɵɵproperty","ɵɵpureFunction1","_c2","ɵɵtextInterpolate","_c3","i2","MatButton","MatIconButton","i3","MatIcon","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i4","CdkTextareaAutosize","encapsulation","changeDetection","ScrumboardBoardAddListComponent","ScrumboardBoardAddListComponent_Query","ScrumboardBoardAddListComponent_Template_button_click_2_listener","ScrumboardBoardAddListComponent_Template_input_keydown_enter_7_listener","ScrumboardBoardAddListComponent_Template_button_click_10_listener","ScrumboardBoardAddListComponent_Template_button_click_12_listener","_c1","CdkDrag","CdkDragHandle","CdkDropList","CdkDropListGroup","moveItemInArray","transferArrayItem","CdkScrollable","DatePipe","NgFor","NgIf","MatMenuModule","RouterLink","RouterOutlet","Card","List","DateTime","Subject","takeUntil","FuseMockApiUtils","$","ɵɵelementContainerStart","ɵɵelementContainerEnd","card_r5","coverImage","ɵɵsanitizeUrl","ɵɵtextInterpolate1","label_r11","ɵɵtemplate","ScrumboardBoardComponent_ng_container_19_ng_container_21_ng_container_5_ng_container_3_Template","labels","ctx_r7","trackByFn","_c0","ctx_r8","isOverdue","dueDate","ɵɵpipeBind2","ScrumboardBoardComponent_ng_container_19_ng_container_21_ng_container_2_Template","ScrumboardBoardComponent_ng_container_19_ng_container_21_ng_container_5_Template","ScrumboardBoardComponent_ng_container_19_ng_container_21_ng_container_6_Template","id","length","ScrumboardBoardComponent_ng_container_19_Template_input_focusout_4_listener","$event","restoredCtx","ɵɵrestoreView","_r15","list_r1","$implicit","ctx_r14","ɵɵnextContext","ɵɵresetView","updateListTitle","ScrumboardBoardComponent_ng_container_19_Template_input_keydown_enter_4_listener","_r2","ɵɵreference","blur","ScrumboardBoardComponent_ng_container_19_Template_button_click_13_listener","ctx_r17","renameList","ScrumboardBoardComponent_ng_container_19_Template_button_click_16_listener","ctx_r18","deleteList","ScrumboardBoardComponent_ng_container_19_Template_div_cdkDropListDropped_20_listener","ctx_r19","cardDropped","ScrumboardBoardComponent_ng_container_19_ng_container_21_Template","ScrumboardBoardComponent_ng_container_19_Template_scrumboard_board_add_card_saved_22_listener","ctx_r20","addCard","cards","_r3","ctx_r0","ScrumboardBoardComponent","_fuseConfirmationService","_scrumboardService","router","_positionStep","_maxListCount","_maxPosition","_unsubscribeAll","listTitleForm","board$","pipe","subscribe","board","waitUpdateBoardName","on","clearTimeout","html","updateBoard","waitUpdateBoardDescription","description","deleteConfirm","css","deleteBoard","navigate","ngOnDestroy","complete","off","listTitleInput","addList","lists","list","guid","boardId","position","createList","event","element","target","newTitle","updateList","confirmation","open","message","actions","confirm","label","afterClosed","result","card","listId","createCard","listDropped","container","data","previousIndex","currentIndex","updated","_calculatePositions","updateLists","previousContainer","updateCards","date","fromISO","startOf","now","index","item","items","currentItem","prevItem","nextItem","Number","isInteger","map","FuseConfirmationService","ScrumboardService","Router","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ScrumboardBoardComponent_Template","ScrumboardBoardComponent_Template_div_cdkDropListDropped_17_listener","ScrumboardBoardComponent_ng_container_19_Template","ScrumboardBoardComponent_Template_scrumboard_board_add_list_saved_20_listener","ɵɵpureFunction0","i5","MatAnchor","i6","i7","MatMenu","MatMenuItem","MatMenuTrigger","styles","member_r5","avatar","board_r1","members","slice","ScrumboardBoardsComponent_ng_container_3_ng_container_8_ng_container_3_Template","ScrumboardBoardsComponent_ng_container_3_ng_container_8_ng_container_4_Template","ctx_r2","ScrumboardBoardsComponent_ng_container_3_ng_container_8_Template","icon","formatDateAsRelative","lastActivity","ScrumboardBoardsComponent","boards$","boards","toRelative","newBoard","Date","toISOString","createBoard","ScrumboardBoardsComponent_Template","ScrumboardBoardsComponent_ng_container_3_Template","ScrumboardBoardsComponent_Template_div_click_4_listener","ScrumboardCardDetailsComponent","ScrumboardCardComponent","_activatedRoute","_matDialog","_router","autoFocus","relativeTo","ActivatedRoute","MatDialog","ScrumboardCardComponent_Template","Validators","MatCheckboxModule","MatDatepickerModule","MatFormFieldModule","MatInputModule","assign","debounceTime","tap","ScrumboardCardDetailsComponent_ng_container_43_Template_mat_checkbox_change_1_listener","_r6","label_r4","ctx_r5","toggleProductTag","ctx_r3","hasLabel","matDialogRef","filteredLabels","card$","cardForm","required","valueChanges","updateCard","find","cardLabel","filterLabels","toLowerCase","filter","includes","filterLabelsInputKeyDown","key","isLabelApplied","removeLabelFromCard","addLabelToCard","change","checked","unshift","patchValue","splice","findIndex","_readAsDataURL","file","Promise","resolve","reject","reader","FileReader","onload","onerror","e","readAsDataURL","MatDialogRef","ScrumboardCardDetailsComponent_Query","ScrumboardCardDetailsComponent_Template_button_click_4_listener","close","ScrumboardCardDetailsComponent_Template_div_click_20_listener","_r7","ScrumboardCardDetailsComponent_ng_container_23_Template","ScrumboardCardDetailsComponent_ng_container_24_Template","ScrumboardCardDetailsComponent_Template_button_click_30_listener","ScrumboardCardDetailsComponent_Template_input_input_41_listener","ScrumboardCardDetailsComponent_Template_input_keydown_41_listener","ScrumboardCardDetailsComponent_ng_container_43_Template","ɵɵpureFunction3","MatFormField","MatLabel","MatInput","i8","i9","MatDatepicker","MatDatepickerInput","MatDatepickerActions","MatDatepickerCancel","MatDatepickerApply","i10","MatCheckbox","Board","Label","member","Member","name","inject","catchError","throwError","boardResolver","route","state","scrumboardService","getBoard","paramMap","error","console","parentUrl","url","split","join","navigateByUrl","cardResolver","getCard","path","component","getBoards","children","BehaviorSubject","_httpClient","_board","_boards","_card","asObservable","response","updateBoards","patch","getValue","resp","push","sort","a","b","forEach","updatedList","some","listItem","cardItem","array","updatedCard","listIndex","cardIndex","deleteCard","createLabel","updateLabel","deleteLabel","labelIndex","search","query","params","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}