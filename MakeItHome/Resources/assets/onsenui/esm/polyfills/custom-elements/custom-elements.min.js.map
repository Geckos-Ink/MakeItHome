{"version":3,"sources":["src/AlreadyConstructedMarker.js","src/Utilities.js","src/CustomElementInternals.js","src/CustomElementState.js","src/DocumentConstructionObserver.js","src/Deferred.js","src/CustomElementRegistry.js","src/Patch/Native.js","src/Patch/HTMLElement.js","src/custom-elements.js","src/Patch/Interface/ParentNode.js","src/Patch/Document.js","src/Patch/Node.js","src/Patch/Interface/ChildNode.js","src/Patch/Element.js"],"names":["$jscompDefaultExport","AlreadyConstructedMarker","reservedTagList","Set","isValidCustomElementName$$module$$src$Utilities","isValidCustomElementName","localName","reserved","has","validForm","test","isConnected$$module$$src$Utilities","isConnected","node","nativeValue","undefined","current","__CE_isImportDocument","Document","parentNode","window","ShadowRoot","host","nextSiblingOrAncestorSibling$$module$$src$Utilities","nextSiblingOrAncestorSibling","root","start","nextSibling","walkDeepDescendantElements$$module$$src$Utilities","walkDeepDescendantElements","callback","visitedImports","nodeType","Node","ELEMENT_NODE","element","getAttribute","importNode","import","add","child","firstChild","shadowRoot","__CE_shadowRoot","setPropertyUnchecked$$module$$src$Utilities","setPropertyUnchecked","destination","name","value","constructor","CustomElementInternals","_localNameToDefinition","Map","_constructorToDefinition","_patches","_hasPatches","setDefinition","definition","set","addPatch","listener","push","patchTree","patch","__CE_patched","i","length","connectTree","elements","custom","__CE_state","connectedCallback","upgradeElement","disconnectTree","disconnectedCallback","patchAndUpgradeTree","gatherElements","readyState","__CE_hasRegistry","addEventListener","__CE_documentLoadHandled","delete","localNameToDefinition","get","constructionStack","result","Error","pop","e","failed","__CE_definition","attributeChangedCallback","observedAttributes","call","__CE_isConnectedCallbackCalled","oldValue","newValue","namespace","indexOf","DocumentConstructionObserver","internals","doc","_internals","_document","_observer","MutationObserver","_handleMutations","bind","observe","childList","subtree","disconnect","mutations","addedNodes","j","Deferred","_resolve","_value","_promise","Promise","resolve","CustomElementRegistry","_elementDefinitionIsRunning","_whenDefinedDeferred","_flushCallback","this._flushCallback","fn","_flushPending","_unflushedLocalNames","_documentConstructionObserver","document","define","Function","TypeError","SyntaxError","adoptedCallback","getCallback","callbackValue","prototype","Object","_flush","shift","deferred","whenDefined","reject","prior","polyfillWrapFlushCallback","outer","inner","flush","Document_createElement","createElement","Document_createElementNS","createElementNS","Document_importNode","Document_prepend","Document_append","Node_cloneNode","cloneNode","Node_appendChild","appendChild","Node_insertBefore","insertBefore","Node_removeChild","removeChild","Node_replaceChild","replaceChild","Node_textContent","getOwnPropertyDescriptor","Element_attachShadow","Element","Element_innerHTML","Element_getAttribute","Element_setAttribute","setAttribute","Element_removeAttribute","removeAttribute","Element_getAttributeNS","getAttributeNS","Element_setAttributeNS","setAttributeNS","Element_removeAttributeNS","removeAttributeNS","Element_insertAdjacentElement","Element_prepend","Element_append","Element_before","Element_after","Element_replaceWith","Element_remove","HTMLElement","HTMLElement_innerHTML","HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$HTMLElement","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElement.call","setPrototypeOf","lastIndex","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement","$jscompDefaultExport$$module$$src$Patch$Interface$ParentNode","builtIn","connectedBefore","nodes","filter","prepend","apply","append","$jscompDefaultExport$$module$$src$Patch$Document","deep","clone","$jscompDefaultExport$$module$$src$Patch$Native.Document_importNode.call","NS_HTML","$jscompDefaultExport$$module$$src$Patch$Native.Document_createElementNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Document_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Document_append","$jscompDefaultExport$$module$$src$Patch$Node","patch_textContent","baseDescriptor","defineProperty","enumerable","configurable","assignedValue","TEXT_NODE","removedNodes","childNodes","childNodesLength","Array","refNode","DocumentFragment","insertedNodes","slice","nativeResult","$jscompDefaultExport$$module$$src$Patch$Native.Node_insertBefore.call","nodeWasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_appendChild.call","$jscompDefaultExport$$module$$src$Patch$Native.Node_cloneNode.call","ownerDocument","$jscompDefaultExport$$module$$src$Patch$Native.Node_removeChild.call","nodeToInsert","nodeToRemove","$jscompDefaultExport$$module$$src$Patch$Native.Node_replaceChild.call","nodeToInsertWasConnected","thisIsConnected","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent","$jscompDefaultExport$$module$$src$Patch$Native.Node_textContent.get","parts","textContent","join","createTextNode","$jscompDefaultExport$$module$$src$Patch$Interface$ChildNode","$jscompDefaultExport$$module$$src$Patch$Native.Element_before","$jscompDefaultExport$$module$$src$Patch$Native.Element_after","wasConnected","$jscompDefaultExport$$module$$src$Patch$Native.Element_replaceWith","$jscompDefaultExport$$module$$src$Patch$Native.Element_remove","$jscompDefaultExport$$module$$src$Patch$Element","patch_innerHTML","htmlString","removedElements","patch_insertAdjacentElement","baseMethod","where","insertedElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow","init","$jscompDefaultExport$$module$$src$Patch$Native.Element_attachShadow.call","console","warn","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.Element_innerHTML.get","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_innerHTML.get","rawDiv","innerHTML","content","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_setAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_getAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttribute.call","$jscompDefaultExport$$module$$src$Patch$Native.Element_removeAttributeNS.call","$jscompDefaultExport$$module$$src$Patch$Native.HTMLElement_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_insertAdjacentElement","$jscompDefaultExport$$module$$src$Patch$Native.Element_prepend","$jscompDefaultExport$$module$$src$Patch$Native.Element_append","priorCustomElements","customElements"],"mappings":"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","file":"custom-elements.min.js","sourcesContent":["/**\n * This class exists only to work around Closure's lack of a way to describe\n * singletons. It represents the 'already constructed marker' used in custom\n * element construction stacks.\n *\n * https://html.spec.whatwg.org/#concept-already-constructed-marker\n */\nclass AlreadyConstructedMarker {}\n\nexport default new AlreadyConstructedMarker();\n","const reservedTagList = new Set([\n  'annotation-xml',\n  'color-profile',\n  'font-face',\n  'font-face-src',\n  'font-face-uri',\n  'font-face-format',\n  'font-face-name',\n  'missing-glyph',\n]);\n\n/**\n * @param {string} localName\n * @returns {boolean}\n */\nexport function isValidCustomElementName(localName) {\n  const reserved = reservedTagList.has(localName);\n  const validForm = /^[a-z][.0-9_a-z]*-[\\-.0-9_a-z]*$/.test(localName);\n  return !reserved && validForm;\n}\n\n/**\n * @private\n * @param {!Node} node\n * @return {boolean}\n */\nexport function isConnected(node) {\n  // Use `Node#isConnected`, if defined.\n  const nativeValue = node.isConnected;\n  if (nativeValue !== undefined) {\n    return nativeValue;\n  }\n\n  /** @type {?Node|undefined} */\n  let current = node;\n  while (current && !(current.__CE_isImportDocument || current instanceof Document)) {\n    current = current.parentNode || (window.ShadowRoot && current instanceof ShadowRoot ? current.host : undefined);\n  }\n  return !!(current && (current.__CE_isImportDocument || current instanceof Document));\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextSiblingOrAncestorSibling(root, start) {\n  let node = start;\n  while (node && node !== root && !node.nextSibling) {\n    node = node.parentNode;\n  }\n  return (!node || node === root) ? null : node.nextSibling;\n}\n\n/**\n * @param {!Node} root\n * @param {!Node} start\n * @return {?Node}\n */\nfunction nextNode(root, start) {\n  return start.firstChild ? start.firstChild : nextSiblingOrAncestorSibling(root, start);\n}\n\n/**\n * @param {!Node} root\n * @param {!function(!Element)} callback\n * @param {!Set<Node>=} visitedImports\n */\nexport function walkDeepDescendantElements(root, callback, visitedImports = new Set()) {\n  let node = root;\n  while (node) {\n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = /** @type {!Element} */(node);\n\n      callback(element);\n\n      const localName = element.localName;\n      if (localName === 'link' && element.getAttribute('rel') === 'import') {\n        // If this import (polyfilled or not) has it's root node available,\n        // walk it.\n        const importNode = /** @type {!Node} */ (element.import);\n        if (importNode instanceof Node && !visitedImports.has(importNode)) {\n          // Prevent multiple walks of the same import root.\n          visitedImports.add(importNode);\n\n          for (let child = importNode.firstChild; child; child = child.nextSibling) {\n            walkDeepDescendantElements(child, callback, visitedImports);\n          }\n        }\n\n        // Ignore descendants of import links to prevent attempting to walk the\n        // elements created by the HTML Imports polyfill that we just walked\n        // above.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      } else if (localName === 'template') {\n        // Ignore descendants of templates. There shouldn't be any descendants\n        // because they will be moved into `.content` during construction in\n        // browsers that support template but, in case they exist and are still\n        // waiting to be moved by a polyfill, they will be ignored.\n        node = nextSiblingOrAncestorSibling(root, element);\n        continue;\n      }\n\n      // Walk shadow roots.\n      const shadowRoot = element.__CE_shadowRoot;\n      if (shadowRoot) {\n        for (let child = shadowRoot.firstChild; child; child = child.nextSibling) {\n          walkDeepDescendantElements(child, callback, visitedImports);\n        }\n      }\n    }\n\n    node = nextNode(root, node);\n  }\n}\n\n/**\n * Used to suppress Closure's \"Modifying the prototype is only allowed if the\n * constructor is in the same scope\" warning without using\n * `@suppress {newCheckTypes, duplicate}` because `newCheckTypes` is too broad.\n *\n * @param {!Object} destination\n * @param {string} name\n * @param {*} value\n */\nexport function setPropertyUnchecked(destination, name, value) {\n  destination[name] = value;\n}\n","import * as Utilities from './Utilities.js';\nimport CEState from './CustomElementState.js';\n\nexport default class CustomElementInternals {\n  constructor() {\n    /** @type {!Map<string, !CustomElementDefinition>} */\n    this._localNameToDefinition = new Map();\n\n    /** @type {!Map<!Function, !CustomElementDefinition>} */\n    this._constructorToDefinition = new Map();\n\n    /** @type {!Array<!function(!Node)>} */\n    this._patches = [];\n\n    /** @type {boolean} */\n    this._hasPatches = false;\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!CustomElementDefinition} definition\n   */\n  setDefinition(localName, definition) {\n    this._localNameToDefinition.set(localName, definition);\n    this._constructorToDefinition.set(definition.constructor, definition);\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!CustomElementDefinition|undefined}\n   */\n  localNameToDefinition(localName) {\n    return this._localNameToDefinition.get(localName);\n  }\n\n  /**\n   * @param {!Function} constructor\n   * @return {!CustomElementDefinition|undefined}\n   */\n  constructorToDefinition(constructor) {\n    return this._constructorToDefinition.get(constructor);\n  }\n\n  /**\n   * @param {!function(!Node)} listener\n   */\n  addPatch(listener) {\n    this._hasPatches = true;\n    this._patches.push(listener);\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patchTree(node) {\n    if (!this._hasPatches) return;\n\n    Utilities.walkDeepDescendantElements(node, element => this.patch(element));\n  }\n\n  /**\n   * @param {!Node} node\n   */\n  patch(node) {\n    if (!this._hasPatches) return;\n\n    if (node.__CE_patched) return;\n    node.__CE_patched = true;\n\n    for (let i = 0; i < this._patches.length; i++) {\n      this._patches[i](node);\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  connectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        if (Utilities.isConnected(element)) {\n          this.connectedCallback(element);\n        }\n      } else {\n        this.upgradeElement(element);\n      }\n    }\n  }\n\n  /**\n   * @param {!Node} root\n   */\n  disconnectTree(root) {\n    const elements = [];\n\n    Utilities.walkDeepDescendantElements(root, element => elements.push(element));\n\n    for (let i = 0; i < elements.length; i++) {\n      const element = elements[i];\n      if (element.__CE_state === CEState.custom) {\n        this.disconnectedCallback(element);\n      }\n    }\n  }\n\n  /**\n   * Upgrades all uncustomized custom elements at and below a root node for\n   * which there is a definition. When custom element reaction callbacks are\n   * assumed to be called synchronously (which, by the current DOM / HTML spec\n   * definitions, they are *not*), callbacks for both elements customized\n   * synchronously by the parser and elements being upgraded occur in the same\n   * relative order.\n   *\n   * NOTE: This function, when used to simulate the construction of a tree that\n   * is already created but not customized (i.e. by the parser), does *not*\n   * prevent the element from reading the 'final' (true) state of the tree. For\n   * example, the element, during truly synchronous parsing / construction would\n   * see that it contains no children as they have not yet been inserted.\n   * However, this function does not modify the tree, the element will\n   * (incorrectly) have children. Additionally, self-modification restrictions\n   * for custom element constructors imposed by the DOM spec are *not* enforced.\n   *\n   *\n   * The following nested list shows the steps extending down from the HTML\n   * spec's parsing section that cause elements to be synchronously created and\n   * upgraded:\n   *\n   * The \"in body\" insertion mode:\n   * https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody\n   * - Switch on token:\n   *   .. other cases ..\n   *   -> Any other start tag\n   *      - [Insert an HTML element](below) for the token.\n   *\n   * Insert an HTML element:\n   * https://html.spec.whatwg.org/multipage/syntax.html#insert-an-html-element\n   * - Insert a foreign element for the token in the HTML namespace:\n   *   https://html.spec.whatwg.org/multipage/syntax.html#insert-a-foreign-element\n   *   - Create an element for a token:\n   *     https://html.spec.whatwg.org/multipage/syntax.html#create-an-element-for-the-token\n   *     - Will execute script flag is true?\n   *       - (Element queue pushed to the custom element reactions stack.)\n   *     - Create an element:\n   *       https://dom.spec.whatwg.org/#concept-create-element\n   *       - Sync CE flag is true?\n   *         - Constructor called.\n   *         - Self-modification restrictions enforced.\n   *       - Sync CE flag is false?\n   *         - (Upgrade reaction enqueued.)\n   *     - Attributes appended to element.\n   *       (`attributeChangedCallback` reactions enqueued.)\n   *     - Will execute script flag is true?\n   *       - (Element queue popped from the custom element reactions stack.\n   *         Reactions in the popped stack are invoked.)\n   *   - (Element queue pushed to the custom element reactions stack.)\n   *   - Insert the element:\n   *     https://dom.spec.whatwg.org/#concept-node-insert\n   *     - Shadow-including descendants are connected. During parsing\n   *       construction, there are no shadow-*excluding* descendants.\n   *       However, the constructor may have validly attached a shadow\n   *       tree to itself and added descendants to that shadow tree.\n   *       (`connectedCallback` reactions enqueued.)\n   *   - (Element queue popped from the custom element reactions stack.\n   *     Reactions in the popped stack are invoked.)\n   *\n   * @param {!Node} root\n   * @param {!Set<Node>=} visitedImports\n   */\n  patchAndUpgradeTree(root, visitedImports = new Set()) {\n    const elements = [];\n\n    const gatherElements = element => {\n      if (element.localName === 'link' && element.getAttribute('rel') === 'import') {\n        // The HTML Imports polyfill sets a descendant element of the link to\n        // the `import` property, specifically this is *not* a Document.\n        const importNode = /** @type {?Node} */ (element.import);\n\n        if (importNode instanceof Node && importNode.readyState === 'complete') {\n          importNode.__CE_isImportDocument = true;\n\n          // Connected links are associated with the registry.\n          importNode.__CE_hasRegistry = true;\n        } else {\n          // If this link's import root is not available, its contents can't be\n          // walked. Wait for 'load' and walk it when it's ready.\n          element.addEventListener('load', () => {\n            const importNode = /** @type {!Node} */ (element.import);\n\n            if (importNode.__CE_documentLoadHandled) return;\n            importNode.__CE_documentLoadHandled = true;\n\n            importNode.__CE_isImportDocument = true;\n\n            // Connected links are associated with the registry.\n            importNode.__CE_hasRegistry = true;\n\n            // Clone the `visitedImports` set that was populated sync during\n            // the `patchAndUpgradeTree` call that caused this 'load' handler to\n            // be added. Then, remove *this* link's import node so that we can\n            // walk that import again, even if it was partially walked later\n            // during the same `patchAndUpgradeTree` call.\n            const clonedVisitedImports = new Set(visitedImports);\n            visitedImports.delete(importNode);\n\n            this.patchAndUpgradeTree(importNode, visitedImports);\n          });\n        }\n      } else {\n        elements.push(element);\n      }\n    };\n\n    // `walkDeepDescendantElements` populates (and internally checks against)\n    // `visitedImports` when traversing a loaded import.\n    Utilities.walkDeepDescendantElements(root, gatherElements, visitedImports);\n\n    if (this._hasPatches) {\n      for (let i = 0; i < elements.length; i++) {\n        this.patch(elements[i]);\n      }\n    }\n\n    for (let i = 0; i < elements.length; i++) {\n      this.upgradeElement(elements[i]);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  upgradeElement(element) {\n    const currentState = element.__CE_state;\n    if (currentState !== undefined) return;\n\n    const definition = this.localNameToDefinition(element.localName);\n    if (!definition) return;\n\n    definition.constructionStack.push(element);\n\n    const constructor = definition.constructor;\n    try {\n      try {\n        let result = new (constructor)();\n        if (result !== element) {\n          throw new Error('The custom element constructor did not produce the element being upgraded.');\n        }\n      } finally {\n        definition.constructionStack.pop();\n      }\n    } catch (e) {\n      element.__CE_state = CEState.failed;\n      throw e;\n    }\n\n    element.__CE_state = CEState.custom;\n    element.__CE_definition = definition;\n\n    if (definition.attributeChangedCallback) {\n      const observedAttributes = definition.observedAttributes;\n      for (let i = 0; i < observedAttributes.length; i++) {\n        const name = observedAttributes[i];\n        const value = element.getAttribute(name);\n        if (value !== null) {\n          this.attributeChangedCallback(element, name, null, value, null);\n        }\n      }\n    }\n\n    if (Utilities.isConnected(element)) {\n      this.connectedCallback(element);\n    }\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  connectedCallback(element) {\n    const definition = element.__CE_definition;\n    if (definition.connectedCallback) {\n      definition.connectedCallback.call(element);\n    }\n\n    element.__CE_isConnectedCallbackCalled = true;\n  }\n\n  /**\n   * @param {!Element} element\n   */\n  disconnectedCallback(element) {\n    if (!element.__CE_isConnectedCallbackCalled) {\n      this.connectedCallback(element);\n    }\n\n    const definition = element.__CE_definition;\n    if (definition.disconnectedCallback) {\n      definition.disconnectedCallback.call(element);\n    }\n\n    element.__CE_isConnectedCallbackCalled = undefined;\n  }\n\n  /**\n   * @param {!Element} element\n   * @param {string} name\n   * @param {?string} oldValue\n   * @param {?string} newValue\n   * @param {?string} namespace\n   */\n  attributeChangedCallback(element, name, oldValue, newValue, namespace) {\n    const definition = element.__CE_definition;\n    if (\n      definition.attributeChangedCallback &&\n      definition.observedAttributes.indexOf(name) > -1\n    ) {\n      definition.attributeChangedCallback.call(element, name, oldValue, newValue, namespace);\n    }\n  }\n}\n","/**\n * @enum {number}\n */\nconst CustomElementState = {\n  custom: 1,\n  failed: 2,\n};\n\nexport default CustomElementState;\n","import CustomElementInternals from './CustomElementInternals.js';\n\nexport default class DocumentConstructionObserver {\n  constructor(internals, doc) {\n    /**\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @type {!Document}\n     */\n    this._document = doc;\n\n    /**\n     * @type {MutationObserver|undefined}\n     */\n    this._observer = undefined;\n\n\n    // Simulate tree construction for all currently accessible nodes in the\n    // document.\n    this._internals.patchAndUpgradeTree(this._document);\n\n    if (this._document.readyState === 'loading') {\n      this._observer = new MutationObserver(this._handleMutations.bind(this));\n\n      // Nodes created by the parser are given to the observer *before* the next\n      // task runs. Inline scripts are run in a new task. This means that the\n      // observer will be able to handle the newly parsed nodes before the inline\n      // script is run.\n      this._observer.observe(this._document, {\n        childList: true,\n        subtree: true,\n      });\n    }\n  }\n\n  disconnect() {\n    if (this._observer) {\n      this._observer.disconnect();\n    }\n  }\n\n  /**\n   * @param {!Array<!MutationRecord>} mutations\n   */\n  _handleMutations(mutations) {\n    // Once the document's `readyState` is 'interactive' or 'complete', all new\n    // nodes created within that document will be the result of script and\n    // should be handled by patching.\n    const readyState = this._document.readyState;\n    if (readyState === 'interactive' || readyState === 'complete') {\n      this.disconnect();\n    }\n\n    for (let i = 0; i < mutations.length; i++) {\n      const addedNodes = mutations[i].addedNodes;\n      for (let j = 0; j < addedNodes.length; j++) {\n        const node = addedNodes[j];\n        this._internals.patchAndUpgradeTree(node);\n      }\n    }\n  }\n}\n","/**\n * @template T\n */\nexport default class Deferred {\n  constructor() {\n    /**\n     * @private\n     * @type {T|undefined}\n     */\n    this._value = undefined;\n\n    /**\n     * @private\n     * @type {Function|undefined}\n     */\n    this._resolve = undefined;\n\n    /**\n     * @private\n     * @type {!Promise<T>}\n     */\n    this._promise = new Promise(resolve => {\n      this._resolve = resolve;\n\n      if (this._value) {\n        resolve(this._value);\n      }\n    });\n  }\n\n  /**\n   * @param {T} value\n   */\n  resolve(value) {\n    if (this._value) {\n      throw new Error('Already resolved.');\n    }\n\n    this._value = value;\n\n    if (this._resolve) {\n      this._resolve(value);\n    }\n  }\n\n  /**\n   * @return {!Promise<T>}\n   */\n  toPromise() {\n    return this._promise;\n  }\n}\n","import CustomElementInternals from './CustomElementInternals.js';\nimport DocumentConstructionObserver from './DocumentConstructionObserver.js';\nimport Deferred from './Deferred.js';\nimport * as Utilities from './Utilities.js';\n\n/**\n * @unrestricted\n */\nexport default class CustomElementRegistry {\n\n  /**\n   * @param {!CustomElementInternals} internals\n   */\n  constructor(internals) {\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._elementDefinitionIsRunning = false;\n\n    /**\n     * @private\n     * @type {!CustomElementInternals}\n     */\n    this._internals = internals;\n\n    /**\n     * @private\n     * @type {!Map<string, !Deferred<undefined>>}\n     */\n    this._whenDefinedDeferred = new Map();\n\n    /**\n     * The default flush callback triggers the document walk synchronously.\n     * @private\n     * @type {!Function}\n     */\n    this._flushCallback = fn => fn();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this._flushPending = false;\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this._unflushedLocalNames = [];\n\n    /**\n     * @private\n     * @type {!DocumentConstructionObserver}\n     */\n    this._documentConstructionObserver = new DocumentConstructionObserver(internals, document);\n  }\n\n  /**\n   * @param {string} localName\n   * @param {!Function} constructor\n   */\n  define(localName, constructor) {\n    if (!(constructor instanceof Function)) {\n      throw new TypeError('Custom element constructors must be functions.');\n    }\n\n    if (!Utilities.isValidCustomElementName(localName)) {\n      throw new SyntaxError(`The element name '${localName}' is not valid.`);\n    }\n\n    if (this._internals.localNameToDefinition(localName)) {\n      throw new Error(`A custom element with name '${localName}' has already been defined.`);\n    }\n\n    if (this._elementDefinitionIsRunning) {\n      throw new Error('A custom element is already being defined.');\n    }\n    this._elementDefinitionIsRunning = true;\n\n    let connectedCallback;\n    let disconnectedCallback;\n    let adoptedCallback;\n    let attributeChangedCallback;\n    let observedAttributes;\n    try {\n      /** @type {!Object} */\n      const prototype = constructor.prototype;\n      if (!(prototype instanceof Object)) {\n        throw new TypeError('The custom element constructor\\'s prototype is not an object.');\n      }\n\n      function getCallback(name) {\n        const callbackValue = prototype[name];\n        if (callbackValue !== undefined && !(callbackValue instanceof Function)) {\n          throw new Error(`The '${name}' callback must be a function.`);\n        }\n        return callbackValue;\n      }\n\n      connectedCallback = getCallback('connectedCallback');\n      disconnectedCallback = getCallback('disconnectedCallback');\n      adoptedCallback = getCallback('adoptedCallback');\n      attributeChangedCallback = getCallback('attributeChangedCallback');\n      observedAttributes = constructor['observedAttributes'] || [];\n    } catch (e) {\n      return;\n    } finally {\n      this._elementDefinitionIsRunning = false;\n    }\n\n    const definition = {\n      localName,\n      constructor,\n      connectedCallback,\n      disconnectedCallback,\n      adoptedCallback,\n      attributeChangedCallback,\n      observedAttributes,\n      constructionStack: [],\n    };\n\n    this._internals.setDefinition(localName, definition);\n\n    this._unflushedLocalNames.push(localName);\n\n    // If we've already called the flush callback and it hasn't called back yet,\n    // don't call it again.\n    if (!this._flushPending) {\n      this._flushPending = true;\n      this._flushCallback(() => this._flush());\n    }\n  }\n\n  _flush() {\n    // If no new definitions were defined, don't attempt to flush. This could\n    // happen if a flush callback keeps the function it is given and calls it\n    // multiple times.\n    if (this._flushPending === false) return;\n\n    this._flushPending = false;\n    this._internals.patchAndUpgradeTree(document);\n\n    while (this._unflushedLocalNames.length > 0) {\n      const localName = this._unflushedLocalNames.shift();\n      const deferred = this._whenDefinedDeferred.get(localName);\n      if (deferred) {\n        deferred.resolve(undefined);\n      }\n    }\n  }\n\n  /**\n   * @param {string} localName\n   * @return {Function|undefined}\n   */\n  get(localName) {\n    const definition = this._internals.localNameToDefinition(localName);\n    if (definition) {\n      return definition.constructor;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * @param {string} localName\n   * @return {!Promise<undefined>}\n   */\n  whenDefined(localName) {\n    if (!Utilities.isValidCustomElementName(localName)) {\n      return Promise.reject(new SyntaxError(`'${localName}' is not a valid custom element name.`));\n    }\n\n    const prior = this._whenDefinedDeferred.get(localName);\n    if (prior) {\n      return prior.toPromise();\n    }\n\n    const deferred = new Deferred();\n    this._whenDefinedDeferred.set(localName, deferred);\n\n    const definition = this._internals.localNameToDefinition(localName);\n    // Resolve immediately only if the given local name has a definition *and*\n    // the full document walk to upgrade elements with that local name has\n    // already happened.\n    if (definition && this._unflushedLocalNames.indexOf(localName) === -1) {\n      deferred.resolve(undefined);\n    }\n\n    return deferred.toPromise();\n  }\n\n  polyfillWrapFlushCallback(outer) {\n    this._documentConstructionObserver.disconnect();\n    const inner = this._flushCallback;\n    this._flushCallback = flush => outer(() => inner(flush));\n  }\n}\n\n// Closure compiler exports.\nwindow['CustomElementRegistry'] = CustomElementRegistry;\nCustomElementRegistry.prototype['define'] = CustomElementRegistry.prototype.define;\nCustomElementRegistry.prototype['get'] = CustomElementRegistry.prototype.get;\nCustomElementRegistry.prototype['whenDefined'] = CustomElementRegistry.prototype.whenDefined;\nCustomElementRegistry.prototype['polyfillWrapFlushCallback'] = CustomElementRegistry.prototype.polyfillWrapFlushCallback;\n","export default {\n  Document_createElement: window.Document.prototype.createElement,\n  Document_createElementNS: window.Document.prototype.createElementNS,\n  Document_importNode: window.Document.prototype.importNode,\n  Document_prepend: window.Document.prototype['prepend'],\n  Document_append: window.Document.prototype['append'],\n  Node_cloneNode: window.Node.prototype.cloneNode,\n  Node_appendChild: window.Node.prototype.appendChild,\n  Node_insertBefore: window.Node.prototype.insertBefore,\n  Node_removeChild: window.Node.prototype.removeChild,\n  Node_replaceChild: window.Node.prototype.replaceChild,\n  Node_textContent: Object.getOwnPropertyDescriptor(window.Node.prototype, 'textContent'),\n  Element_attachShadow: window.Element.prototype['attachShadow'],\n  Element_innerHTML: Object.getOwnPropertyDescriptor(window.Element.prototype, 'innerHTML'),\n  Element_getAttribute: window.Element.prototype.getAttribute,\n  Element_setAttribute: window.Element.prototype.setAttribute,\n  Element_removeAttribute: window.Element.prototype.removeAttribute,\n  Element_getAttributeNS: window.Element.prototype.getAttributeNS,\n  Element_setAttributeNS: window.Element.prototype.setAttributeNS,\n  Element_removeAttributeNS: window.Element.prototype.removeAttributeNS,\n  Element_insertAdjacentElement: window.Element.prototype['insertAdjacentElement'],\n  Element_prepend: window.Element.prototype['prepend'],\n  Element_append: window.Element.prototype['append'],\n  Element_before: window.Element.prototype['before'],\n  Element_after: window.Element.prototype['after'],\n  Element_replaceWith: window.Element.prototype['replaceWith'],\n  Element_remove: window.Element.prototype['remove'],\n  HTMLElement: window.HTMLElement,\n  HTMLElement_innerHTML: Object.getOwnPropertyDescriptor(window.HTMLElement.prototype, 'innerHTML'),\n  HTMLElement_insertAdjacentElement: window.HTMLElement.prototype['insertAdjacentElement'],\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport AlreadyConstructedMarker from '../AlreadyConstructedMarker.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  window['HTMLElement'] = (function() {\n    /**\n     * @type {function(new: HTMLElement): !HTMLElement}\n     */\n    function HTMLElement() {\n      // This should really be `new.target` but `new.target` can't be emulated\n      // in ES5. Assuming the user keeps the default value of the constructor's\n      // prototype's `constructor` property, this is equivalent.\n      /** @type {!Function} */\n      const constructor = this.constructor;\n\n      const definition = internals.constructorToDefinition(constructor);\n      if (!definition) {\n        throw new Error('The custom element being constructed was not registered with `customElements`.');\n      }\n\n      const constructionStack = definition.constructionStack;\n\n      if (constructionStack.length === 0) {\n        const element = Native.Document_createElement.call(document, definition.localName);\n        Object.setPrototypeOf(element, constructor.prototype);\n        element.__CE_state = CEState.custom;\n        element.__CE_definition = definition;\n        internals.patch(element);\n        return element;\n      }\n\n      const lastIndex = constructionStack.length - 1;\n      const element = constructionStack[lastIndex];\n      if (element === AlreadyConstructedMarker) {\n        throw new Error('The HTMLElement constructor was either called reentrantly for this constructor or called multiple times.');\n      }\n      constructionStack[lastIndex] = AlreadyConstructedMarker;\n\n      Object.setPrototypeOf(element, constructor.prototype);\n      internals.patch(/** @type {!HTMLElement} */ (element));\n\n      return element;\n    }\n\n    HTMLElement.prototype = Native.HTMLElement.prototype;\n\n    return HTMLElement;\n  })();\n};\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\nimport CustomElementInternals from './CustomElementInternals.js';\nimport CustomElementRegistry from './CustomElementRegistry.js';\n\nimport PatchHTMLElement from './Patch/HTMLElement.js';\nimport PatchDocument from './Patch/Document.js';\nimport PatchNode from './Patch/Node.js';\nimport PatchElement from './Patch/Element.js';\n\nconst priorCustomElements = window['customElements'];\n\nif (!priorCustomElements ||\n     priorCustomElements['forcePolyfill'] ||\n     (typeof priorCustomElements['define'] != 'function') ||\n     (typeof priorCustomElements['get'] != 'function')) {\n  /** @type {!CustomElementInternals} */\n  const internals = new CustomElementInternals();\n\n  PatchHTMLElement(internals);\n  PatchDocument(internals);\n  PatchNode(internals);\n  PatchElement(internals);\n\n  // The main document is always associated with the registry.\n  document.__CE_hasRegistry = true;\n\n  /** @type {!CustomElementRegistry} */\n  const customElements = new CustomElementRegistry(internals);\n\n  Object.defineProperty(window, 'customElements', {\n    configurable: true,\n    enumerable: true,\n    value: customElements,\n  });\n}\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   prepend: !function(...(!Node|string)),\n  *  append: !function(...(!Node|string)),\n * }}\n */\nlet ParentNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ParentNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['prepend'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.prepend.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['append'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.append.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElement',\n    /**\n     * @this {Document}\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElement.call(this, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'importNode',\n    /**\n     * @this {Document}\n     * @param {!Node} node\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(node, deep) {\n      const clone = Native.Document_importNode.call(this, node, deep);\n      // Only create custom elements if this document is associated with the registry.\n      if (!this.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  const NS_HTML = \"http://www.w3.org/1999/xhtml\";\n\n  Utilities.setPropertyUnchecked(Document.prototype, 'createElementNS',\n    /**\n     * @this {Document}\n     * @param {?string} namespace\n     * @param {string} localName\n     * @return {!Element}\n     */\n    function(namespace, localName) {\n      // Only create custom elements if this document is associated with the registry.\n      if (this.__CE_hasRegistry && (namespace === null || namespace === NS_HTML)) {\n        const definition = internals.localNameToDefinition(localName);\n        if (definition) {\n          return new (definition.constructor)();\n        }\n      }\n\n      const result = /** @type {!Element} */\n        (Native.Document_createElementNS.call(this, namespace, localName));\n      internals.patch(result);\n      return result;\n    });\n\n  PatchParentNode(internals, Document.prototype, {\n    prepend: Native.Document_prepend,\n    append: Native.Document_append,\n  });\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport * as Utilities from '../Utilities.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  // `Node#nodeValue` is implemented on `Attr`.\n  // `Node#textContent` is implemented on `Attr`, `Element`.\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'insertBefore',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @param {?Node} refNode\n     * @return {!Node}\n     */\n    function(node, refNode) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_insertBefore.call(this, node, refNode);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'appendChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      if (node instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(node.childNodes);\n        const nativeResult = Native.Node_appendChild.call(this, node);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_appendChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      if (Utilities.isConnected(this)) {\n        internals.connectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'cloneNode',\n    /**\n     * @this {Node}\n     * @param {boolean=} deep\n     * @return {!Node}\n     */\n    function(deep) {\n      const clone = Native.Node_cloneNode.call(this, deep);\n      // Only create custom elements if this element's owner document is\n      // associated with the registry.\n      if (!this.ownerDocument.__CE_hasRegistry) {\n        internals.patchTree(clone);\n      } else {\n        internals.patchAndUpgradeTree(clone);\n      }\n      return clone;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'removeChild',\n    /**\n     * @this {Node}\n     * @param {!Node} node\n     * @return {!Node}\n     */\n    function(node) {\n      const nodeWasConnected = Utilities.isConnected(node);\n      const nativeResult = Native.Node_removeChild.call(this, node);\n\n      if (nodeWasConnected) {\n        internals.disconnectTree(node);\n      }\n\n      return nativeResult;\n    });\n\n  Utilities.setPropertyUnchecked(Node.prototype, 'replaceChild',\n    /**\n     * @this {Node}\n     * @param {!Node} nodeToInsert\n     * @param {!Node} nodeToRemove\n     * @return {!Node}\n     */\n    function(nodeToInsert, nodeToRemove) {\n      if (nodeToInsert instanceof DocumentFragment) {\n        const insertedNodes = Array.prototype.slice.apply(nodeToInsert.childNodes);\n        const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n\n        // DocumentFragments can't be connected, so `disconnectTree` will never\n        // need to be called on a DocumentFragment's children after inserting it.\n\n        if (Utilities.isConnected(this)) {\n          internals.disconnectTree(nodeToRemove);\n          for (let i = 0; i < insertedNodes.length; i++) {\n            internals.connectTree(insertedNodes[i]);\n          }\n        }\n\n        return nativeResult;\n      }\n\n      const nodeToInsertWasConnected = Utilities.isConnected(nodeToInsert);\n      const nativeResult = Native.Node_replaceChild.call(this, nodeToInsert, nodeToRemove);\n      const thisIsConnected = Utilities.isConnected(this);\n\n      if (thisIsConnected) {\n        internals.disconnectTree(nodeToRemove);\n      }\n\n      if (nodeToInsertWasConnected) {\n        internals.disconnectTree(nodeToInsert);\n      }\n\n      if (thisIsConnected) {\n        internals.connectTree(nodeToInsert);\n      }\n\n      return nativeResult;\n    });\n\n\n  function patch_textContent(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'textContent', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Node} */ function(assignedValue) {\n        // If this is a text node then there are no nodes to disconnect.\n        if (this.nodeType === Node.TEXT_NODE) {\n          baseDescriptor.set.call(this, assignedValue);\n          return;\n        }\n\n        let removedNodes = undefined;\n        // Checking for `firstChild` is faster than reading `childNodes.length`\n        // to compare with 0.\n        if (this.firstChild) {\n          // Using `childNodes` is faster than `children`, even though we only\n          // care about elements.\n          const childNodes = this.childNodes;\n          const childNodesLength = childNodes.length;\n          if (childNodesLength > 0 && Utilities.isConnected(this)) {\n            // Copying an array by iterating is faster than using slice.\n            removedNodes = new Array(childNodesLength);\n            for (let i = 0; i < childNodesLength; i++) {\n              removedNodes[i] = childNodes[i];\n            }\n          }\n        }\n\n        baseDescriptor.set.call(this, assignedValue);\n\n        if (removedNodes) {\n          for (let i = 0; i < removedNodes.length; i++) {\n            internals.disconnectTree(removedNodes[i]);\n          }\n        }\n      },\n    });\n  }\n\n  if (Native.Node_textContent && Native.Node_textContent.get) {\n    patch_textContent(Node.prototype, Native.Node_textContent);\n  } else {\n    internals.addPatch(function(element) {\n      patch_textContent(element, {\n        enumerable: true,\n        configurable: true,\n        // NOTE: This implementation of the `textContent` getter assumes that\n        // text nodes' `textContent` getter will not be patched.\n        get: /** @this {Node} */ function() {\n          /** @type {!Array<string>} */\n          const parts = [];\n\n          for (let i = 0; i < this.childNodes.length; i++) {\n            parts.push(this.childNodes[i].textContent);\n          }\n\n          return parts.join('');\n        },\n        set: /** @this {Node} */ function(assignedValue) {\n          while (this.firstChild) {\n            Native.Node_removeChild.call(this, this.firstChild);\n          }\n          Native.Node_appendChild.call(this, document.createTextNode(assignedValue));\n        },\n      });\n    });\n  }\n};\n","import CustomElementInternals from '../../CustomElementInternals.js';\nimport * as Utilities from '../../Utilities.js';\n\n/**\n * @typedef {{\n *   before: !function(...(!Node|string)),\n *   after: !function(...(!Node|string)),\n *   replaceWith: !function(...(!Node|string)),\n *   remove: !function(),\n * }}\n */\nlet ChildNodeNativeMethods;\n\n/**\n * @param {!CustomElementInternals} internals\n * @param {!Object} destination\n * @param {!ChildNodeNativeMethods} builtIn\n */\nexport default function(internals, destination, builtIn) {\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['before'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.before.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['after'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    builtIn.after.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (Utilities.isConnected(this)) {\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  /**\n   * @param {...(!Node|string)} nodes\n   */\n  destination['replaceWith'] = function(...nodes) {\n    // TODO: Fix this for when one of `nodes` is a DocumentFragment!\n    const connectedBefore = /** @type {!Array<!Node>} */ (nodes.filter(node => {\n      // DocumentFragments are not connected and will not be added to the list.\n      return node instanceof Node && Utilities.isConnected(node);\n    }));\n\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.replaceWith.apply(this, nodes);\n\n    for (let i = 0; i < connectedBefore.length; i++) {\n      internals.disconnectTree(connectedBefore[i]);\n    }\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n      for (let i = 0; i < nodes.length; i++) {\n        const node = nodes[i];\n        if (node instanceof Element) {\n          internals.connectTree(node);\n        }\n      }\n    }\n  };\n\n  destination['remove'] = function() {\n    const wasConnected = Utilities.isConnected(this);\n\n    builtIn.remove.call(this);\n\n    if (wasConnected) {\n      internals.disconnectTree(this);\n    }\n  };\n};\n","import Native from './Native.js';\nimport CustomElementInternals from '../CustomElementInternals.js';\nimport CEState from '../CustomElementState.js';\nimport * as Utilities from '../Utilities.js';\n\nimport PatchParentNode from './Interface/ParentNode.js';\nimport PatchChildNode from './Interface/ChildNode.js';\n\n/**\n * @param {!CustomElementInternals} internals\n */\nexport default function(internals) {\n  if (Native.Element_attachShadow) {\n    Utilities.setPropertyUnchecked(Element.prototype, 'attachShadow',\n      /**\n       * @this {Element}\n       * @param {!{mode: string}} init\n       * @return {ShadowRoot}\n       */\n      function(init) {\n        const shadowRoot = Native.Element_attachShadow.call(this, init);\n        this.__CE_shadowRoot = shadowRoot;\n        return shadowRoot;\n      });\n  } else {\n    console.warn('Custom Elements: `Element#attachShadow` was not patched.');\n  }\n\n\n  function patch_innerHTML(destination, baseDescriptor) {\n    Object.defineProperty(destination, 'innerHTML', {\n      enumerable: baseDescriptor.enumerable,\n      configurable: true,\n      get: baseDescriptor.get,\n      set: /** @this {Element} */ function(htmlString) {\n        const isConnected = Utilities.isConnected(this);\n\n        // NOTE: In IE11, when using the native `innerHTML` setter, all nodes\n        // that were previously descendants of the context element have all of\n        // their children removed as part of the set - the entire subtree is\n        // 'disassembled'. This work around walks the subtree *before* using the\n        // native setter.\n        /** @type {!Array<!Element>|undefined} */\n        let removedElements = undefined;\n        if (isConnected) {\n          removedElements = [];\n          Utilities.walkDeepDescendantElements(this, element => {\n            if (element !== this) {\n              removedElements.push(element);\n            }\n          });\n        }\n\n        baseDescriptor.set.call(this, htmlString);\n\n        if (removedElements) {\n          for (let i = 0; i < removedElements.length; i++) {\n            const element = removedElements[i];\n            if (element.__CE_state === CEState.custom) {\n              internals.disconnectedCallback(element);\n            }\n          }\n        }\n\n        // Only create custom elements if this element's owner document is\n        // associated with the registry.\n        if (!this.ownerDocument.__CE_hasRegistry) {\n          internals.patchTree(this);\n        } else {\n          internals.patchAndUpgradeTree(this);\n        }\n        return htmlString;\n      },\n    });\n  }\n\n  if (Native.Element_innerHTML && Native.Element_innerHTML.get) {\n    patch_innerHTML(Element.prototype, Native.Element_innerHTML);\n  } else if (Native.HTMLElement_innerHTML && Native.HTMLElement_innerHTML.get) {\n    patch_innerHTML(HTMLElement.prototype, Native.HTMLElement_innerHTML);\n  } else {\n\n    /** @type {HTMLDivElement} */\n    const rawDiv = Native.Document_createElement.call(document, 'div');\n\n    internals.addPatch(function(element) {\n      patch_innerHTML(element, {\n        enumerable: true,\n        configurable: true,\n        // Implements getting `innerHTML` by performing an unpatched `cloneNode`\n        // of the element and returning the resulting element's `innerHTML`.\n        // TODO: Is this too expensive?\n        get: /** @this {Element} */ function() {\n          return Native.Node_cloneNode.call(this, true).innerHTML;\n        },\n        // Implements setting `innerHTML` by creating an unpatched element,\n        // setting `innerHTML` of that element and replacing the target\n        // element's children with those of the unpatched element.\n        set: /** @this {Element} */ function(assignedValue) {\n          // NOTE: re-route to `content` for `template` elements.\n          // We need to do this because `template.appendChild` does not\n          // route into `template.content`.\n          /** @type {!Node} */\n          const content = this.localName === 'template' ? (/** @type {!HTMLTemplateElement} */ (this)).content : this;\n          rawDiv.innerHTML = assignedValue;\n\n          while (content.childNodes.length > 0) {\n            Native.Node_removeChild.call(content, content.childNodes[0]);\n          }\n          while (rawDiv.childNodes.length > 0) {\n            Native.Node_appendChild.call(content, rawDiv.childNodes[0]);\n          }\n        },\n      });\n    });\n  }\n\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttribute.call(this, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_setAttribute.call(this, name, newValue);\n      newValue = Native.Element_getAttribute.call(this, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, null);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'setAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     * @param {string} newValue\n     */\n    function(namespace, name, newValue) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_setAttributeNS.call(this, namespace, name, newValue);\n      newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttribute',\n    /**\n     * @this {Element}\n     * @param {string} name\n     */\n    function(name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttribute.call(this, name);\n      }\n\n      const oldValue = Native.Element_getAttribute.call(this, name);\n      Native.Element_removeAttribute.call(this, name);\n      if (oldValue !== null) {\n        internals.attributeChangedCallback(this, name, oldValue, null, null);\n      }\n    });\n\n  Utilities.setPropertyUnchecked(Element.prototype, 'removeAttributeNS',\n    /**\n     * @this {Element}\n     * @param {?string} namespace\n     * @param {string} name\n     */\n    function(namespace, name) {\n      // Fast path for non-custom elements.\n      if (this.__CE_state !== CEState.custom) {\n        return Native.Element_removeAttributeNS.call(this, namespace, name);\n      }\n\n      const oldValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      Native.Element_removeAttributeNS.call(this, namespace, name);\n      // In older browsers, `Element#getAttributeNS` may return the empty string\n      // instead of null if the attribute does not exist. For details, see;\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttributeNS#Notes\n      const newValue = Native.Element_getAttributeNS.call(this, namespace, name);\n      if (oldValue !== newValue) {\n        internals.attributeChangedCallback(this, name, oldValue, newValue, namespace);\n      }\n    });\n\n\n  function patch_insertAdjacentElement(destination, baseMethod) {\n    Utilities.setPropertyUnchecked(destination, 'insertAdjacentElement',\n      /**\n       * @this {Element}\n       * @param {string} where\n       * @param {!Element} element\n       * @return {?Element}\n       */\n      function(where, element) {\n        const wasConnected = Utilities.isConnected(element);\n        const insertedElement = /** @type {!Element} */\n          (baseMethod.call(this, where, element));\n\n        if (wasConnected) {\n          internals.disconnectTree(element);\n        }\n\n        if (Utilities.isConnected(insertedElement)) {\n          internals.connectTree(element);\n        }\n        return insertedElement;\n      });\n  }\n\n  if (Native.HTMLElement_insertAdjacentElement) {\n    patch_insertAdjacentElement(HTMLElement.prototype, Native.HTMLElement_insertAdjacentElement);\n  } else if (Native.Element_insertAdjacentElement) {\n    patch_insertAdjacentElement(Element.prototype, Native.Element_insertAdjacentElement);\n  } else {\n    console.warn('Custom Elements: `Element#insertAdjacentElement` was not patched.');\n  }\n\n\n  PatchParentNode(internals, Element.prototype, {\n    prepend: Native.Element_prepend,\n    append: Native.Element_append,\n  });\n\n  PatchChildNode(internals, Element.prototype, {\n    before: Native.Element_before,\n    after: Native.Element_after,\n    replaceWith: Native.Element_replaceWith,\n    remove: Native.Element_remove,\n  });\n};\n"]}