{"version":3,"file":"src_app_modules_admin_apps_notes_notes_routes_ts.js","mappings":"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","sources":["./src/app/modules/admin/apps/notes/details/details.component.ts","./src/app/modules/admin/apps/notes/details/details.component.html","./src/app/modules/admin/apps/notes/labels/labels.component.ts","./src/app/modules/admin/apps/notes/labels/labels.component.html","./src/app/modules/admin/apps/notes/list/list.component.ts","./src/app/modules/admin/apps/notes/list/list.component.html","./src/app/modules/admin/apps/notes/notes.component.ts","./src/app/modules/admin/apps/notes/notes.component.html","./src/app/modules/admin/apps/notes/notes.routes.ts","./src/app/modules/admin/apps/notes/notes.service.ts"],"sourcesContent":["import { TextFieldModule } from '@angular/cdk/text-field';\nimport { AsyncPipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MAT_DIALOG_DATA, MatDialogModule, MatDialogRef } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { NotesService } from 'app/modules/admin/apps/notes/notes.service';\nimport { Label, Note, Task } from 'app/modules/admin/apps/notes/notes.types';\nimport { debounceTime, map, Observable, of, Subject, switchMap, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'notes-details',\n    templateUrl    : './details.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [NgIf, MatButtonModule, MatIconModule, FormsModule, TextFieldModule, NgFor, MatCheckboxModule, NgClass, MatRippleModule, MatMenuModule, MatDialogModule, AsyncPipe],\n})\nexport class NotesDetailsComponent implements OnInit, OnDestroy\n{\n    note$: Observable<Note>;\n    labels$: Observable<Label[]>;\n\n    noteChanged: Subject<Note> = new Subject<Note>();\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Inject(MAT_DIALOG_DATA) private _data: { note: Note },\n        private _notesService: NotesService,\n        private _matDialogRef: MatDialogRef<NotesDetailsComponent>,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Edit\n        if ( this._data.note.id )\n        {\n            // Request the data from the server\n            this._notesService.getNoteById(this._data.note.id).subscribe();\n\n            // Get the note\n            this.note$ = this._notesService.note$;\n        }\n        // Add\n        else\n        {\n            // Create an empty note\n            const note = {\n                id       : null,\n                title    : '',\n                content  : '',\n                tasks    : null,\n                image    : null,\n                reminder : null,\n                labels   : [],\n                archived : false,\n                createdAt: null,\n                updatedAt: null,\n            };\n\n            this.note$ = of(note);\n        }\n\n        // Get the labels\n        this.labels$ = this._notesService.labels$;\n\n        // Subscribe to note updates\n        this.noteChanged\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(500),\n                switchMap(note => this._notesService.updateNote(note)))\n            .subscribe(() =>\n            {\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Create a new note\n     *\n     * @param note\n     */\n    createNote(note: Note): void\n    {\n        this._notesService.createNote(note).pipe(\n            map(() =>\n            {\n                // Get the note\n                this.note$ = this._notesService.note$;\n            })).subscribe();\n    }\n\n    /**\n     * Upload image to given note\n     *\n     * @param note\n     * @param fileList\n     */\n    uploadImage(note: Note, fileList: FileList): void\n    {\n        // Return if canceled\n        if ( !fileList.length )\n        {\n            return;\n        }\n\n        const allowedTypes = ['image/jpeg', 'image/png'];\n        const file = fileList[0];\n\n        // Return if the file is not allowed\n        if ( !allowedTypes.includes(file.type) )\n        {\n            return;\n        }\n\n        this._readAsDataURL(file).then((data) =>\n        {\n            // Update the image\n            note.image = data;\n\n            // Update the note\n            this.noteChanged.next(note);\n        });\n    }\n\n    /**\n     * Remove the image on the given note\n     *\n     * @param note\n     */\n    removeImage(note: Note): void\n    {\n        note.image = null;\n\n        // Update the note\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Add an empty tasks array to note\n     *\n     * @param note\n     */\n    addTasksToNote(note): void\n    {\n        if ( !note.tasks )\n        {\n            note.tasks = [];\n        }\n    }\n\n    /**\n     * Add task to the given note\n     *\n     * @param note\n     * @param task\n     */\n    addTaskToNote(note: Note, task: string): void\n    {\n        if ( task.trim() === '' )\n        {\n            return;\n        }\n\n        // Add the task\n        this._notesService.addTask(note, task).subscribe();\n    }\n\n    /**\n     * Remove the given task from given note\n     *\n     * @param note\n     * @param task\n     */\n    removeTaskFromNote(note: Note, task: Task): void\n    {\n        // Remove the task\n        note.tasks = note.tasks.filter(item => item.id !== task.id);\n\n        // Update the note\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Update the given task on the given note\n     *\n     * @param note\n     * @param task\n     */\n    updateTaskOnNote(note: Note, task: Task): void\n    {\n        // If the task is already available on the item\n        if ( task.id )\n        {\n            // Update the note\n            this.noteChanged.next(note);\n        }\n    }\n\n    /**\n     * Is the given note has the given label\n     *\n     * @param note\n     * @param label\n     */\n    isNoteHasLabel(note: Note, label: Label): boolean\n    {\n        return !!note.labels.find(item => item.id === label.id);\n    }\n\n    /**\n     * Toggle the given label on the given note\n     *\n     * @param note\n     * @param label\n     */\n    toggleLabelOnNote(note: Note, label: Label): void\n    {\n        // If the note already has the label\n        if ( this.isNoteHasLabel(note, label) )\n        {\n            note.labels = note.labels.filter(item => item.id !== label.id);\n        }\n        // Otherwise\n        else\n        {\n            note.labels.push(label);\n        }\n\n        // Update the note\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Toggle archived status on the given note\n     *\n     * @param note\n     */\n    toggleArchiveOnNote(note: Note): void\n    {\n        note.archived = !note.archived;\n\n        // Update the note\n        this.noteChanged.next(note);\n\n        // Close the dialog\n        this._matDialogRef.close();\n    }\n\n    /**\n     * Update the note details\n     *\n     * @param note\n     */\n    updateNoteDetails(note: Note): void\n    {\n        this.noteChanged.next(note);\n    }\n\n    /**\n     * Delete the given note\n     *\n     * @param note\n     */\n    deleteNote(note: Note): void\n    {\n        this._notesService.deleteNote(note)\n            .subscribe((isDeleted) =>\n            {\n                // Return if the note wasn't deleted...\n                if ( !isDeleted )\n                {\n                    return;\n                }\n\n                // Close the dialog\n                this._matDialogRef.close();\n            });\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Read the given file for demonstration purposes\n     *\n     * @param file\n     */\n    private _readAsDataURL(file: File): Promise<any>\n    {\n        // Return a new promise\n        return new Promise((resolve, reject) =>\n        {\n            // Create a new reader\n            const reader = new FileReader();\n\n            // Resolve the promise on success\n            reader.onload = (): void =>\n            {\n                resolve(reader.result);\n            };\n\n            // Reject the promise on error\n            reader.onerror = (e): void =>\n            {\n                reject(e);\n            };\n\n            // Read the file as the\n            reader.readAsDataURL(file);\n        });\n    }\n}\n","<div class=\"flex flex-col flex-auto md:w-160 md:min-w-160 -m-6\">\n    <ng-container *ngIf=\"(note$ | async) as note\">\n        <!-- Image -->\n        <ng-container *ngIf=\"note.image\">\n            <div class=\"relative w-full\">\n                <div class=\"absolute right-0 bottom-0 p-4\">\n                    <button\n                        mat-icon-button\n                        (click)=\"removeImage(note)\">\n                        <mat-icon\n                            class=\"text-white\"\n                            [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                    </button>\n                </div>\n                <img\n                    class=\"w-full object-cover\"\n                    [src]=\"note.image\">\n            </div>\n        </ng-container>\n        <div class=\"m-4\">\n            <!-- Title -->\n            <div>\n                <input\n                    class=\"w-full p-2 text-2xl\"\n                    [placeholder]=\"'Title'\"\n                    [(ngModel)]=\"note.title\"\n                    (input)=\"updateNoteDetails(note)\">\n            </div>\n            <!-- Note -->\n            <div class=\"flex w-full py-5 px-2\">\n                <textarea\n                    class=\"w-full\"\n                    [placeholder]=\"'Note'\"\n                    [(ngModel)]=\"note.content\"\n                    (input)=\"updateNoteDetails(note)\"\n                    cdkTextareaAutosize></textarea>\n            </div>\n            <!-- Tasks -->\n            <ng-container *ngIf=\"note.tasks\">\n                <div class=\"mx-2 mt-4 space-y-1.5\">\n                    <ng-container *ngFor=\"let task of note.tasks; trackBy: trackByFn\">\n                        <div class=\"group flex items-center\">\n                            <mat-checkbox\n                                class=\"flex items-center\"\n                                [color]=\"'primary'\"\n                                [(ngModel)]=\"task.completed\"\n                                (change)=\"updateTaskOnNote(note, task)\"></mat-checkbox>\n                            <input\n                                class=\"w-full px-1 py-0.5\"\n                                [ngClass]=\"{'text-secondary line-through': task.completed}\"\n                                [placeholder]=\"'Task'\"\n                                [(ngModel)]=\"task.content\"\n                                (input)=\"updateTaskOnNote(note, task)\">\n                            <mat-icon\n                                class=\"hidden group-hover:flex ml-auto icon-size-5 cursor-pointer\"\n                                [svgIcon]=\"'heroicons_solid:x-mark'\"\n                                (click)=\"removeTaskFromNote(note, task)\"></mat-icon>\n                        </div>\n                    </ng-container>\n                    <div class=\"flex items-center\">\n                        <mat-icon\n                            class=\"-ml-0.5 icon-size-5 text-hint\"\n                            [svgIcon]=\"'heroicons_solid:plus'\"></mat-icon>\n                        <input\n                            class=\"w-full ml-1.5 px-1 py-0.5\"\n                            [placeholder]=\"'Add task'\"\n                            (keydown.enter)=\"addTaskToNote(note, newTaskInput.value); newTaskInput.value = ''\"\n                            #newTaskInput>\n                    </div>\n                </div>\n            </ng-container>\n            <!-- Labels -->\n            <ng-container *ngIf=\"note.labels && note.labels.length\">\n                <div class=\"flex flex-wrap items-center mx-1 mt-6\">\n                    <ng-container *ngFor=\"let label of note.labels; trackBy: trackByFn\">\n                        <div class=\"flex items-center m-1 py-0.5 px-3 rounded-full text-sm font-medium text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                            <div>\n                                {{label.title}}\n                            </div>\n                            <mat-icon\n                                class=\"ml-1 icon-size-4 cursor-pointer\"\n                                [svgIcon]=\"'heroicons_solid:x-circle'\"\n                                (click)=\"toggleLabelOnNote(note, label)\"></mat-icon>\n                        </div>\n                    </ng-container>\n                </div>\n            </ng-container>\n            <!-- Add Actions -->\n            <ng-container *ngIf=\"!note.id\">\n                <div class=\"flex items-center justify-end mt-4\">\n                    <!-- Save -->\n                    <button\n                        mat-flat-button\n                        [color]=\"'primary'\"\n                        [disabled]=\"!note.title && !note.content\"\n                        (click)=\"createNote(note)\">\n                        Save\n                    </button>\n                </div>\n            </ng-container>\n            <!-- Edit Actions -->\n            <ng-container *ngIf=\"note.id\">\n                <div class=\"flex items-center justify-between mt-4\">\n                    <div class=\"flex items-center space-x-2\">\n                        <!-- Image -->\n                        <div>\n                            <input\n                                id=\"image-file-input\"\n                                class=\"absolute h-0 w-0 opacity-0 invisible pointer-events-none\"\n                                type=\"file\"\n                                [multiple]=\"false\"\n                                [accept]=\"'image/jpeg, image/png'\"\n                                (change)=\"uploadImage(note, imageFileInput.files)\"\n                                #imageFileInput>\n                            <label\n                                class=\"flex items-center justify-center w-10 h-10 rounded-full cursor-pointer hover:bg-gray-400 hover:bg-opacity-20 dark:hover:bg-black dark:hover:bg-opacity-5\"\n                                for=\"image-file-input\"\n                                matRipple>\n                                <mat-icon [svgIcon]=\"'heroicons_outline:photo'\"></mat-icon>\n                            </label>\n                        </div>\n                        <!-- Checklist -->\n                        <button\n                            mat-icon-button\n                            (click)=\"addTasksToNote(note)\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:clipboard-document-list'\"></mat-icon>\n                        </button>\n                        <!-- Labels -->\n                        <button\n                            mat-icon-button\n                            [matMenuTriggerFor]=\"labelsMenu\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:tag'\"></mat-icon>\n                        </button>\n                        <mat-menu #labelsMenu=\"matMenu\">\n                            <ng-container *ngIf=\"(labels$ | async) as labels\">\n                                <ng-container *ngFor=\"let label of labels\">\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"toggleLabelOnNote(note, label)\">\n                                        <span class=\"flex items-center\">\n                                            <mat-checkbox\n                                                class=\"flex items-center pointer-events-none\"\n                                                [color]=\"'primary'\"\n                                                [checked]=\"isNoteHasLabel(note, label)\"\n                                                disableRipple></mat-checkbox>\n                                            <span class=\"ml-1 leading-5\">{{label.title}}</span>\n                                        </span>\n                                    </button>\n                                </ng-container>\n                            </ng-container>\n                        </mat-menu>\n                        <!-- Archive -->\n                        <button\n                            mat-icon-button\n                            (click)=\"toggleArchiveOnNote(note)\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:archive-box'\"></mat-icon>\n                        </button>\n                        <!-- Delete -->\n                        <button\n                            mat-icon-button\n                            (click)=\"deleteNote(note)\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                        </button>\n                    </div>\n                    <!-- Close -->\n                    <button\n                        mat-flat-button\n                        matDialogClose>\n                        Close\n                    </button>\n                </div>\n            </ng-container>\n        </div>\n    </ng-container>\n\n</div>\n","import { AsyncPipe, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { NotesService } from 'app/modules/admin/apps/notes/notes.service';\nimport { Label } from 'app/modules/admin/apps/notes/notes.types';\nimport { debounceTime, filter, Observable, Subject, switchMap, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'notes-labels',\n    templateUrl    : './labels.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, MatDialogModule, MatIconModule, MatFormFieldModule, MatInputModule, NgIf, NgFor, FormsModule, AsyncPipe],\n})\nexport class NotesLabelsComponent implements OnInit, OnDestroy\n{\n    labels$: Observable<Label[]>;\n\n    labelChanged: Subject<Label> = new Subject<Label>();\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _notesService: NotesService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the labels\n        this.labels$ = this._notesService.labels$;\n\n        // Subscribe to label updates\n        this.labelChanged\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                debounceTime(500),\n                filter(label => label.title.trim() !== ''),\n                switchMap(label => this._notesService.updateLabel(label)))\n            .subscribe(() =>\n            {\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Add label\n     *\n     * @param title\n     */\n    addLabel(title: string): void\n    {\n        this._notesService.addLabel(title).subscribe();\n    }\n\n    /**\n     * Update label\n     */\n    updateLabel(label: Label): void\n    {\n        this.labelChanged.next(label);\n    }\n\n    /**\n     * Delete label\n     *\n     * @param id\n     */\n    deleteLabel(id: string): void\n    {\n        this._notesService.deleteLabel(id).subscribe(() =>\n        {\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"flex flex-col flex-auto w-80 min-w-80 p-2 md:p-4\">\n    <!-- Header -->\n    <div class=\"flex items-center justify-between\">\n        <div class=\"text-2xl font-semibold\">Edit labels</div>\n        <button\n            matDialogClose\n            mat-icon-button>\n            <mat-icon [svgIcon]=\"'heroicons_outline:x-mark'\"></mat-icon>\n        </button>\n    </div>\n    <!-- New label -->\n    <mat-form-field class=\"fuse-mat-dense w-full mt-8\">\n        <input\n            name=\"new-label\"\n            [autocomplete]=\"'off'\"\n            [placeholder]=\"'Create new label'\"\n            matInput\n            #newLabelInput>\n        <button\n            [class.invisible]=\"newLabelInput.value.trim() === ''\"\n            mat-icon-button\n            (click)=\"addLabel(newLabelInput.value); newLabelInput.value = ''\"\n            matSuffix>\n            <mat-icon\n                class=\"icon-size-5\"\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n        </button>\n    </mat-form-field>\n    <!-- Labels -->\n    <div class=\"flex flex-col mt-4\">\n        <ng-container *ngIf=\"(labels$ | async) as labels\">\n            <ng-container *ngFor=\"let label of labels; trackBy: trackByFn\">\n                <mat-form-field class=\"fuse-mat-dense w-full\">\n                    <button\n                        mat-icon-button\n                        matPrefix\n                        (click)=\"deleteLabel(label.id)\">\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                    </button>\n                    <input\n                        [autocomplete]=\"'off'\"\n                        [(ngModel)]=\"label.title\"\n                        (input)=\"updateLabel(label)\"\n                        required\n                        matInput>\n                </mat-form-field>\n            </ng-container>\n        </ng-container>\n    </div>\n</div>\n","import { AsyncPipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { FuseMasonryComponent } from '@fuse/components/masonry';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { NotesDetailsComponent } from 'app/modules/admin/apps/notes/details/details.component';\nimport { NotesLabelsComponent } from 'app/modules/admin/apps/notes/labels/labels.component';\nimport { NotesService } from 'app/modules/admin/apps/notes/notes.service';\nimport { Label, Note } from 'app/modules/admin/apps/notes/notes.types';\nimport { cloneDeep } from 'lodash-es';\nimport { BehaviorSubject, combineLatest, distinctUntilChanged, map, Observable, Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'notes-list',\n    templateUrl    : './list.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatSidenavModule, MatRippleModule, NgClass, MatIconModule, NgIf, NgFor, MatButtonModule, MatFormFieldModule, MatInputModule, FuseMasonryComponent, AsyncPipe],\n})\nexport class NotesListComponent implements OnInit, OnDestroy\n{\n    labels$: Observable<Label[]>;\n    notes$: Observable<Note[]>;\n\n    drawerMode: 'over' | 'side' = 'side';\n    drawerOpened: boolean = true;\n    filter$: BehaviorSubject<string> = new BehaviorSubject('notes');\n    searchQuery$: BehaviorSubject<string> = new BehaviorSubject(null);\n    masonryColumns: number = 4;\n\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n        private _matDialog: MatDialog,\n        private _notesService: NotesService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get the filter status\n     */\n    get filterStatus(): string\n    {\n        return this.filter$.value;\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Request the data from the server\n        this._notesService.getLabels().subscribe();\n        this._notesService.getNotes().subscribe();\n\n        // Get labels\n        this.labels$ = this._notesService.labels$;\n\n        // Get notes\n        this.notes$ = combineLatest([this._notesService.notes$, this.filter$, this.searchQuery$]).pipe(\n            distinctUntilChanged(),\n            map(([notes, filter, searchQuery]) =>\n            {\n                if ( !notes || !notes.length )\n                {\n                    return;\n                }\n\n                // Store the filtered notes\n                let filteredNotes = notes;\n\n                // Filter by query\n                if ( searchQuery )\n                {\n                    searchQuery = searchQuery.trim().toLowerCase();\n                    filteredNotes = filteredNotes.filter(note => note.title.toLowerCase().includes(searchQuery) || note.content.toLowerCase().includes(searchQuery));\n                }\n\n                // Show all\n                if ( filter === 'notes' )\n                {\n                    // Do nothing\n                }\n\n                // Show archive\n                const isArchive = filter === 'archived';\n                filteredNotes = filteredNotes.filter(note => note.archived === isArchive);\n\n                // Filter by label\n                if ( filter.startsWith('label:') )\n                {\n                    const labelId = filter.split(':')[1];\n                    filteredNotes = filteredNotes.filter(note => !!note.labels.find(item => item.id === labelId));\n                }\n\n                return filteredNotes;\n            }),\n        );\n\n        // Subscribe to media changes\n        this._fuseMediaWatcherService.onMediaChange$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(({matchingAliases}) =>\n            {\n                // Set the drawerMode and drawerOpened if the given breakpoint is active\n                if ( matchingAliases.includes('lg') )\n                {\n                    this.drawerMode = 'side';\n                    this.drawerOpened = true;\n                }\n                else\n                {\n                    this.drawerMode = 'over';\n                    this.drawerOpened = false;\n                }\n\n                // Set the masonry columns\n                //\n                // This if block structured in a way so that only the\n                // biggest matching alias will be used to set the column\n                // count.\n                if ( matchingAliases.includes('xl') )\n                {\n                    this.masonryColumns = 5;\n                }\n                else if ( matchingAliases.includes('lg') )\n                {\n                    this.masonryColumns = 4;\n                }\n                else if ( matchingAliases.includes('md') )\n                {\n                    this.masonryColumns = 3;\n                }\n                else if ( matchingAliases.includes('sm') )\n                {\n                    this.masonryColumns = 2;\n                }\n                else\n                {\n                    this.masonryColumns = 1;\n                }\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Add a new note\n     */\n    addNewNote(): void\n    {\n        this._matDialog.open(NotesDetailsComponent, {\n            autoFocus: false,\n            data     : {\n                note: {},\n            },\n        });\n    }\n\n    /**\n     * Open the edit labels dialog\n     */\n    openEditLabelsDialog(): void\n    {\n        this._matDialog.open(NotesLabelsComponent, {autoFocus: false});\n    }\n\n    /**\n     * Open the note dialog\n     */\n    openNoteDialog(note: Note): void\n    {\n        this._matDialog.open(NotesDetailsComponent, {\n            autoFocus: false,\n            data     : {\n                note: cloneDeep(note),\n            },\n        });\n    }\n\n    /**\n     * Filter by archived\n     */\n    filterByArchived(): void\n    {\n        this.filter$.next('archived');\n    }\n\n    /**\n     * Filter by label\n     *\n     * @param labelId\n     */\n    filterByLabel(labelId: string): void\n    {\n        const filterValue = `label:${labelId}`;\n        this.filter$.next(filterValue);\n    }\n\n    /**\n     * Filter by query\n     *\n     * @param query\n     */\n    filterByQuery(query: string): void\n    {\n        this.searchQuery$.next(query);\n    }\n\n    /**\n     * Reset filter\n     */\n    resetFilter(): void\n    {\n        this.filter$.next('notes');\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\n\n    <mat-drawer-container class=\"flex-auto h-full bg-card dark:bg-transparent\">\n\n        <!-- Drawer -->\n        <mat-drawer\n            class=\"w-2/3 sm:w-72 lg:w-56 border-r-0 bg-default\"\n            [mode]=\"drawerMode\"\n            [opened]=\"drawerOpened\"\n            #drawer>\n            <div class=\"p-6 lg:py-8 lg:pl-4 lg:pr-0\">\n                <!-- Filters -->\n                <div class=\"space-y-2\">\n                    <!-- Notes -->\n                    <div\n                        class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer\"\n                        [ngClass]=\"{'bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400': filterStatus === 'notes',\n                                'text-hint hover:bg-hover': filterStatus !== 'notes'}\"\n                        (click)=\"resetFilter()\"\n                        matRipple\n                        [matRippleDisabled]=\"filterStatus === 'notes'\">\n                        <mat-icon\n                            class=\"text-current\"\n                            [svgIcon]=\"'heroicons_outline:pencil-square'\"></mat-icon>\n                        <div class=\"ml-3 leading-5 select-none text-default\">Notes</div>\n                    </div>\n                    <!-- Archive -->\n                    <div\n                        class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer\"\n                        [ngClass]=\"{'bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400': filterStatus === 'archived',\n                                'text-hint hover:bg-hover': filterStatus !== 'archived'}\"\n                        (click)=\"filterByArchived()\"\n                        matRipple\n                        [matRippleDisabled]=\"filterStatus === 'archived'\">\n                        <mat-icon\n                            class=\"text-current\"\n                            [svgIcon]=\"'heroicons_outline:archive-box'\"></mat-icon>\n                        <div class=\"ml-3 leading-5 select-none text-default\">Archive</div>\n                    </div>\n                    <!-- Labels -->\n                    <ng-container *ngIf=\"(labels$ | async) as labels\">\n                        <ng-container *ngFor=\"let label of labels; trackBy: trackByFn\">\n                            <div\n                                class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer\"\n                                [ngClass]=\"{'bg-gray-200 dark:bg-gray-700 text-primary dark:text-primary-400': 'label:' + label.id === filterStatus,\n                                    'text-hint hover:bg-hover': 'label:' + label.id !== filterStatus}\"\n                                (click)=\"filterByLabel(label.id)\"\n                                matRipple\n                                [matRippleDisabled]=\"'label:' + label.id === filterStatus\">\n                                <mat-icon\n                                    class=\"text-current\"\n                                    [svgIcon]=\"'heroicons_outline:tag'\"></mat-icon>\n                                <div class=\"ml-3 leading-5 select-none text-default\">{{label.title}}</div>\n                            </div>\n                        </ng-container>\n                    </ng-container>\n                    <!-- Edit Labels -->\n                    <div\n                        class=\"relative flex items-center py-2 px-4 font-medium rounded-full cursor-pointer hover:bg-hover\"\n                        (click)=\"openEditLabelsDialog()\"\n                        matRipple>\n                        <mat-icon\n                            class=\"text-hint\"\n                            [svgIcon]=\"'heroicons_outline:pencil'\"></mat-icon>\n                        <div class=\"ml-3 leading-5 select-none\">Edit labels</div>\n                    </div>\n                </div>\n            </div>\n        </mat-drawer>\n\n        <mat-drawer-content class=\"flex flex-col bg-gray-100 dark:bg-transparent\">\n\n            <!-- Main -->\n            <div class=\"flex flex-col flex-auto p-6 md:p-8\">\n\n                <!-- Header -->\n                <div class=\"flex items-center\">\n                    <div class=\"flex items-center flex-auto\">\n                        <button\n                            class=\"flex lg:hidden -ml-2\"\n                            mat-icon-button\n                            (click)=\"drawer.toggle()\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:bars-3'\"></mat-icon>\n                        </button>\n                        <mat-form-field\n                            class=\"fuse-mat-rounded fuse-mat-dense flex-auto ml-4 lg:ml-0\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:magnifying-glass'\"\n                                matPrefix></mat-icon>\n                            <input\n                                matInput\n                                [autocomplete]=\"'off'\"\n                                [placeholder]=\"'Search notes'\"\n                                (input)=\"filterByQuery(searchInput.value)\"\n                                #searchInput>\n                        </mat-form-field>\n                    </div>\n                    <!-- New note -->\n                    <button\n                        class=\"ml-4 px-1 sm:px-4 min-w-10\"\n                        mat-flat-button\n                        [color]=\"'primary'\"\n                        (click)=\"addNewNote()\">\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                        <span class=\"hidden sm:inline-block ml-2\">New note</span>\n                    </button>\n                </div>\n\n                <!-- Notes -->\n                <ng-container *ngIf=\"(notes$ | async) as notes; else loading\">\n                    <ng-container *ngIf=\"notes.length; else noNotes\">\n\n                        <!-- Masonry layout -->\n                        <fuse-masonry\n                            class=\"-mx-2 mt-8\"\n                            [items]=\"notes\"\n                            [columns]=\"masonryColumns\"\n                            [columnsTemplate]=\"columnsTemplate\">\n                            <!-- Columns template -->\n                            <ng-template\n                                #columnsTemplate\n                                let-columns>\n                                <!-- Columns -->\n                                <ng-container *ngFor=\"let column of columns; trackBy: trackByFn\">\n                                    <!-- Column -->\n                                    <div class=\"flex-1 px-2 space-y-4\">\n                                        <ng-container *ngFor=\"let note of column.items; trackBy: trackByFn\">\n                                            <!-- Note -->\n                                            <div\n                                                class=\"flex flex-col shadow rounded-2xl overflow-hidden cursor-pointer bg-card\"\n                                                (click)=\"openNoteDialog(note)\">\n                                                <!-- Image -->\n                                                <ng-container *ngIf=\"note.image\">\n                                                    <img\n                                                        class=\"w-full object-cover\"\n                                                        [src]=\"note.image\">\n                                                </ng-container>\n                                                <div class=\"flex flex-auto flex-col p-6 space-y-4\">\n                                                    <!-- Title -->\n                                                    <ng-container *ngIf=\"note.title\">\n                                                        <div class=\"font-semibold line-clamp-3\">\n                                                            {{note.title}}\n                                                        </div>\n                                                    </ng-container>\n                                                    <!-- Content -->\n                                                    <ng-container *ngIf=\"note.content\">\n                                                        <div [class.text-xl]=\"note.content.length < 70\">\n                                                            {{note.content}}\n                                                        </div>\n                                                    </ng-container>\n                                                    <!-- Tasks -->\n                                                    <ng-container *ngIf=\"note.tasks\">\n                                                        <div class=\"space-y-1.5\">\n                                                            <ng-container *ngFor=\"let task of note.tasks; trackBy: trackByFn\">\n                                                                <div class=\"flex items-center\">\n                                                                    <ng-container *ngIf=\"!task.completed\">\n                                                                        <div class=\"flex items-center justify-center w-5 h-5\">\n                                                                            <div class=\"w-4 h-4 rounded-full border-2\"></div>\n                                                                        </div>\n                                                                    </ng-container>\n                                                                    <ng-container *ngIf=\"task.completed\">\n                                                                        <mat-icon\n                                                                            class=\"text-hint icon-size-5\"\n                                                                            [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n                                                                    </ng-container>\n                                                                    <div\n                                                                        class=\"ml-1.5 leading-5\"\n                                                                        [ngClass]=\"{'text-secondary line-through': task.completed}\">\n                                                                        {{task.content}}\n                                                                    </div>\n                                                                </div>\n                                                            </ng-container>\n                                                        </div>\n                                                    </ng-container>\n                                                    <!-- Labels -->\n                                                    <ng-container *ngIf=\"note.labels\">\n                                                        <div class=\"flex flex-wrap items-center -m-1\">\n                                                            <ng-container *ngFor=\"let label of note.labels; trackBy: trackByFn\">\n                                                                <div class=\"m-1 py-0.5 px-3 rounded-full text-sm font-medium text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                                                                    {{label.title}}\n                                                                </div>\n                                                            </ng-container>\n                                                        </div>\n                                                    </ng-container>\n                                                </div>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                </ng-container>\n                            </ng-template>\n                        </fuse-masonry>\n\n                    </ng-container>\n                </ng-container>\n\n                <!-- Loading template -->\n                <ng-template #loading>\n                    <div class=\"flex flex-auto flex-col items-center justify-center bg-gray-100 dark:bg-transparent\">\n                        <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">Loading...</div>\n                    </div>\n                </ng-template>\n\n                <!-- No notes template -->\n                <ng-template #noNotes>\n                    <div class=\"flex flex-auto flex-col items-center justify-center bg-gray-100 dark:bg-transparent\">\n                        <mat-icon\n                            class=\"icon-size-24\"\n                            [svgIcon]=\"'heroicons_outline:document'\"></mat-icon>\n                        <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">There are no notes!</div>\n                    </div>\n                </ng-template>\n\n            </div>\n\n        </mat-drawer-content>\n\n    </mat-drawer-container>\n\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n    selector       : 'notes',\n    templateUrl    : './notes.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [RouterOutlet],\n})\nexport class NotesComponent\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<router-outlet></router-outlet>\n","import { Routes } from '@angular/router';\nimport { NotesListComponent } from 'app/modules/admin/apps/notes/list/list.component';\nimport { NotesComponent } from 'app/modules/admin/apps/notes/notes.component';\n\nexport default [\n    {\n        path     : '',\n        component: NotesComponent,\n        children : [\n            {\n                path     : '',\n                component: NotesListComponent,\n            },\n        ],\n    },\n] as Routes;\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Label, Note } from 'app/modules/admin/apps/notes/notes.types';\nimport { cloneDeep } from 'lodash-es';\nimport { BehaviorSubject, map, Observable, of, switchMap, take, tap, throwError } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class NotesService\n{\n    // Private\n    private _labels: BehaviorSubject<Label[] | null> = new BehaviorSubject(null);\n    private _note: BehaviorSubject<Note | null> = new BehaviorSubject(null);\n    private _notes: BehaviorSubject<Note[] | null> = new BehaviorSubject(null);\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for labels\n     */\n    get labels$(): Observable<Label[]>\n    {\n        return this._labels.asObservable();\n    }\n\n    /**\n     * Getter for notes\n     */\n    get notes$(): Observable<Note[]>\n    {\n        return this._notes.asObservable();\n    }\n\n    /**\n     * Getter for note\n     */\n    get note$(): Observable<Note>\n    {\n        return this._note.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get labels\n     */\n    getLabels(): Observable<Label[]>\n    {\n        return this._httpClient.get<Label[]>('api/apps/notes/labels').pipe(\n            tap((response: Label[]) =>\n            {\n                this._labels.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Add label\n     *\n     * @param title\n     */\n    addLabel(title: string): Observable<Label[]>\n    {\n        return this._httpClient.post<Label[]>('api/apps/notes/labels', {title}).pipe(\n            tap((labels) =>\n            {\n                // Update the labels\n                this._labels.next(labels);\n            }),\n        );\n    }\n\n    /**\n     * Update label\n     *\n     * @param label\n     */\n    updateLabel(label: Label): Observable<Label[]>\n    {\n        return this._httpClient.patch<Label[]>('api/apps/notes/labels', {label}).pipe(\n            tap((labels) =>\n            {\n                // Update the notes\n                this.getNotes().subscribe();\n\n                // Update the labels\n                this._labels.next(labels);\n            }),\n        );\n    }\n\n    /**\n     * Delete a label\n     *\n     * @param id\n     */\n    deleteLabel(id: string): Observable<Label[]>\n    {\n        return this._httpClient.delete<Label[]>('api/apps/notes/labels', {params: {id}}).pipe(\n            tap((labels) =>\n            {\n                // Update the notes\n                this.getNotes().subscribe();\n\n                // Update the labels\n                this._labels.next(labels);\n            }),\n        );\n    }\n\n    /**\n     * Get notes\n     */\n    getNotes(): Observable<Note[]>\n    {\n        return this._httpClient.get<Note[]>('api/apps/notes/all').pipe(\n            tap((response: Note[]) =>\n            {\n                this._notes.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Get note by id\n     */\n    getNoteById(id: string): Observable<Note>\n    {\n        return this._notes.pipe(\n            take(1),\n            map((notes) =>\n            {\n                // Find within the folders and files\n                const note = notes.find(value => value.id === id) || null;\n\n                // Update the note\n                this._note.next(note);\n\n                // Return the note\n                return note;\n            }),\n            switchMap((note) =>\n            {\n                if ( !note )\n                {\n                    return throwError('Could not found the note with id of ' + id + '!');\n                }\n\n                return of(note);\n            }),\n        );\n    }\n\n    /**\n     * Add task to the given note\n     *\n     * @param note\n     * @param task\n     */\n    addTask(note: Note, task: string): Observable<Note>\n    {\n        return this._httpClient.post<Note>('api/apps/notes/tasks', {\n            note,\n            task,\n        }).pipe(switchMap(() => this.getNotes().pipe(\n            switchMap(() => this.getNoteById(note.id)),\n        )));\n    }\n\n    /**\n     * Create note\n     *\n     * @param note\n     */\n    createNote(note: Note): Observable<Note>\n    {\n        return this._httpClient.post<Note>('api/apps/notes', {note}).pipe(\n            switchMap(response => this.getNotes().pipe(\n                switchMap(() => this.getNoteById(response.id).pipe(\n                    map(() => response),\n                )),\n            )));\n    }\n\n    /**\n     * Update the note\n     *\n     * @param note\n     */\n    updateNote(note: Note): Observable<Note>\n    {\n        // Clone the note to prevent accidental reference based updates\n        const updatedNote = cloneDeep(note) as any;\n\n        // Before sending the note to the server, handle the labels\n        if ( updatedNote.labels.length )\n        {\n            updatedNote.labels = updatedNote.labels.map(label => label.id);\n        }\n\n        return this._httpClient.patch<Note>('api/apps/notes', {updatedNote}).pipe(\n            tap((response) =>\n            {\n                // Update the notes\n                this.getNotes().subscribe();\n            }),\n        );\n    }\n\n    /**\n     * Delete the note\n     *\n     * @param note\n     */\n    deleteNote(note: Note): Observable<boolean>\n    {\n        return this._httpClient.delete<boolean>('api/apps/notes', {params: {id: note.id}}).pipe(\n            map((isDeleted: boolean) =>\n            {\n                // Update the notes\n                this.getNotes().subscribe();\n\n                // Return the deleted status\n                return isDeleted;\n            }),\n        );\n    }\n}\n"],"names":["TextFieldModule","AsyncPipe","NgClass","NgFor","NgIf","FormsModule","MatButtonModule","MatCheckboxModule","MatRippleModule","MAT_DIALOG_DATA","MatDialogModule","MatIconModule","MatMenuModule","debounceTime","map","of","Subject","switchMap","takeUntil","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵlistener","NotesDetailsComponent_ng_container_1_ng_container_1_Template_button_click_3_listener","ɵɵrestoreView","_r9","note_r1","ɵɵnextContext","ngIf","ctx_r7","ɵɵresetView","removeImage","ɵɵelement","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","image","ɵɵsanitizeUrl","NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_mat_checkbox_ngModelChange_2_listener","$event","restoredCtx","_r15","task_r13","$implicit","completed","NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_mat_checkbox_change_2_listener","ctx_r16","updateTaskOnNote","NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_input_ngModelChange_3_listener","content","NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_input_input_3_listener","ctx_r19","NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template_mat_icon_click_4_listener","ctx_r21","removeTaskFromNote","ɵɵpureFunction1","_c0","ɵɵtemplate","NotesDetailsComponent_ng_container_1_ng_container_7_ng_container_2_Template","NotesDetailsComponent_ng_container_1_ng_container_7_Template_input_keydown_enter_5_listener","_r25","_r12","ɵɵreference","ctx_r23","addTaskToNote","value","tasks","ctx_r3","trackByFn","ɵɵtext","NotesDetailsComponent_ng_container_1_ng_container_8_ng_container_2_Template_mat_icon_click_4_listener","_r31","label_r28","ctx_r29","toggleLabelOnNote","ɵɵtextInterpolate1","title","NotesDetailsComponent_ng_container_1_ng_container_8_ng_container_2_Template","labels","ctx_r4","NotesDetailsComponent_ng_container_1_ng_container_9_Template_button_click_2_listener","_r35","ctx_r33","createNote","NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_ng_container_1_Template_button_click_1_listener","_r45","label_r42","ctx_r43","ctx_r41","isNoteHasLabel","ɵɵtextInterpolate","NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_ng_container_1_Template","labels_r40","NotesDetailsComponent_ng_container_1_ng_container_10_Template_input_change_4_listener","_r49","_r37","ctx_r47","uploadImage","files","NotesDetailsComponent_ng_container_1_ng_container_10_Template_button_click_8_listener","ctx_r50","addTasksToNote","NotesDetailsComponent_ng_container_1_ng_container_10_ng_container_14_Template","NotesDetailsComponent_ng_container_1_ng_container_10_Template_button_click_16_listener","ctx_r52","toggleArchiveOnNote","NotesDetailsComponent_ng_container_1_ng_container_10_Template_button_click_18_listener","ctx_r54","deleteNote","_r38","ɵɵpipeBind1","ctx_r6","labels$","NotesDetailsComponent_ng_container_1_ng_container_1_Template","NotesDetailsComponent_ng_container_1_Template_input_ngModelChange_4_listener","_r57","NotesDetailsComponent_ng_container_1_Template_input_input_4_listener","ctx_r58","updateNoteDetails","NotesDetailsComponent_ng_container_1_Template_textarea_ngModelChange_6_listener","NotesDetailsComponent_ng_container_1_Template_textarea_input_6_listener","ctx_r60","NotesDetailsComponent_ng_container_1_ng_container_7_Template","NotesDetailsComponent_ng_container_1_ng_container_8_Template","NotesDetailsComponent_ng_container_1_ng_container_9_Template","NotesDetailsComponent_ng_container_1_ng_container_10_Template","length","id","NotesDetailsComponent","constructor","_changeDetectorRef","_data","_notesService","_matDialogRef","noteChanged","_unsubscribeAll","ngOnInit","note","getNoteById","subscribe","note$","reminder","archived","createdAt","updatedAt","pipe","updateNote","markForCheck","ngOnDestroy","next","complete","fileList","allowedTypes","file","includes","type","_readAsDataURL","then","data","task","trim","addTask","filter","item","label","find","push","close","isDeleted","index","Promise","resolve","reject","reader","FileReader","onload","result","onerror","e","readAsDataURL","_","ɵɵdirectiveInject","ChangeDetectorRef","i1","NotesService","i2","MatDialogRef","_2","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NotesDetailsComponent_Template","rf","ctx","NotesDetailsComponent_ng_container_1_Template","i3","MatButton","MatIconButton","i4","MatIcon","i5","DefaultValueAccessor","NgControlStatus","NgModel","i6","CdkTextareaAutosize","i7","MatCheckbox","i8","MatRipple","i9","MatMenu","MatMenuItem","MatMenuTrigger","MatDialogClose","encapsulation","changeDetection","MatFormFieldModule","MatInputModule","NotesLabelsComponent_ng_container_12_ng_container_1_Template_button_click_2_listener","_r6","label_r4","ctx_r5","deleteLabel","NotesLabelsComponent_ng_container_12_ng_container_1_Template_input_ngModelChange_4_listener","NotesLabelsComponent_ng_container_12_ng_container_1_Template_input_input_4_listener","ctx_r8","updateLabel","NotesLabelsComponent_ng_container_12_ng_container_1_Template","labels_r2","ctx_r1","NotesLabelsComponent","labelChanged","addLabel","NotesLabelsComponent_Template","NotesLabelsComponent_Template_button_click_9_listener","_r0","NotesLabelsComponent_ng_container_12_Template","ɵɵclassProp","MatFormField","MatPrefix","MatSuffix","MatInput","RequiredValidator","MatSidenavModule","FuseMasonryComponent","cloneDeep","BehaviorSubject","combineLatest","distinctUntilChanged","NotesListComponent_ng_container_14_ng_container_1_Template_div_click_1_listener","label_r10","ctx_r11","filterByLabel","ɵɵpureFunction2","ctx_r9","filterStatus","NotesListComponent_ng_container_14_ng_container_1_Template","labels_r8","note_r21","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_ng_container_2_Template","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_ng_container_3_Template","task_r31","_c1","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_ng_container_2_Template","ctx_r25","label_r36","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_7_ng_container_2_Template","ctx_r26","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_Template_div_click_1_listener","_r39","ctx_r38","openNoteDialog","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_2_Template","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_4_Template","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_5_Template","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_6_Template","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_ng_container_7_Template","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_ng_container_2_Template","column_r19","items","ctx_r18","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_ng_container_0_Template","columns_r17","ctx_r15","NotesListComponent_ng_container_34_ng_container_1_ng_template_2_Template","ɵɵtemplateRefExtractor","notes_r13","ctx_r14","masonryColumns","_r16","NotesListComponent_ng_container_34_ng_container_1_Template","_r7","NotesListComponent","_fuseMediaWatcherService","_matDialog","drawerMode","drawerOpened","filter$","searchQuery$","getLabels","getNotes","notes$","notes","searchQuery","filteredNotes","toLowerCase","isArchive","startsWith","labelId","split","onMediaChange$","matchingAliases","addNewNote","open","autoFocus","openEditLabelsDialog","filterByArchived","filterValue","filterByQuery","query","resetFilter","FuseMediaWatcherService","MatDialog","NotesListComponent_Template","NotesListComponent_Template_div_click_6_listener","NotesListComponent_Template_div_click_10_listener","NotesListComponent_ng_container_14_Template","NotesListComponent_Template_div_click_16_listener","NotesListComponent_Template_button_click_24_listener","_r41","toggle","NotesListComponent_Template_input_input_28_listener","_r2","NotesListComponent_Template_button_click_30_listener","NotesListComponent_ng_container_34_Template","NotesListComponent_ng_template_36_Template","NotesListComponent_ng_template_38_Template","_r5","MatDrawer","MatDrawerContainer","MatDrawerContent","RouterOutlet","NotesComponent","NotesComponent_Template","path","component","children","take","tap","throwError","_httpClient","_labels","_note","_notes","asObservable","get","response","post","patch","delete","params","updatedNote","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}