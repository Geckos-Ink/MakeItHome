{"version":3,"file":"src_app_modules_admin_apps_chat_chat_routes_ts.js","mappings":"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","sources":["./src/app/modules/admin/apps/chat/chat.component.ts","./src/app/modules/admin/apps/chat/chat.component.html","./src/app/modules/admin/apps/chat/chat.routes.ts","./src/app/modules/admin/apps/chat/chat.service.ts","./src/app/modules/admin/apps/chat/chats/chats.component.ts","./src/app/modules/admin/apps/chat/chats/chats.component.html","./src/app/modules/admin/apps/chat/contact-info/contact-info.component.ts","./src/app/modules/admin/apps/chat/contact-info/contact-info.component.html","./src/app/modules/admin/apps/chat/conversation/conversation.component.ts","./src/app/modules/admin/apps/chat/conversation/conversation.component.html","./src/app/modules/admin/apps/chat/empty-conversation/empty-conversation.component.ts","./src/app/modules/admin/apps/chat/empty-conversation/empty-conversation.component.html","./src/app/modules/admin/apps/chat/new-chat/new-chat.component.ts","./src/app/modules/admin/apps/chat/new-chat/new-chat.component.html","./src/app/modules/admin/apps/chat/profile/profile.component.ts","./src/app/modules/admin/apps/chat/profile/profile.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n    selector       : 'chat',\n    templateUrl    : './chat.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [RouterOutlet],\n})\nexport class ChatComponent\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\n\n    <!-- Main -->\n    <div class=\"flex flex-auto overflow-hidden\">\n        <router-outlet></router-outlet>\n    </div>\n\n</div>\n","import { inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, Routes } from '@angular/router';\nimport { ChatComponent } from 'app/modules/admin/apps/chat/chat.component';\nimport { ChatService } from 'app/modules/admin/apps/chat/chat.service';\nimport { ChatsComponent } from 'app/modules/admin/apps/chat/chats/chats.component';\nimport { ConversationComponent } from 'app/modules/admin/apps/chat/conversation/conversation.component';\nimport { EmptyConversationComponent } from 'app/modules/admin/apps/chat/empty-conversation/empty-conversation.component';\nimport { catchError, throwError } from 'rxjs';\n\n/**\n * Conversation resolver\n *\n * @param route\n * @param state\n */\nconst conversationResolver = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\n{\n    const chatService = inject(ChatService);\n    const router = inject(Router);\n\n    return chatService.getChatById(route.paramMap.get('id')).pipe(\n        // Error here means the requested chat is not available\n        catchError((error) =>\n        {\n            // Log the error\n            console.error(error);\n\n            // Get the parent url\n            const parentUrl = state.url.split('/').slice(0, -1).join('/');\n\n            // Navigate to there\n            router.navigateByUrl(parentUrl);\n\n            // Throw an error\n            return throwError(error);\n        }),\n    );\n};\n\nexport default [\n    {\n        path     : '',\n        component: ChatComponent,\n        resolve  : {\n            chats   : () => inject(ChatService).getChats(),\n            contacts: () => inject(ChatService).getContacts(),\n            profile : () => inject(ChatService).getProfile(),\n        },\n        children : [\n            {\n                path     : '',\n                component: ChatsComponent,\n                children : [\n                    {\n                        path     : '',\n                        pathMatch: 'full',\n                        component: EmptyConversationComponent,\n                    },\n                    {\n                        path     : ':id',\n                        component: ConversationComponent,\n                        resolve  : {\n                            conversation: conversationResolver,\n                        },\n                    },\n                ],\n            },\n        ],\n    },\n] as Routes;\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Chat, Contact, Profile } from 'app/modules/admin/apps/chat/chat.types';\nimport { BehaviorSubject, filter, map, Observable, of, switchMap, take, tap, throwError } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class ChatService\n{\n    private _chat: BehaviorSubject<Chat> = new BehaviorSubject(null);\n    private _chats: BehaviorSubject<Chat[]> = new BehaviorSubject(null);\n    private _contact: BehaviorSubject<Contact> = new BehaviorSubject(null);\n    private _contacts: BehaviorSubject<Contact[]> = new BehaviorSubject(null);\n    private _profile: BehaviorSubject<Profile> = new BehaviorSubject(null);\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for chat\n     */\n    get chat$(): Observable<Chat>\n    {\n        return this._chat.asObservable();\n    }\n\n    /**\n     * Getter for chats\n     */\n    get chats$(): Observable<Chat[]>\n    {\n        return this._chats.asObservable();\n    }\n\n    /**\n     * Getter for contact\n     */\n    get contact$(): Observable<Contact>\n    {\n        return this._contact.asObservable();\n    }\n\n    /**\n     * Getter for contacts\n     */\n    get contacts$(): Observable<Contact[]>\n    {\n        return this._contacts.asObservable();\n    }\n\n    /**\n     * Getter for profile\n     */\n    get profile$(): Observable<Profile>\n    {\n        return this._profile.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get chats\n     */\n    getChats(): Observable<any>\n    {\n        return this._httpClient.get<Chat[]>('api/apps/chat/chats').pipe(\n            tap((response: Chat[]) =>\n            {\n                this._chats.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Get contact\n     *\n     * @param id\n     */\n    getContact(id: string): Observable<any>\n    {\n        return this._httpClient.get<Contact>('api/apps/chat/contacts', {params: {id}}).pipe(\n            tap((response: Contact) =>\n            {\n                this._contact.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Get contacts\n     */\n    getContacts(): Observable<any>\n    {\n        return this._httpClient.get<Contact[]>('api/apps/chat/contacts').pipe(\n            tap((response: Contact[]) =>\n            {\n                this._contacts.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Get profile\n     */\n    getProfile(): Observable<any>\n    {\n        return this._httpClient.get<Profile>('api/apps/chat/profile').pipe(\n            tap((response: Profile) =>\n            {\n                this._profile.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Get chat\n     *\n     * @param id\n     */\n    getChatById(id: string): Observable<any>\n    {\n        return this._httpClient.get<Chat>('api/apps/chat/chat', {params: {id}}).pipe(\n            map((chat) =>\n            {\n                // Update the chat\n                this._chat.next(chat);\n\n                // Return the chat\n                return chat;\n            }),\n            switchMap((chat) =>\n            {\n                if ( !chat )\n                {\n                    return throwError('Could not found chat with id of ' + id + '!');\n                }\n\n                return of(chat);\n            }),\n        );\n    }\n\n    /**\n     * Update chat\n     *\n     * @param id\n     * @param chat\n     */\n    updateChat(id: string, chat: Chat): Observable<Chat>\n    {\n        return this.chats$.pipe(\n            take(1),\n            switchMap(chats => this._httpClient.patch<Chat>('api/apps/chat/chat', {\n                id,\n                chat,\n            }).pipe(\n                map((updatedChat) =>\n                {\n                    // Find the index of the updated chat\n                    const index = chats.findIndex(item => item.id === id);\n\n                    // Update the chat\n                    chats[index] = updatedChat;\n\n                    // Update the chats\n                    this._chats.next(chats);\n\n                    // Return the updated contact\n                    return updatedChat;\n                }),\n                switchMap(updatedChat => this.chat$.pipe(\n                    take(1),\n                    filter(item => item && item.id === id),\n                    tap(() =>\n                    {\n                        // Update the chat if it's selected\n                        this._chat.next(updatedChat);\n\n                        // Return the updated chat\n                        return updatedChat;\n                    }),\n                )),\n            )),\n        );\n    }\n\n    /**\n     * Reset the selected chat\n     */\n    resetChat(): void\n    {\n        this._chat.next(null);\n    }\n}\n","import { NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { RouterLink, RouterOutlet } from '@angular/router';\nimport { ChatService } from 'app/modules/admin/apps/chat/chat.service';\nimport { Chat, Profile } from 'app/modules/admin/apps/chat/chat.types';\nimport { NewChatComponent } from 'app/modules/admin/apps/chat/new-chat/new-chat.component';\nimport { ProfileComponent } from 'app/modules/admin/apps/chat/profile/profile.component';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'chat-chats',\n    templateUrl    : './chats.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatSidenavModule, NgIf, NewChatComponent, ProfileComponent, MatButtonModule, MatIconModule, MatMenuModule, MatFormFieldModule, MatInputModule, NgFor, NgClass, RouterLink, RouterOutlet],\n})\nexport class ChatsComponent implements OnInit, OnDestroy\n{\n    chats: Chat[];\n    drawerComponent: 'profile' | 'new-chat';\n    drawerOpened: boolean = false;\n    filteredChats: Chat[];\n    profile: Profile;\n    selectedChat: Chat;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _chatService: ChatService,\n        private _changeDetectorRef: ChangeDetectorRef,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Chats\n        this._chatService.chats$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((chats: Chat[]) =>\n            {\n                this.chats = this.filteredChats = chats;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Profile\n        this._chatService.profile$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((profile: Profile) =>\n            {\n                this.profile = profile;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Selected chat\n        this._chatService.chat$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((chat: Chat) =>\n            {\n                this.selectedChat = chat;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n\n        // Reset the chat\n        this._chatService.resetChat();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Filter the chats\n     *\n     * @param query\n     */\n    filterChats(query: string): void\n    {\n        // Reset the filter\n        if ( !query )\n        {\n            this.filteredChats = this.chats;\n            return;\n        }\n\n        this.filteredChats = this.chats.filter(chat => chat.contact.name.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    /**\n     * Open the new chat sidebar\n     */\n    openNewChat(): void\n    {\n        this.drawerComponent = 'new-chat';\n        this.drawerOpened = true;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Open the profile sidebar\n     */\n    openProfile(): void\n    {\n        this.drawerComponent = 'profile';\n        this.drawerOpened = true;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"relative flex flex-auto w-full bg-card dark:bg-transparent\">\n\n    <mat-drawer-container\n        class=\"flex-auto h-full\"\n        [hasBackdrop]=\"false\">\n\n        <!-- Drawer -->\n        <mat-drawer\n            class=\"w-full sm:w-100 lg:border-r lg:shadow-none dark:bg-gray-900\"\n            [autoFocus]=\"false\"\n            [(opened)]=\"drawerOpened\"\n            #drawer>\n\n            <!-- New chat -->\n            <ng-container *ngIf=\"drawerComponent === 'new-chat'\">\n                <chat-new-chat [drawer]=\"drawer\"></chat-new-chat>\n            </ng-container>\n\n            <!-- Profile -->\n            <ng-container *ngIf=\"drawerComponent === 'profile'\">\n                <chat-profile [drawer]=\"drawer\"></chat-profile>\n            </ng-container>\n\n        </mat-drawer>\n\n        <!-- Drawer content -->\n        <mat-drawer-content class=\"flex overflow-hidden\">\n\n            <!-- Chats list -->\n            <ng-container *ngIf=\"chats && chats.length > 0; else noChats\">\n                <div class=\"relative flex flex-auto flex-col w-full min-w-0 lg:min-w-100 lg:max-w-100 bg-card dark:bg-transparent\">\n\n                    <!-- Header -->\n                    <div class=\"flex flex-col flex-0 py-4 px-8 border-b bg-gray-50 dark:bg-transparent\">\n                        <div class=\"flex items-center\">\n                            <div\n                                class=\"flex items-center mr-1 cursor-pointer\"\n                                (click)=\"openProfile()\">\n                                <div class=\"w-10 h-10\">\n                                    <ng-container *ngIf=\"profile.avatar\">\n                                        <img\n                                            class=\"object-cover w-full h-full rounded-full object-cover\"\n                                            [src]=\"profile.avatar\"\n                                            alt=\"Profile avatar\"/>\n                                    </ng-container>\n                                    <ng-container *ngIf=\"!profile.avatar\">\n                                        <div class=\"flex items-center justify-center w-full h-full rounded-full text-lg uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                                            {{profile.name.charAt(0)}}\n                                        </div>\n                                    </ng-container>\n                                </div>\n                                <div class=\"ml-4 font-medium truncate\">{{profile.name}}</div>\n                            </div>\n                            <button\n                                class=\"ml-auto\"\n                                mat-icon-button\n                                (click)=\"openNewChat()\">\n                                <mat-icon [svgIcon]=\"'heroicons_outline:plus-circle'\"></mat-icon>\n                            </button>\n                            <button\n                                class=\"ml-1 -mr-4\"\n                                mat-icon-button\n                                [matMenuTriggerFor]=\"chatsHeaderMenu\">\n                                <mat-icon [svgIcon]=\"'heroicons_outline:ellipsis-vertical'\"></mat-icon>\n                                <mat-menu #chatsHeaderMenu>\n                                    <button mat-menu-item>\n                                        <mat-icon [svgIcon]=\"'heroicons_outline:user-group'\"></mat-icon>\n                                        New group\n                                    </button>\n                                    <button mat-menu-item>\n                                        <mat-icon [svgIcon]=\"'heroicons_outline:chat-bubble-left-right'\"></mat-icon>\n                                        Create a room\n                                    </button>\n                                    <button\n                                        mat-menu-item\n                                        (click)=\"openProfile()\">\n                                        <mat-icon [svgIcon]=\"'heroicons_outline:user-circle'\"></mat-icon>\n                                        Profile\n                                    </button>\n                                    <button mat-menu-item>\n                                        <mat-icon [svgIcon]=\"'heroicons_outline:archive-box'\"></mat-icon>\n                                        Archived\n                                    </button>\n                                    <button mat-menu-item>\n                                        <mat-icon [svgIcon]=\"'heroicons_outline:star'\"></mat-icon>\n                                        Starred\n                                    </button>\n                                    <button mat-menu-item>\n                                        <mat-icon [svgIcon]=\"'heroicons_outline:cog-8-tooth'\"></mat-icon>\n                                        Settings\n                                    </button>\n                                </mat-menu>\n                            </button>\n                        </div>\n                        <!-- Search -->\n                        <div class=\"mt-4\">\n                            <mat-form-field\n                                class=\"fuse-mat-rounded fuse-mat-dense w-full\"\n                                [subscriptSizing]=\"'dynamic'\">\n                                <mat-icon\n                                    matPrefix\n                                    class=\"icon-size-5\"\n                                    [svgIcon]=\"'heroicons_solid:magnifying-glass'\"></mat-icon>\n                                <input\n                                    matInput\n                                    [autocomplete]=\"'off'\"\n                                    [placeholder]=\"'Search or start new chat'\"\n                                    (input)=\"filterChats(searchField.value)\"\n                                    #searchField>\n                            </mat-form-field>\n                        </div>\n                    </div>\n\n                    <!-- Chats -->\n                    <div class=\"flex-auto overflow-y-auto\">\n                        <ng-container *ngIf=\"filteredChats.length > 0; else noChats\">\n                            <ng-container *ngFor=\"let chat of filteredChats; trackBy: trackByFn\">\n                                <a\n                                    class=\"z-20 flex items-center py-5 px-8 cursor-pointer border-b\"\n                                    [ngClass]=\"{'hover:bg-gray-100 dark:hover:bg-hover': !selectedChat || selectedChat.id !== chat.id,\n                                                'bg-primary-50 dark:bg-hover': selectedChat && selectedChat.id === chat.id}\"\n                                    [routerLink]=\"[chat.id]\">\n                                    <div class=\"relative flex flex-0 items-center justify-center w-10 h-10\">\n                                        <ng-container *ngIf=\"chat.unreadCount > 0\">\n                                            <div\n                                                class=\"absolute bottom-0 right-0 flex-0 w-2 h-2 -ml-0.5 rounded-full ring-2 ring-bg-card dark:ring-gray-900 bg-primary dark:bg-primary-500 text-on-primary\"\n                                                [class.ring-primary-50]=\"selectedChat && selectedChat.id === chat.id\"></div>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"chat.contact.avatar\">\n                                            <img\n                                                class=\"w-full h-full rounded-full object-cover\"\n                                                [src]=\"chat.contact.avatar\"\n                                                alt=\"Contact avatar\"/>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!chat.contact.avatar\">\n                                            <div class=\"flex items-center justify-center w-full h-full rounded-full text-lg uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                                                {{chat.contact.name.charAt(0)}}\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                    <div class=\"min-w-0 ml-4\">\n                                        <div class=\"font-medium leading-5 truncate\">{{chat.contact.name}}</div>\n                                        <div\n                                            class=\"leading-5 truncate text-secondary\"\n                                            [class.text-primary]=\"chat.unreadCount > 0\"\n                                            [class.dark:text-primary-500]=\"chat.unreadCount > 0\">\n                                            {{chat.lastMessage}}\n                                        </div>\n                                    </div>\n                                    <div class=\"flex flex-col items-end self-start ml-auto pl-2\">\n                                        <div class=\"text-sm leading-5 text-secondary\">{{chat.lastMessageAt}}</div>\n                                        <ng-container *ngIf=\"chat.muted\">\n                                            <mat-icon\n                                                class=\"icon-size-5 text-hint\"\n                                                [svgIcon]=\"'heroicons_solid:speaker-x-mark'\"></mat-icon>\n                                        </ng-container>\n                                    </div>\n                                </a>\n                            </ng-container>\n                        </ng-container>\n                    </div>\n\n                </div>\n\n            </ng-container>\n\n            <!-- No chats template -->\n            <ng-template #noChats>\n                <div class=\"flex flex-auto flex-col items-center justify-center h-full\">\n                    <mat-icon\n                        class=\"icon-size-24\"\n                        [svgIcon]=\"'heroicons_outline:chat-bubble-oval-left-ellipsis'\"></mat-icon>\n                    <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">No chats</div>\n                </div>\n            </ng-template>\n\n            <!-- Conversation -->\n            <ng-container *ngIf=\"chats && chats.length > 0\">\n                <div\n                    class=\"flex-auto border-l\"\n                    [ngClass]=\"{'z-20 absolute inset-0 lg:static lg:inset-auto flex': selectedChat && selectedChat.id,\n                                'hidden lg:flex': !selectedChat || !selectedChat.id}\">\n                    <router-outlet></router-outlet>\n                </div>\n            </ng-container>\n\n        </mat-drawer-content>\n\n    </mat-drawer-container>\n\n</div>\n","import { NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { Chat } from 'app/modules/admin/apps/chat/chat.types';\n\n@Component({\n    selector       : 'chat-contact-info',\n    templateUrl    : './contact-info.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, MatIconModule, NgIf, NgFor],\n})\nexport class ContactInfoComponent\n{\n    @Input() chat: Chat;\n    @Input() drawer: MatDrawer;\n\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<div class=\"flex flex-col flex-auto h-full bg-card dark:bg-default\">\n\n    <!-- Header -->\n    <div class=\"flex flex-0 items-center h-18 px-4 border-b bg-gray-50 dark:bg-transparent\">\n        <button\n            mat-icon-button\n            (click)=\"drawer.close()\">\n            <mat-icon [svgIcon]=\"'heroicons_outline:x-mark'\"></mat-icon>\n        </button>\n        <div class=\"ml-2 text-lg font-medium\">Contact info</div>\n    </div>\n\n    <div class=\"overflow-y-auto\">\n        <!-- Contact avatar & info -->\n        <div class=\"flex flex-col items-center mt-8\">\n            <div class=\"w-40 h-40 rounded-full\">\n                <ng-container *ngIf=\"chat.contact.avatar\">\n                    <img\n                        class=\"w-full h-full rounded-full object-cover\"\n                        [src]=\"chat.contact.avatar\"\n                        [alt]=\"'Contact avatar'\">\n                </ng-container>\n                <ng-container *ngIf=\"!chat.contact.avatar\">\n                    <div class=\"flex items-center justify-center w-full h-full rounded-full text-8xl font-semibold uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                        {{chat.contact.name.charAt(0)}}\n                    </div>\n                </ng-container>\n            </div>\n            <div class=\"mt-4 text-lg font-medium\">{{chat.contact.name}}</div>\n            <div class=\"mt-0.5 text-md text-secondary\">{{chat.contact.about}}</div>\n        </div>\n\n        <div class=\"py-10 px-7\">\n            <!-- Media -->\n            <div class=\"text-lg font-medium\">Media</div>\n            <div class=\"grid grid-cols-4 gap-1 mt-4\">\n                <ng-container *ngFor=\"let media of chat.contact.attachments.media\">\n                    <img\n                        class=\"h-20 rounded object-cover\"\n                        [src]=\"media\"/>\n                </ng-container>\n            </div>\n            <!-- Details -->\n            <div class=\"mt-10 space-y-4\">\n                <div class=\"text-lg font-medium mb-3\">Details</div>\n                <ng-container *ngIf=\"chat.contact.details.emails.length\">\n                    <div>\n                        <div class=\"font-medium text-secondary\">Email</div>\n                        <div class=\"\">{{chat.contact.details.emails[0].email}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"chat.contact.details.phoneNumbers.length\">\n                    <div>\n                        <div class=\"font-medium text-secondary\">Phone number</div>\n                        <div class=\"\">{{chat.contact.details.phoneNumbers[0].phoneNumber}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"chat.contact.details.title\">\n                    <div>\n                        <div class=\"font-medium text-secondary\">Title</div>\n                        <div class=\"\">{{chat.contact.details.title}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"chat.contact.details.company\">\n                    <div>\n                        <div class=\"font-medium text-secondary\">Company</div>\n                        <div class=\"\">{{chat.contact.details.company}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"chat.contact.details.birthday\">\n                    <div>\n                        <div class=\"font-medium text-secondary\">Birthday</div>\n                        <div class=\"\">{{chat.contact.details.birthday}}</div>\n                    </div>\n                </ng-container>\n                <ng-container *ngIf=\"chat.contact.details.address\">\n                    <div>\n                        <div class=\"font-medium text-secondary\">Address</div>\n                        <div class=\"\">{{chat.contact.details.address}}</div>\n                    </div>\n                </ng-container>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { TextFieldModule } from '@angular/cdk/text-field';\nimport { DatePipe, NgClass, NgFor, NgIf, NgTemplateOutlet } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, HostListener, NgZone, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { RouterLink } from '@angular/router';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { ChatService } from 'app/modules/admin/apps/chat/chat.service';\nimport { Chat } from 'app/modules/admin/apps/chat/chat.types';\nimport { ContactInfoComponent } from 'app/modules/admin/apps/chat/contact-info/contact-info.component';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'chat-conversation',\n    templateUrl    : './conversation.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [NgIf, MatSidenavModule, ContactInfoComponent, MatButtonModule, RouterLink, MatIconModule, MatMenuModule, NgFor, NgClass, NgTemplateOutlet, MatFormFieldModule, MatInputModule, TextFieldModule, DatePipe],\n})\nexport class ConversationComponent implements OnInit, OnDestroy\n{\n    @ViewChild('messageInput') messageInput: ElementRef;\n    chat: Chat;\n    drawerMode: 'over' | 'side' = 'side';\n    drawerOpened: boolean = false;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _chatService: ChatService,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n        private _ngZone: NgZone,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Decorated methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Resize on 'input' and 'ngModelChange' events\n     *\n     * @private\n     */\n    @HostListener('input')\n    @HostListener('ngModelChange')\n    private _resizeMessageInput(): void\n    {\n        // This doesn't need to trigger Angular's change detection by itself\n        this._ngZone.runOutsideAngular(() =>\n        {\n            setTimeout(() =>\n            {\n                // Set the height to 'auto' so we can correctly read the scrollHeight\n                this.messageInput.nativeElement.style.height = 'auto';\n\n                // Detect the changes so the height is applied\n                this._changeDetectorRef.detectChanges();\n\n                // Get the scrollHeight and subtract the vertical padding\n                this.messageInput.nativeElement.style.height = `${this.messageInput.nativeElement.scrollHeight}px`;\n\n                // Detect the changes one more time to apply the final height\n                this._changeDetectorRef.detectChanges();\n            });\n        });\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Chat\n        this._chatService.chat$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((chat: Chat) =>\n            {\n                this.chat = chat;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Subscribe to media changes\n        this._fuseMediaWatcherService.onMediaChange$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(({matchingAliases}) =>\n            {\n                // Set the drawerMode if the given breakpoint is active\n                if ( matchingAliases.includes('lg') )\n                {\n                    this.drawerMode = 'side';\n                }\n                else\n                {\n                    this.drawerMode = 'over';\n                }\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Open the contact info\n     */\n    openContactInfo(): void\n    {\n        // Open the drawer\n        this.drawerOpened = true;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Reset the chat\n     */\n    resetChat(): void\n    {\n        this._chatService.resetChat();\n\n        // Close the contact info in case it's opened\n        this.drawerOpened = false;\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Toggle mute notifications\n     */\n    toggleMuteNotifications(): void\n    {\n        // Toggle the muted\n        this.chat.muted = !this.chat.muted;\n\n        // Update the chat on the server\n        this._chatService.updateChat(this.chat.id, this.chat).subscribe();\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"flex flex-col flex-auto overflow-y-auto lg:overflow-hidden bg-card dark:bg-default\">\n\n    <ng-container *ngIf=\"chat; else selectChatOrStartNew\">\n\n        <mat-drawer-container\n            class=\"flex-auto h-full\"\n            [hasBackdrop]=\"false\">\n\n            <!-- Drawer -->\n            <mat-drawer\n                class=\"w-full sm:w-100 lg:border-l lg:shadow-none dark:bg-gray-900\"\n                [autoFocus]=\"false\"\n                [mode]=\"drawerMode\"\n                [position]=\"'end'\"\n                [(opened)]=\"drawerOpened\"\n                #drawer>\n\n                <!-- Contact info -->\n                <chat-contact-info\n                    [drawer]=\"drawer\"\n                    [chat]=\"chat\"></chat-contact-info>\n            </mat-drawer>\n\n            <!-- Drawer content -->\n            <mat-drawer-content class=\"flex flex-col overflow-hidden\">\n\n                <!-- Header -->\n                <div class=\"flex flex-0 items-center h-18 px-4 md:px-6 border-b bg-gray-50 dark:bg-transparent\">\n\n                    <!-- Back button -->\n                    <a\n                        class=\"lg:hidden md:-ml-2\"\n                        mat-icon-button\n                        [routerLink]=\"['./']\"\n                        (click)=\"resetChat()\">\n                        <mat-icon [svgIcon]=\"'heroicons_outline:arrow-long-left'\"></mat-icon>\n                    </a>\n\n                    <!-- Contact info -->\n                    <div\n                        class=\"flex items-center ml-2 lg:ml-0 mr-2 cursor-pointer\"\n                        (click)=\"openContactInfo()\">\n                        <div class=\"relative flex flex-0 items-center justify-center w-10 h-10\">\n                            <ng-container *ngIf=\"chat.contact.avatar\">\n                                <img\n                                    class=\"w-full h-full rounded-full object-cover\"\n                                    [src]=\"chat.contact.avatar\"\n                                    alt=\"Contact avatar\"/>\n                            </ng-container>\n                            <ng-container *ngIf=\"!chat.contact.avatar\">\n                                <div class=\"flex items-center justify-center w-full h-full rounded-full text-lg uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                                    {{chat.contact.name.charAt(0)}}\n                                </div>\n                            </ng-container>\n                        </div>\n                        <div class=\"ml-4 text-lg font-medium leading-5 truncate\">{{chat.contact.name}}</div>\n                    </div>\n\n                    <button\n                        class=\"ml-auto\"\n                        mat-icon-button\n                        [matMenuTriggerFor]=\"conversationHeaderMenu\">\n                        <mat-icon [svgIcon]=\"'heroicons_outline:ellipsis-vertical'\"></mat-icon>\n                        <mat-menu #conversationHeaderMenu>\n                            <button\n                                mat-menu-item\n                                (click)=\"openContactInfo()\">\n                                <mat-icon [svgIcon]=\"'heroicons_outline:user-circle'\"></mat-icon>\n                                Contact info\n                            </button>\n                            <button mat-menu-item>\n                                <mat-icon [svgIcon]=\"'heroicons_outline:check-circle'\"></mat-icon>\n                                Select messages\n                            </button>\n                            <button\n                                mat-menu-item\n                                (click)=\"toggleMuteNotifications()\">\n                                <ng-container *ngIf=\"!chat.muted\">\n                                    <mat-icon [svgIcon]=\"'heroicons_outline:speaker-x-mark'\"></mat-icon>\n                                    Mute notifications\n                                </ng-container>\n                                <ng-container *ngIf=\"chat.muted\">\n                                    <mat-icon [svgIcon]=\"'heroicons_outline:volume-up'\"></mat-icon>\n                                    Unmute notifications\n                                </ng-container>\n                            </button>\n                            <button mat-menu-item>\n                                <mat-icon [svgIcon]=\"'heroicons_outline:backspace'\"></mat-icon>\n                                Clear messages\n                            </button>\n                            <button mat-menu-item>\n                                <mat-icon [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                                Delete chat\n                            </button>\n                        </mat-menu>\n                    </button>\n\n                </div>\n\n                <!-- Conversation -->\n                <div class=\"flex overflow-y-auto flex-col-reverse\">\n                    <div class=\"flex flex-col flex-auto shrink p-6 bg-card dark:bg-transparent\">\n                        <ng-container *ngFor=\"let message of chat.messages; let i = index; let first = first; let last = last; trackBy: trackByFn\">\n                            <!-- Start of the day -->\n                            <ng-container *ngIf=\"first || (chat.messages[i - 1].createdAt | date:'d') !== (message.createdAt | date:'d')\">\n                                <div class=\"flex items-center justify-center my-3 -mx-6\">\n                                    <div class=\"flex-auto border-b\"></div>\n                                    <div class=\"flex-0 mx-4 text-sm font-medium leading-5 text-secondary\">\n                                        {{message.createdAt | date: 'longDate'}}\n                                    </div>\n                                    <div class=\"flex-auto border-b\"></div>\n                                </div>\n                            </ng-container>\n                            <div\n                                class=\"flex flex-col\"\n                                [ngClass]=\"{'items-end': message.isMine,\n                                            'items-start': !message.isMine,\n                                            'mt-0.5': i > 0 && chat.messages[i - 1].isMine === message.isMine,\n                                            'mt-3': i > 0 && chat.messages[i - 1].isMine !== message.isMine}\">\n                                <!-- Bubble -->\n                                <div\n                                    class=\"relative max-w-3/4 px-3 py-2 rounded-lg\"\n                                    [ngClass]=\"{'bg-blue-500 text-blue-50': message.isMine,\n                                                'bg-gray-500 text-gray-50': !message.isMine}\">\n                                    <!-- Speech bubble tail -->\n                                    <ng-container *ngIf=\"last || chat.messages[i + 1].isMine !== message.isMine\">\n                                        <div\n                                            class=\"absolute bottom-0 w-3\"\n                                            [ngClass]=\"{'text-blue-500 -right-1 -mr-px mb-px': message.isMine,\n                                                        'text-gray-500 -left-1 -ml-px mb-px -scale-x-1': !message.isMine}\">\n                                            <ng-container *ngTemplateOutlet=\"speechBubbleExtension\"></ng-container>\n                                        </div>\n                                    </ng-container>\n                                    <!-- Message -->\n                                    <div\n                                        class=\"min-w-4 leading-5\"\n                                        [innerHTML]=\"message.value\">\n                                    </div>\n                                </div>\n                                <!-- Time -->\n                                <ng-container\n                                    *ngIf=\"first\n                                       || last\n                                       || chat.messages[i + 1].isMine !== message.isMine\n                                       || chat.messages[i + 1].createdAt !== message.createdAt\">\n                                    <div\n                                        class=\"my-0.5 text-sm font-medium text-secondary\"\n                                        [ngClass]=\"{'mr-3': message.isMine,\n                                                    'ml-3': !message.isMine}\">\n                                        {{message.createdAt | date:'HH:mm'}}\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </ng-container>\n                    </div>\n                </div>\n\n                <!-- Message field -->\n                <div class=\"flex items-end p-4 border-t bg-gray-50 dark:bg-transparent\">\n                    <div class=\"flex items-center h-11 my-px\">\n                        <button mat-icon-button>\n                            <mat-icon [svgIcon]=\"'heroicons_outline:face-smile'\"></mat-icon>\n                        </button>\n                        <button\n                            class=\"ml-0.5\"\n                            mat-icon-button>\n                            <mat-icon [svgIcon]=\"'heroicons_outline:paper-clip'\"></mat-icon>\n                        </button>\n                    </div>\n                    <mat-form-field\n                        class=\"fuse-mat-dense fuse-mat-rounded fuse-mat-bold w-full ml-4\"\n                        subscriptSizing=\"dynamic\">\n                        <textarea\n                            matInput\n                            cdkTextareaAutosize\n                            #messageInput></textarea>\n                    </mat-form-field>\n                    <div class=\"flex items-center h-11 my-px ml-4\">\n                        <button\n                            mat-icon-button>\n                            <mat-icon [svgIcon]=\"'heroicons_outline:paper-airplane'\"></mat-icon>\n                        </button>\n                    </div>\n                </div>\n\n            </mat-drawer-content>\n\n        </mat-drawer-container>\n\n    </ng-container>\n\n    <!-- Select chat or start new template -->\n    <ng-template #selectChatOrStartNew>\n        <div class=\"flex flex-col flex-auto items-center justify-center bg-gray-100 dark:bg-transparent\">\n            <mat-icon\n                class=\"icon-size-24\"\n                [svgIcon]=\"'heroicons_outline:chat-bubble-oval-left-ellipsis'\"></mat-icon>\n            <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">Select a conversation or start a new chat</div>\n        </div>\n    </ng-template>\n\n    <!-- Speech bubble tail SVG -->\n    <!-- @formatter:off -->\n    <ng-template #speechBubbleExtension>\n        <svg width=\"100%\" height=\"100%\" viewBox=\"0 0 66 66\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n                <path d=\"M1.01522827,0.516204834 C-8.83532715,54.3062744 61.7609863,70.5215302 64.8009949,64.3061218 C68.8074951,54.8859711 30.1663208,52.9997559 37.5036011,0.516204834 L1.01522827,0.516204834 Z\" fill=\"currentColor\" fill-rule=\"nonzero\"></path>\n            </g>\n        </svg>\n    </ng-template>\n    <!-- @formatter:on -->\n\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\n@Component({\n    selector       : 'chat-empty-conversation',\n    templateUrl    : './empty-conversation.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatIconModule],\n})\nexport class EmptyConversationComponent\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<div class=\"flex flex-col flex-auto overflow-y-auto lg:overflow-hidden bg-card dark:bg-default\">\n\n    <!-- Select chat or start new -->\n    <div class=\"flex flex-col flex-auto items-center justify-center bg-gray-100 dark:bg-transparent\">\n        <mat-icon\n            class=\"icon-size-24\"\n            [svgIcon]=\"'heroicons_outline:chat-bubble-oval-left-ellipsis'\"></mat-icon>\n        <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">Select a conversation or start a new chat</div>\n    </div>\n\n</div>\n","import { NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { ChatService } from 'app/modules/admin/apps/chat/chat.service';\nimport { Contact } from 'app/modules/admin/apps/chat/chat.types';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'chat-new-chat',\n    templateUrl    : './new-chat.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, MatIconModule, NgIf, NgFor],\n})\nexport class NewChatComponent implements OnInit, OnDestroy\n{\n    @Input() drawer: MatDrawer;\n    contacts: Contact[] = [];\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(private _chatService: ChatService)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Contacts\n        this._chatService.contacts$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((contacts: Contact[]) =>\n            {\n                this.contacts = contacts;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"flex flex-col flex-auto h-full overflow-hidden bg-card dark:bg-default\">\n\n    <!-- Header -->\n    <div class=\"flex flex-0 items-center h-18 -mb-px px-6 bg-gray-50 dark:bg-transparent\">\n        <button\n            mat-icon-button\n            (click)=\"drawer.close()\">\n            <mat-icon [svgIcon]=\"'heroicons_outline:arrow-long-left'\"></mat-icon>\n        </button>\n        <div class=\"ml-2 text-2xl font-semibold\">New chat</div>\n    </div>\n\n    <div class=\"relative overflow-y-auto\">\n        <ng-container *ngIf=\"contacts.length; else noContacts\">\n            <ng-container *ngFor=\"let contact of contacts; let i = index; trackBy: trackByFn\">\n                <!-- Group -->\n                <ng-container *ngIf=\"i === 0 || contact.name.charAt(0) !== contacts[i - 1].name.charAt(0)\">\n                    <div class=\"z-10 sticky top-0 -mt-px px-6 py-1 md:px-8 border-t border-b font-medium uppercase text-secondary bg-gray-100 dark:bg-gray-900\">\n                        {{contact.name.charAt(0)}}\n                    </div>\n                </ng-container>\n                <!-- Contact -->\n                <div class=\"z-20 flex items-center px-6 py-4 md:px-8 cursor-pointer border-b hover:bg-gray-100 dark:hover:bg-hover\">\n                    <div class=\"flex flex-0 items-center justify-center w-10 h-10 rounded-full overflow-hidden\">\n                        <ng-container *ngIf=\"contact.avatar\">\n                            <img\n                                class=\"object-cover w-full h-full\"\n                                [src]=\"contact.avatar\"\n                                alt=\"Contact avatar\"/>\n                        </ng-container>\n                        <ng-container *ngIf=\"!contact.avatar\">\n                            <div class=\"flex items-center justify-center w-full h-full rounded-full text-lg uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                                {{contact.name.charAt(0)}}\n                            </div>\n                        </ng-container>\n                    </div>\n                    <div class=\"min-w-0 ml-4\">\n                        <div class=\"font-medium leading-5 truncate\">{{contact.name}}</div>\n                        <div class=\"leading-5 truncate text-secondary\">{{contact.about}}</div>\n                    </div>\n                </div>\n            </ng-container>\n        </ng-container>\n    </div>\n\n    <!-- No contacts -->\n    <ng-template #noContacts>\n        <div class=\"p-8 sm:p-16 border-t text-4xl font-semibold tracking-tight text-center\">There are no contacts!</div>\n    </ng-template>\n\n</div>\n","import { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, OnDestroy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDrawer } from '@angular/material/sidenav';\nimport { ChatService } from 'app/modules/admin/apps/chat/chat.service';\nimport { Profile } from 'app/modules/admin/apps/chat/chat.types';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'chat-profile',\n    templateUrl    : './profile.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatButtonModule, MatIconModule, NgIf, MatFormFieldModule, MatInputModule, FormsModule],\n})\nexport class ProfileComponent implements OnInit, OnDestroy\n{\n    @Input() drawer: MatDrawer;\n    profile: Profile;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(private _chatService: ChatService)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Profile\n        this._chatService.profile$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((profile: Profile) =>\n            {\n                this.profile = profile;\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n}\n","<div class=\"flex flex-col flex-auto overflow-y-auto bg-card dark:bg-default\">\n\n    <!-- Header -->\n    <div class=\"flex flex-0 items-center h-18 px-6 border-b bg-gray-50 dark:bg-transparent\">\n        <button\n            mat-icon-button\n            (click)=\"drawer.close()\">\n            <mat-icon [svgIcon]=\"'heroicons_outline:arrow-long-left'\"></mat-icon>\n        </button>\n        <div class=\"ml-2 text-2xl font-semibold\">Profile</div>\n    </div>\n\n    <div class=\"px-6\">\n        <!-- Profile photo -->\n        <div class=\"group relative flex flex-0 mt-8 mx-auto w-40 h-40 rounded-full\">\n            <div class=\"hidden group-hover:flex absolute inset-0 flex-col items-center justify-center backdrop-filter backdrop-blur bg-opacity-80 rounded-full cursor-pointer bg-gray-800\">\n                <mat-icon\n                    class=\"text-white\"\n                    [svgIcon]=\"'heroicons_outline:camera'\"></mat-icon>\n                <div class=\"mt-2 mx-6 font-medium text-center text-white\">Change Profile Photo</div>\n            </div>\n            <ng-container *ngIf=\"profile.avatar\">\n                <img\n                    class=\"w-full h-full rounded-full object-cover\"\n                    [src]=\"profile.avatar\"\n                    [alt]=\"'Profile avatar'\">\n            </ng-container>\n            <ng-container *ngIf=\"!profile.avatar\">\n                <div class=\"flex items-center justify-center w-full h-full rounded-full text-8xl font-semibold uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                    {{profile.name.charAt(0)}}\n                </div>\n            </ng-container>\n        </div>\n\n        <!-- Profile info -->\n        <div class=\"flex flex-col mt-8 mx-2\">\n            <mat-form-field>\n                <mat-label>Name</mat-label>\n                <mat-icon\n                    class=\"icon-size-5\"\n                    matPrefix\n                    [svgIcon]=\"'heroicons_solid:user-circle'\"></mat-icon>\n                <input\n                    matInput\n                    [ngModel]=\"profile.name\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Email</mat-label>\n                <mat-icon\n                    class=\"icon-size-5\"\n                    matPrefix\n                    [svgIcon]=\"'heroicons_solid:envelope'\"></mat-icon>\n                <input\n                    matInput\n                    [ngModel]=\"profile.email\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>About</mat-label>\n                <mat-icon\n                    class=\"icon-size-5\"\n                    matPrefix\n                    [svgIcon]=\"'heroicons_solid:identification'\"></mat-icon>\n                <input\n                    matInput\n                    [ngModel]=\"profile.about\">\n            </mat-form-field>\n            <div class=\"flex items-center justify-end mt-4\">\n                <button\n                    (click)=\"drawer.close()\"\n                    mat-button>Cancel\n                </button>\n                <button\n                    class=\"ml-2\"\n                    mat-flat-button\n                    [color]=\"'primary'\">Save\n                </button>\n            </div>\n        </div>\n    </div>\n</div>\n"],"names":["RouterOutlet","ChatComponent","constructor","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","consts","template","ChatComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","encapsulation","changeDetection","inject","Router","ChatService","ChatsComponent","ConversationComponent","EmptyConversationComponent","catchError","throwError","conversationResolver","route","state","chatService","router","getChatById","paramMap","get","pipe","error","console","parentUrl","url","split","slice","join","navigateByUrl","path","component","resolve","chats","getChats","contacts","getContacts","profile","getProfile","children","pathMatch","conversation","BehaviorSubject","filter","map","of","switchMap","take","tap","_httpClient","_chat","_chats","_contact","_contacts","_profile","chat$","asObservable","chats$","contact$","contacts$","profile$","response","next","getContact","id","params","chat","updateChat","patch","updatedChat","index","findIndex","item","resetChat","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","NgClass","NgFor","NgIf","MatButtonModule","MatFormFieldModule","MatIconModule","MatInputModule","MatMenuModule","MatSidenavModule","RouterLink","NewChatComponent","ProfileComponent","Subject","takeUntil","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","_r0","ctx_r7","avatar","ɵɵsanitizeUrl","ɵɵtext","ɵɵtextInterpolate1","ctx_r8","name","charAt","ɵɵclassProp","ctx_r14","selectedChat","chat_r13","contact","ɵɵtemplate","ChatsComponent_ng_container_7_ng_container_40_ng_container_1_ng_container_3_Template","ChatsComponent_ng_container_7_ng_container_40_ng_container_1_ng_container_4_Template","ChatsComponent_ng_container_7_ng_container_40_ng_container_1_ng_container_5_Template","ChatsComponent_ng_container_7_ng_container_40_ng_container_1_ng_container_14_Template","ɵɵpureFunction2","_c0","ctx_r12","ɵɵpureFunction1","_c1","unreadCount","ɵɵtextInterpolate","lastMessage","lastMessageAt","muted","ChatsComponent_ng_container_7_ng_container_40_ng_container_1_Template","ctx_r11","filteredChats","trackByFn","ɵɵlistener","ChatsComponent_ng_container_7_Template_div_click_4_listener","ɵɵrestoreView","_r22","ctx_r21","ɵɵnextContext","ɵɵresetView","openProfile","ChatsComponent_ng_container_7_ng_container_6_Template","ChatsComponent_ng_container_7_ng_container_7_Template","ChatsComponent_ng_container_7_Template_button_click_10_listener","ctx_r23","openNewChat","ChatsComponent_ng_container_7_Template_button_click_22_listener","ctx_r24","ChatsComponent_ng_container_7_Template_input_input_37_listener","_r10","ɵɵreference","ctx_r25","filterChats","value","ChatsComponent_ng_container_7_ng_container_40_Template","ctx_r3","_r9","length","_r5","_c2","ctx_r6","_chatService","_changeDetectorRef","drawerOpened","_unsubscribeAll","ngOnInit","subscribe","markForCheck","ngOnDestroy","complete","query","toLowerCase","includes","drawerComponent","ɵɵdirectiveInject","ChangeDetectorRef","ChatsComponent_Template","ChatsComponent_Template_mat_drawer_openedChange_2_listener","$event","ChatsComponent_ng_container_4_Template","ChatsComponent_ng_container_5_Template","ChatsComponent_ng_container_7_Template","ChatsComponent_ng_template_8_Template","ɵɵtemplateRefExtractor","ChatsComponent_ng_container_10_Template","i2","MatDrawer","MatDrawerContainer","MatDrawerContent","i3","MatIconButton","i4","MatIcon","i5","MatMenu","MatMenuItem","MatMenuTrigger","i6","MatFormField","MatPrefix","i7","MatInput","ctx_r0","ctx_r1","media_r9","details","emails","email","ctx_r4","phoneNumbers","phoneNumber","ctx_r5","title","company","birthday","address","ContactInfoComponent","inputs","drawer","ContactInfoComponent_Template","ContactInfoComponent_Template_button_click_2_listener","close","ContactInfoComponent_ng_container_9_Template","ContactInfoComponent_ng_container_10_Template","ContactInfoComponent_ng_container_19_Template","ContactInfoComponent_ng_container_23_Template","ContactInfoComponent_ng_container_24_Template","ContactInfoComponent_ng_container_25_Template","ContactInfoComponent_ng_container_26_Template","ContactInfoComponent_ng_container_27_Template","ContactInfoComponent_ng_container_28_Template","about","attachments","media","TextFieldModule","DatePipe","NgTemplateOutlet","ɵɵpipeBind2","message_r13","createdAt","ɵɵelementContainer","ConversationComponent_ng_container_1_ng_container_36_ng_container_6_ng_container_2_Template","isMine","_r4","ConversationComponent_ng_container_1_ng_container_36_ng_container_1_Template","ConversationComponent_ng_container_1_ng_container_36_ng_container_6_Template","ConversationComponent_ng_container_1_ng_container_36_ng_container_8_Template","first_r15","messages","i_r14","ɵɵpureFunction4","_c3","_c4","last_r16","ɵɵsanitizeHtml","ConversationComponent_ng_container_1_Template_mat_drawer_openedChange_2_listener","_r25","ConversationComponent_ng_container_1_Template_a_click_7_listener","ctx_r26","ConversationComponent_ng_container_1_Template_div_click_9_listener","ctx_r27","openContactInfo","ConversationComponent_ng_container_1_ng_container_11_Template","ConversationComponent_ng_container_1_ng_container_12_Template","ConversationComponent_ng_container_1_Template_button_click_19_listener","ctx_r28","ConversationComponent_ng_container_1_Template_button_click_25_listener","ctx_r29","toggleMuteNotifications","ConversationComponent_ng_container_1_ng_container_26_Template","ConversationComponent_ng_container_1_ng_container_27_Template","ConversationComponent_ng_container_1_ng_container_36_Template","drawerMode","ɵɵpureFunction0","_c5","_r8","ɵɵnamespaceSVG","_fuseMediaWatcherService","_ngZone","_resizeMessageInput","runOutsideAngular","setTimeout","messageInput","nativeElement","style","height","detectChanges","scrollHeight","onMediaChange$","matchingAliases","FuseMediaWatcherService","NgZone","viewQuery","ConversationComponent_Query","ConversationComponent_ngModelChange_HostBindingHandler","ConversationComponent_ng_container_1_Template","ConversationComponent_ng_template_2_Template","ConversationComponent_ng_template_4_Template","_r2","MatIconAnchor","i8","i9","CdkTextareaAutosize","EmptyConversationComponent_Template","contact_r4","NewChatComponent_ng_container_7_ng_container_1_ng_container_1_Template","NewChatComponent_ng_container_7_ng_container_1_ng_container_4_Template","NewChatComponent_ng_container_7_ng_container_1_ng_container_5_Template","i_r5","NewChatComponent_ng_container_7_ng_container_1_Template","NewChatComponent_Template","NewChatComponent_Template_button_click_2_listener","NewChatComponent_ng_container_7_Template","NewChatComponent_ng_template_8_Template","FormsModule","ProfileComponent_Template","ProfileComponent_Template_button_click_2_listener","ProfileComponent_ng_container_12_Template","ProfileComponent_ng_container_13_Template","ProfileComponent_Template_button_click_31_listener","MatButton","MatLabel","DefaultValueAccessor","NgControlStatus","NgModel"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}