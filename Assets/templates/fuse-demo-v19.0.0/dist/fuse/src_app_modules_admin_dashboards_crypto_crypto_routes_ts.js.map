{"version":3,"file":"src_app_modules_admin_dashboards_crypto_crypto_routes_ts.js","mappings":"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","sources":["./src/app/modules/admin/dashboards/crypto/crypto.component.ts","./src/app/modules/admin/dashboards/crypto/crypto.component.html","./src/app/modules/admin/dashboards/crypto/crypto.routes.ts","./src/app/modules/admin/dashboards/crypto/crypto.service.ts"],"sourcesContent":["import { CurrencyPipe, DecimalPipe, NgClass, NgFor, NgIf, UpperCasePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { CryptoService } from 'app/modules/admin/dashboards/crypto/crypto.service';\nimport { DateTime } from 'luxon';\nimport { ApexOptions, ChartComponent, NgApexchartsModule } from 'ng-apexcharts';\nimport { Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'crypto',\n    templateUrl    : './crypto.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatSidenavModule, NgFor, MatIconModule, NgClass, NgApexchartsModule, MatFormFieldModule, MatSelectModule, MatOptionModule, NgIf, FormsModule, MatInputModule, MatButtonModule, UpperCasePipe, DecimalPipe, CurrencyPipe],\n})\nexport class CryptoComponent implements OnInit, OnDestroy\n{\n    @ViewChild('btcChartComponent') btcChartComponent: ChartComponent;\n    appConfig: any;\n    btcOptions: ApexOptions = {};\n    data: any;\n    drawerMode: 'over' | 'side' = 'side';\n    drawerOpened: boolean = true;\n    watchlistChartOptions: ApexOptions = {};\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _cryptoService: CryptoService,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to media changes\n        this._fuseMediaWatcherService.onMediaChange$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(({matchingAliases}) =>\n            {\n                // Set the drawerMode and drawerOpened if 'lg' breakpoint is active\n                if ( matchingAliases.includes('lg') )\n                {\n                    this.drawerMode = 'side';\n                    this.drawerOpened = true;\n                }\n                else\n                {\n                    this.drawerMode = 'over';\n                    this.drawerOpened = false;\n                }\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the data\n        this._cryptoService.data$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((data) =>\n            {\n                // Store the data\n                this.data = data;\n\n                // Prepare the chart data\n                this._prepareChartData();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Prepare the chart data from the data\n     *\n     * @private\n     */\n    private _prepareChartData(): void\n    {\n        // BTC\n        this.btcOptions = {\n            chart     : {\n                animations: {\n                    enabled: false,\n                },\n                fontFamily: 'inherit',\n                foreColor : 'inherit',\n                width     : '100%',\n                height    : '100%',\n                type      : 'line',\n                toolbar   : {\n                    show: false,\n                },\n                zoom      : {\n                    enabled: false,\n                },\n            },\n            colors    : ['#5A67D8'],\n            dataLabels: {\n                enabled: false,\n            },\n            grid      : {\n                borderColor    : 'var(--fuse-border)',\n                position       : 'back',\n                show           : true,\n                strokeDashArray: 6,\n                xaxis          : {\n                    lines: {\n                        show: true,\n                    },\n                },\n                yaxis          : {\n                    lines: {\n                        show: true,\n                    },\n                },\n            },\n            legend    : {\n                show: false,\n            },\n            series    : this.data.btc.price.series,\n            stroke    : {\n                width: 2,\n                curve: 'straight',\n            },\n            tooltip   : {\n                shared: true,\n                theme : 'dark',\n                y     : {\n                    formatter: (value: number): string => '$' + value.toFixed(2),\n                },\n            },\n            xaxis     : {\n                type      : 'numeric',\n                crosshairs: {\n                    show    : true,\n                    position: 'back',\n                    fill    : {\n                        type : 'color',\n                        color: 'var(--fuse-border)',\n                    },\n                    width   : 3,\n                    stroke  : {\n                        dashArray: 0,\n                        width    : 0,\n                    },\n                    opacity : 0.9,\n                },\n                tickAmount: 8,\n                axisTicks : {\n                    show : true,\n                    color: 'var(--fuse-border)',\n                },\n                axisBorder: {\n                    show: false,\n                },\n                tooltip   : {\n                    enabled: false,\n                },\n                labels    : {\n                    show                 : true,\n                    trim                 : false,\n                    rotate               : 0,\n                    minHeight            : 40,\n                    hideOverlappingLabels: true,\n                    formatter            : (value): string => DateTime.now().minus({minutes: Math.abs(parseInt(value, 10))}).toFormat('HH:mm'),\n                    style                : {\n                        colors: 'currentColor',\n                    },\n                },\n            },\n            yaxis     : {\n                axisTicks     : {\n                    show : true,\n                    color: 'var(--fuse-border)',\n                },\n                axisBorder    : {\n                    show: false,\n                },\n                forceNiceScale: true,\n                labels        : {\n                    minWidth : 40,\n                    formatter: (value: number): string => '$' + value.toFixed(0),\n                    style    : {\n                        colors: 'currentColor',\n                    },\n                },\n            },\n        };\n\n        // Watchlist options\n        this.watchlistChartOptions = {\n            chart  : {\n                animations: {\n                    enabled: false,\n                },\n                width     : '100%',\n                height    : '100%',\n                type      : 'line',\n                sparkline : {\n                    enabled: true,\n                },\n            },\n            colors : ['#A0AEC0'],\n            stroke : {\n                width: 2,\n                curve: 'smooth',\n            },\n            tooltip: {\n                enabled: false,\n            },\n            xaxis  : {\n                type: 'category',\n            },\n        };\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\n\n    <mat-drawer-container class=\"flex-auto h-full\">\n\n        <!-- Drawer -->\n        <mat-drawer\n            class=\"w-80\"\n            [autoFocus]=\"false\"\n            [mode]=\"drawerMode\"\n            [opened]=\"drawerOpened\"\n            #matDrawer>\n\n            <div class=\"flex flex-col flex-auto h-full dark:bg-default\">\n\n                <!-- Watchlist -->\n                <div class=\"flex flex-col flex-0\">\n                    <div\n                        class=\"flex flex-0 items-center p-5 border-b\"\n                        *ngFor=\"let item of data.watchlist\">\n                        <div class=\"flex flex-col flex-auto pr-6\">\n                            <div class=\"flex items-baseline\">\n                                <div class=\"mr-1 font-medium text-md text-secondary\">{{item.title}}</div>\n                                <div class=\"font-medium text-sm text-hint uppercase tracking-wider\">({{item.iso}})</div>\n                            </div>\n                            <div class=\"flex items-end mt-2\">\n                                <div class=\"min-w-20 font-mono text-2xl tracking-tighter leading-none\">\n                                    {{item.amount | currency:'USD':'symbol':'1.2-4'}}\n                                </div>\n                                <mat-icon\n                                    class=\"text-green-500 icon-size-3.5 mx-0.5 mb-px\"\n                                    [ngClass]=\"{'text-green-500': item.trend.dir === 'up', 'text-red-500': item.trend.dir === 'down'}\"\n                                    [svgIcon]=\"item.trend.dir === 'up' ? 'heroicons_mini:arrow-long-up' : 'heroicons_mini:arrow-long-down'\"></mat-icon>\n                                <div\n                                    class=\"font-mono font-medium text-sm leading-none mb-px\"\n                                    [ngClass]=\"{'text-green-500': item.trend.dir === 'up', 'text-red-500': item.trend.dir === 'down'}\">\n                                    {{item.trend.amount}}%\n                                </div>\n                            </div>\n                        </div>\n                        <apx-chart\n                            class=\"flex flex-auto items-center h-10 overflow-hidden\"\n                            [chart]=\"watchlistChartOptions.chart\"\n                            [colors]=\"item.trend.dir === 'up' ? ['#48BB78']: ['#F56565']\"\n                            [series]=\"item.series\"\n                            [stroke]=\"watchlistChartOptions.stroke\"\n                            [tooltip]=\"watchlistChartOptions.tooltip\"\n                            [xaxis]=\"watchlistChartOptions.xaxis\"></apx-chart>\n                    </div>\n                </div>\n\n                <!-- Buy / Sell -->\n                <div class=\"flex flex-col flex-auto shrink-0 pt-6 bg-gray-50 dark:bg-transparent\">\n\n                    <!-- Action -->\n                    <div class=\"flex flex-col px-6 pb-2\">\n                        <mat-form-field>\n                            <mat-label>Action</mat-label>\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"buySellSelect.value === 'buy' ? 'heroicons_solid:arrow-down-tray' : 'heroicons_solid:arrow-up-tray'\"\n                                matPrefix></mat-icon>\n                            <mat-select\n                                [value]=\"'buy'\"\n                                #buySellSelect=\"matSelect\">\n                                <mat-option [value]=\"'buy'\">Buy</mat-option>\n                                <mat-option [value]=\"'sell'\">Sell</mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Wallet -->\n                    <div class=\"flex flex-col px-6 pb-2\">\n                        <mat-form-field class=\"w-full\">\n                            <mat-label>Wallet</mat-label>\n                            <mat-select\n                                [value]=\"'btc'\"\n                                #walletSelector=\"matSelect\">\n                                <mat-select-trigger>\n                                    <span class=\"flex items-center\">\n                                        <span>{{walletSelector.triggerValue}}</span>\n                                        <span class=\"mx-1 text-hint\">-</span>\n                                        <span class=\"flex items-center font-mono\">\n                                            <span>{{data.wallets[walletSelector.value]}}</span>\n                                            <span class=\"ml-1\">{{walletSelector.value | uppercase}}</span>\n                                        </span>\n                                    </span>\n                                </mat-select-trigger>\n                                <mat-option [value]=\"'btc'\">Bitcoin</mat-option>\n                                <mat-option [value]=\"'eth'\">Ethereum</mat-option>\n                                <mat-option [value]=\"'bch'\">Bitcoin Cash</mat-option>\n                                <mat-option [value]=\"'xrp'\">XRP</mat-option>\n                            </mat-select>\n                            <mat-hint class=\"flex items-center\">\n                                <span class=\"mr-1\">USD:</span>\n                                <span class=\"font-mono font-medium text-normal\">\n                                    {{data.wallets[walletSelector.value] * data.prices[walletSelector.value] | currency:'USD'}}\n                                </span>\n                            </mat-hint>\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Buy form -->\n                    <form\n                        class=\"flex flex-col px-6\"\n                        *ngIf=\"buySellSelect.value === 'buy'\">\n                        <mat-form-field class=\"w-full\">\n                            <mat-label>Amount</mat-label>\n                            <input\n                                matInput\n                                autocomplete=\"off\"\n                                #buyAmount>\n                            <mat-select\n                                [value]=\"'coin'\"\n                                matSuffix\n                                #buyType=\"matSelect\">\n                                <mat-option [value]=\"'coin'\">{{walletSelector.value | uppercase}}</mat-option>\n                                <mat-option [value]=\"'usd'\">USD</mat-option>\n                            </mat-select>\n                            <span\n                                matPrefix\n                                *ngIf=\"buyType.value === 'usd'\">\n                                $\n                            </span>\n                            <mat-hint class=\"flex items-center\">\n                                <ng-container *ngIf=\"buyType.value === 'coin'\">\n                                    <span class=\"mr-1\">It will cost:</span>\n                                    <span class=\"font-mono font-medium text-normal\">\n                                        {{buyAmount.value * data.prices[walletSelector.value] | currency:'USD':'symbol':'1.2-4'}}\n                                    </span>\n                                </ng-container>\n                                <ng-container *ngIf=\"buyType.value === 'usd'\">\n                                    <span class=\"mr-1\">You will receive:</span>\n                                    <span class=\"font-mono font-medium text-normal\">\n                                        {{buyAmount.value / data.prices[walletSelector.value] | number:'1.2-6'}} {{walletSelector.value | uppercase}}\n                                    </span>\n                                </ng-container>\n                            </mat-hint>\n                        </mat-form-field>\n                        <button\n                            class=\"mt-4 mb-8\"\n                            mat-flat-button\n                            [color]=\"'primary'\">\n                            BUY\n                        </button>\n                    </form>\n\n                    <!-- Sell form -->\n                    <form\n                        class=\"flex flex-col px-6\"\n                        *ngIf=\"buySellSelect.value === 'sell'\">\n                        <mat-form-field class=\"w-full\">\n                            <mat-label>Amount</mat-label>\n                            <input\n                                matInput\n                                autocomplete=\"off\"\n                                #sellAmount>\n                            <mat-select\n                                [value]=\"'coin'\"\n                                matSuffix\n                                #sellType=\"matSelect\">\n                                <mat-option [value]=\"'coin'\">{{walletSelector.value | uppercase}}</mat-option>\n                                <mat-option [value]=\"'usd'\">USD</mat-option>\n                            </mat-select>\n                            <span\n                                matPrefix\n                                *ngIf=\"sellType.value === 'usd'\">\n                                $\n                            </span>\n                            <mat-hint class=\"flex items-center\">\n                                <ng-container *ngIf=\"sellType.value === 'coin'\">\n                                    <span class=\"mr-1\">You will receive:</span>\n                                    <span class=\"font-mono font-medium text-normal\">\n                                        {{sellAmount.value * data.prices[walletSelector.value] | currency:'USD':'symbol':'1.2-4'}}\n                                    </span>\n                                </ng-container>\n                                <ng-container *ngIf=\"sellType.value === 'usd'\">\n                                    <span class=\"mr-1\">You will sell:</span>\n                                    <span class=\"font-mono font-medium text-normal\">\n                                        {{sellAmount.value / data.prices[walletSelector.value] | number:'1.2-6'}} {{walletSelector.value | uppercase}}\n                                    </span>\n                                </ng-container>\n                            </mat-hint>\n                        </mat-form-field>\n                        <button\n                            class=\"mt-4 mb-8\"\n                            mat-flat-button\n                            [color]=\"'primary'\">\n                            SELL\n                        </button>\n                    </form>\n                </div>\n\n            </div>\n\n        </mat-drawer>\n\n        <!-- Content -->\n        <mat-drawer-content class=\"flex flex-col\">\n\n            <!-- BTC Price -->\n            <div class=\"flex flex-col flex-auto min-h-full bg-card dark:bg-default\">\n                <div class=\"flex flex-wrap items-center pl-4 pr-6 py-3 md:pl-6 border-b\">\n                    <button\n                        class=\"mr-6 lg:hidden\"\n                        mat-icon-button\n                        (click)=\"matDrawer.toggle()\">\n                        <mat-icon [svgIcon]=\"'heroicons_outline:bars-3'\"></mat-icon>\n                    </button>\n                    <div class=\"flex flex-col flex-auto my-3 mr-6\">\n                        <div class=\"flex items-center\">\n                            <div class=\"font-medium text-2xl text-secondary mr-2\">Bitcoin</div>\n                            <div class=\"font-medium text-lg text-hint tracking-wider\">(BTC)</div>\n                        </div>\n                        <div class=\"flex items-end mt-1\">\n                            <div class=\"mr-2 font-mono text-3xl leading-none tracking-tight\">{{data.btc.amount | currency:'USD':'symbol':'1.2-2'}}</div>\n                            <mat-icon\n                                class=\"text-green-500 icon-size-5 mr-0.5 mb-px\"\n                                [ngClass]=\"{'text-green-500': data.btc.trend.dir === 'up', 'text-red-500': data.btc.trend.dir === 'down'}\"\n                                [svgIcon]=\"data.btc.trend.dir === 'up' ? 'heroicons_mini:arrow-long-up' : 'heroicons_mini:arrow-long-down'\"></mat-icon>\n                            <div\n                                class=\"font-mono font-medium text-lg leading-none mb-px\"\n                                [ngClass]=\"{'text-green-500': data.btc.trend.dir === 'up', 'text-red-500': data.btc.trend.dir === 'down'}\">\n                                {{data.btc.trend.amount}}%\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"hidden sm:flex items-center my-3\">\n                        <div class=\"p-4 leading-none rounded-l-xl border border-r-0\">\n                            <div class=\"text-sm font-medium text-secondary\">Market Cap</div>\n                            <div class=\"mt-2 font-mono text-xl\">{{(data.btc.marketCap / 1000000000) | number: '1.0-2' | currency}}B</div>\n                        </div>\n                        <div class=\"p-4 leading-none border border-r-0\">\n                            <div class=\"text-sm font-medium text-secondary\">Volume</div>\n                            <div class=\"mt-2 font-mono text-xl\">{{(data.btc.volume / 1000000000) | number: '1.0-2' | currency}}B</div>\n                        </div>\n                        <div class=\"p-4 leading-none border border-r-0\">\n                            <div class=\"text-sm font-medium text-secondary\">Supply</div>\n                            <div class=\"mt-2 font-mono text-xl\">{{(data.btc.supply / 1000000) | number: '1.0-2'}}M</div>\n                        </div>\n                        <div class=\"p-4 leading-none rounded-r-xl border\">\n                            <div class=\"text-sm font-medium text-secondary\">All Time High</div>\n                            <div class=\"mt-2 font-mono text-xl\">{{data.btc.allTimeHigh | currency:'USD'}}</div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"relative flex flex-auto bg-gray-50 dark:bg-transparent\">\n                    <apx-chart\n                        class=\"relative w-full h-160 md:absolute md:inset-0 md:h-auto overflow-hidden\"\n                        [chart]=\"btcOptions.chart\"\n                        [colors]=\"btcOptions.colors\"\n                        [dataLabels]=\"btcOptions.dataLabels\"\n                        [grid]=\"btcOptions.grid\"\n                        [legend]=\"btcOptions.legend\"\n                        [series]=\"btcOptions.series\"\n                        [stroke]=\"btcOptions.stroke\"\n                        [tooltip]=\"btcOptions.tooltip\"\n                        [xaxis]=\"btcOptions.xaxis\"\n                        [yaxis]=\"btcOptions.yaxis\"\n                        #btcChartComponent></apx-chart>\n                </div>\n            </div>\n\n        </mat-drawer-content>\n\n    </mat-drawer-container>\n\n</div>\n","import { inject } from '@angular/core';\nimport { Routes } from '@angular/router';\nimport { CryptoComponent } from 'app/modules/admin/dashboards/crypto/crypto.component';\nimport { CryptoService } from 'app/modules/admin/dashboards/crypto/crypto.service';\n\nexport default [\n    {\n        path     : '',\n        component: CryptoComponent,\n        resolve  : {\n            data: () => inject(CryptoService).getData(),\n        },\n    },\n] as Routes;\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, tap } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class CryptoService\n{\n    private _data: BehaviorSubject<any> = new BehaviorSubject(null);\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for data\n     */\n    get data$(): Observable<any>\n    {\n        return this._data.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get data\n     */\n    getData(): Observable<any>\n    {\n        return this._httpClient.get('api/dashboards/crypto').pipe(\n            tap((response: any) =>\n            {\n                this._data.next(response);\n            }),\n        );\n    }\n}\n"],"names":["CurrencyPipe","DecimalPipe","NgClass","NgFor","NgIf","UpperCasePipe","FormsModule","MatButtonModule","MatOptionModule","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatSidenavModule","DateTime","NgApexchartsModule","Subject","takeUntil","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","item_r7","title","ɵɵtextInterpolate1","iso","ɵɵpipeBind4","amount","ɵɵproperty","ɵɵpureFunction2","_c1","trend","dir","ctx_r1","watchlistChartOptions","chart","ɵɵpureFunction0","_c2","_c3","series","stroke","tooltip","xaxis","ɵɵelementContainerStart","ɵɵelementContainerEnd","_r8","value","ctx_r11","data","prices","_r3","ɵɵtextInterpolate2","ɵɵpipeBind2","ctx_r12","ɵɵpipeBind1","ɵɵtemplate","CryptoComponent_form_51_span_13_Template","CryptoComponent_form_51_ng_container_15_Template","CryptoComponent_form_51_ng_container_16_Template","_r9","_r13","ctx_r16","ctx_r17","CryptoComponent_form_52_span_13_Template","CryptoComponent_form_52_ng_container_15_Template","CryptoComponent_form_52_ng_container_16_Template","_r14","CryptoComponent","constructor","_cryptoService","_changeDetectorRef","_fuseMediaWatcherService","btcOptions","drawerMode","drawerOpened","_unsubscribeAll","ngOnInit","onMediaChange$","pipe","subscribe","matchingAliases","includes","markForCheck","data$","_prepareChartData","ngOnDestroy","next","complete","animations","enabled","fontFamily","foreColor","width","height","type","toolbar","show","zoom","colors","dataLabels","grid","borderColor","position","strokeDashArray","lines","yaxis","legend","btc","price","curve","shared","theme","y","formatter","toFixed","crosshairs","fill","color","dashArray","opacity","tickAmount","axisTicks","axisBorder","labels","trim","rotate","minHeight","hideOverlappingLabels","now","minus","minutes","Math","abs","parseInt","toFormat","style","forceNiceScale","minWidth","sparkline","_","ɵɵdirectiveInject","i1","CryptoService","ChangeDetectorRef","i2","FuseMediaWatcherService","_2","selectors","viewQuery","CryptoComponent_Query","rf","ctx","CryptoComponent_div_6_Template","CryptoComponent_form_51_Template","CryptoComponent_form_52_Template","ɵɵlistener","CryptoComponent_Template_button_click_56_listener","ɵɵrestoreView","_r18","_r0","ɵɵreference","ɵɵresetView","toggle","watchlist","_r2","triggerValue","wallets","marketCap","volume","supply","allTimeHigh","i3","MatDrawer","MatDrawerContainer","MatDrawerContent","i4","MatIcon","i5","ChartComponent","i6","MatFormField","MatLabel","MatHint","MatPrefix","MatSuffix","i7","MatSelect","MatSelectTrigger","i8","MatOption","i9","ɵNgNoValidate","NgControlStatusGroup","NgForm","i10","MatInput","i11","MatButton","MatIconButton","encapsulation","changeDetection","inject","path","component","resolve","getData","BehaviorSubject","tap","_httpClient","_data","asObservable","get","response","ɵɵinject","HttpClient","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}