{"version":3,"file":"default-node_modules_angular_material_fesm2022_table_mjs.js","mappings":"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","sources":["./node_modules/@angular/cdk/fesm2022/table.mjs","./node_modules/@angular/material/fesm2022/table.mjs"],"sourcesContent":["import * as i1 from '@angular/cdk/bidi';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, booleanAttribute, Inject, Optional, Input, ContentChild, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, NgZone, Attribute, SkipSelf, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { Subject, from, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nfunction mixinHasStickyInput(base) {\n    return class extends base {\n        /** Whether sticky positioning should be applied. */\n        get sticky() {\n            return this._sticky;\n        }\n        set sticky(v) {\n            const prevValue = this._sticky;\n            this._sticky = coerceBooleanProperty(v);\n            this._hasStickyChanged = prevValue !== this._sticky;\n        }\n        /** Whether the sticky value has changed since this was last called. */\n        hasStickyChanged() {\n            const hasStickyChanged = this._hasStickyChanged;\n            this._hasStickyChanged = false;\n            return hasStickyChanged;\n        }\n        /** Resets the dirty check for cases where the sticky state has been used without checking. */\n        resetStickyChanged() {\n            this._hasStickyChanged = false;\n        }\n        constructor(...args) {\n            super(...args);\n            this._sticky = false;\n            /** Whether the sticky input has changed since it was last checked. */\n            this._hasStickyChanged = false;\n        }\n    };\n}\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass CdkCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkCellDef, selector: \"[cdkCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellDef]' }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass CdkHeaderCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkHeaderCellDef]' }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass CdkFooterCellDef {\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterCellDef, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkFooterCellDef, selector: \"[cdkFooterCellDef]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkFooterCellDef]' }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {\n}\nconst _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nclass CdkColumnDef extends _CdkColumnDefBase {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n        return this._stickyEnd;\n    }\n    set stickyEnd(value) {\n        if (value !== this._stickyEnd) {\n            this._stickyEnd = value;\n            this._hasStickyChanged = true;\n        }\n    }\n    constructor(_table) {\n        super();\n        this._table = _table;\n        this._stickyEnd = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n        // If the directive is set without a name (updated programmatically), then this setter will\n        // trigger with an empty string and should not overwrite the programmatically set value.\n        if (value) {\n            this._name = value;\n            this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n            this._updateColumnCssClassName();\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkColumnDef, deps: [{ token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"17.0.0\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: { sticky: \"sticky\", name: [\"cdkColumnDef\", \"name\"], stickyEnd: [\"stickyEnd\", \"stickyEnd\", booleanAttribute] }, providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }], queries: [{ propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true }, { propertyName: \"footerCell\", first: true, predicate: CdkFooterCellDef, descendants: true }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [{ provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef }],\n                }]\n        }], ctorParameters: () => [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }], propDecorators: { name: [{\n                type: Input,\n                args: ['cdkColumnDef']\n            }], stickyEnd: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], cell: [{\n                type: ContentChild,\n                args: [CdkCellDef]\n            }], headerCell: [{\n                type: ContentChild,\n                args: [CdkHeaderCellDef]\n            }], footerCell: [{\n                type: ContentChild,\n                args: [CdkFooterCellDef]\n            }] } });\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n    }\n}\n/** Header cell template container that adds the right classes and role. */\nclass CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"cdk-header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-header-cell, th[cdk-header-cell]',\n                    host: {\n                        'class': 'cdk-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: CdkColumnDef }, { type: i0.ElementRef }] });\n/** Footer cell template container that adds the right classes and role. */\nclass CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkFooterCell, selector: \"cdk-footer-cell, td[cdk-footer-cell]\", host: { classAttribute: \"cdk-footer-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n                    host: {\n                        'class': 'cdk-footer-cell',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: CdkColumnDef }, { type: i0.ElementRef }] });\n/** Cell template container that adds the right classes and role. */\nclass CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n        super(columnDef, elementRef);\n        if (columnDef._table?._elementRef.nativeElement.nodeType === 1) {\n            const tableRole = columnDef._table._elementRef.nativeElement.getAttribute('role');\n            const role = tableRole === 'grid' || tableRole === 'treegrid' ? 'gridcell' : 'cell';\n            elementRef.nativeElement.setAttribute('role', role);\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkCell, deps: [{ token: CdkColumnDef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\", host: { classAttribute: \"cdk-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-cell, td[cdk-cell]',\n                    host: {\n                        'class': 'cdk-cell',\n                    },\n                }]\n        }], ctorParameters: () => [{ type: CdkColumnDef }, { type: i0.ElementRef }] });\n\n/**\n * @docs-private\n */\nclass _Schedule {\n    constructor() {\n        this.tasks = [];\n        this.endTasks = [];\n    }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nclass _CoalescedStyleScheduler {\n    constructor(_ngZone) {\n        this._ngZone = _ngZone;\n        this._currentSchedule = null;\n        this._destroyed = new Subject();\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n        this._createScheduleIfNeeded();\n        this._currentSchedule.endTasks.push(task);\n    }\n    /** Prevent any further tasks from running. */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    _createScheduleIfNeeded() {\n        if (this._currentSchedule) {\n            return;\n        }\n        this._currentSchedule = new _Schedule();\n        this._getScheduleObservable()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => {\n            while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n                const schedule = this._currentSchedule;\n                // Capture new tasks scheduled by the current set of tasks.\n                this._currentSchedule = new _Schedule();\n                for (const task of schedule.tasks) {\n                    task();\n                }\n                for (const task of schedule.endTasks) {\n                    task();\n                }\n            }\n            this._currentSchedule = null;\n        });\n    }\n    _getScheduleObservable() {\n        // Use onStable when in the context of an ongoing change detection cycle so that we\n        // do not accidentally trigger additional cycles.\n        return this._ngZone.isStable\n            ? from(Promise.resolve(undefined))\n            : this._ngZone.onStable.pipe(take(1));\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: _CoalescedStyleScheduler, deps: [{ token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable }); }\n    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: _CoalescedStyleScheduler }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: _CoalescedStyleScheduler, decorators: [{\n            type: Injectable\n        }], ctorParameters: () => [{ type: i0.NgZone }] });\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nclass BaseRowDef {\n    constructor(\n    /** @docs-private */ template, _differs) {\n        this.template = template;\n        this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n        // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n        // of the columns property or an empty array if none is provided.\n        if (!this._columnsDiffer) {\n            const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n            this._columnsDiffer = this._differs.find(columns).create();\n            this._columnsDiffer.diff(columns);\n        }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n        return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n        if (this instanceof CdkHeaderRowDef) {\n            return column.headerCell.template;\n        }\n        if (this instanceof CdkFooterRowDef) {\n            return column.footerCell.template;\n        }\n        else {\n            return column.cell.template;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: BaseRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: BaseRowDef, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: BaseRowDef, decorators: [{\n            type: Directive\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }] });\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {\n}\nconst _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass CdkHeaderRowDef extends _CdkHeaderRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkHeaderRowDef, selector: \"[cdkHeaderRowDef]\", inputs: { columns: [\"cdkHeaderRowDef\", \"columns\"], sticky: [\"cdkHeaderRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkHeaderRowDef]',\n                    inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }] });\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {\n}\nconst _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass CdkFooterRowDef extends _CdkFooterRowDefBase {\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n        super.ngOnChanges(changes);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkFooterRowDef, selector: \"[cdkFooterRowDef]\", inputs: { columns: [\"cdkFooterRowDef\", \"columns\"], sticky: [\"cdkFooterRowDefSticky\", \"sticky\"] }, usesInheritance: true, usesOnChanges: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkFooterRowDef]',\n                    inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }] });\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n        super(template, _differs);\n        this._table = _table;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkRowDef, deps: [{ token: i0.TemplateRef }, { token: i0.IterableDiffers }, { token: CDK_TABLE, optional: true }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkRowDef, selector: \"[cdkRowDef]\", inputs: { columns: [\"cdkRowDefColumns\", \"columns\"], when: [\"cdkRowDefWhen\", \"when\"] }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkRowDef]',\n                    inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }, { type: i0.IterableDiffers }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [CDK_TABLE]\n                }, {\n                    type: Optional\n                }] }] });\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nclass CdkCellOutlet {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static { this.mostRecentCellOutlet = null; }\n    constructor(_viewContainer) {\n        this._viewContainer = _viewContainer;\n        CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n        // If this was the last outlet being rendered in the view, remove the reference\n        // from the static property after it has been destroyed to avoid leaking memory.\n        if (CdkCellOutlet.mostRecentCellOutlet === this) {\n            CdkCellOutlet.mostRecentCellOutlet = null;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkCellOutlet, deps: [{ token: i0.ViewContainerRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkCellOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[cdkCellOutlet]' }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkHeaderRow, selector: \"cdk-header-row, tr[cdk-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-header-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-header-row, tr[cdk-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkFooterRow, selector: \"cdk-footer-row, tr[cdk-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-footer-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-footer-row, tr[cdk-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkRow, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkRow, selector: \"cdk-row, tr[cdk-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"cdk-row\" }, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-row, tr[cdk-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'cdk-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass CdkNoDataRow {\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n        this._contentClassName = 'cdk-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkNoDataRow, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkNoDataRow, selector: \"ng-template[cdkNoDataRow]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[cdkNoDataRow]',\n                }]\n        }], ctorParameters: () => [{ type: i0.TemplateRef }] });\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n    /**\n     * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n     *     that uses the native `<table>` element.\n     * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n     *     sticky positioning applied.\n     * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n     *     by reversing left/right positions.\n     * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n     * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n     *     using inline styles. If false, it is assumed that position: sticky is included in\n     *     the component stylesheet for _stickCellCss.\n     * @param _positionListener A listener that is notified of changes to sticky rows/columns\n     *     and their dimensions.\n     */\n    constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n        this._isNativeHtmlTable = _isNativeHtmlTable;\n        this._stickCellCss = _stickCellCss;\n        this.direction = direction;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._isBrowser = _isBrowser;\n        this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n        this._positionListener = _positionListener;\n        this._cachedCellWidths = [];\n        this._borderCellCss = {\n            'top': `${_stickCellCss}-border-elem-top`,\n            'bottom': `${_stickCellCss}-border-elem-bottom`,\n            'left': `${_stickCellCss}-border-elem-left`,\n            'right': `${_stickCellCss}-border-elem-right`,\n        };\n    }\n    /**\n     * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n     * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n     * @param rows The list of rows that should be cleared from sticking in the provided directions\n     * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n     */\n    clearStickyPositioning(rows, stickyDirections) {\n        const elementsToClear = [];\n        for (const row of rows) {\n            // If the row isn't an element (e.g. if it's an `ng-container`),\n            // it won't have inline styles or `children` so we skip it.\n            if (row.nodeType !== row.ELEMENT_NODE) {\n                continue;\n            }\n            elementsToClear.push(row);\n            for (let i = 0; i < row.children.length; i++) {\n                elementsToClear.push(row.children[i]);\n            }\n        }\n        // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (const element of elementsToClear) {\n                this._removeStickyStyle(element, stickyDirections);\n            }\n        });\n    }\n    /**\n     * Applies sticky left and right positions to the cells of each row according to the sticky\n     * states of the rendered column definitions.\n     * @param rows The rows that should have its set of cells stuck according to the sticky states.\n     * @param stickyStartStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the start of the row.\n     * @param stickyEndStates A list of boolean states where each state represents whether the cell\n     *     in this index position should be stuck to the end of the row.\n     * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n     *     column cell. If `false` cached widths will be used instead.\n     */\n    updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n        if (!rows.length ||\n            !this._isBrowser ||\n            !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({ sizes: [] });\n                this._positionListener.stickyEndColumnsUpdated({ sizes: [] });\n            }\n            return;\n        }\n        const firstRow = rows[0];\n        const numCells = firstRow.children.length;\n        const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n        const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n        const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n        const lastStickyStart = stickyStartStates.lastIndexOf(true);\n        const firstStickyEnd = stickyEndStates.indexOf(true);\n        // Coalesce with sticky row updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            const isRtl = this.direction === 'rtl';\n            const start = isRtl ? 'right' : 'left';\n            const end = isRtl ? 'left' : 'right';\n            for (const row of rows) {\n                for (let i = 0; i < numCells; i++) {\n                    const cell = row.children[i];\n                    if (stickyStartStates[i]) {\n                        this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n                    }\n                    if (stickyEndStates[i]) {\n                        this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n                    }\n                }\n            }\n            if (this._positionListener) {\n                this._positionListener.stickyColumnsUpdated({\n                    sizes: lastStickyStart === -1\n                        ? []\n                        : cellWidths\n                            .slice(0, lastStickyStart + 1)\n                            .map((width, index) => (stickyStartStates[index] ? width : null)),\n                });\n                this._positionListener.stickyEndColumnsUpdated({\n                    sizes: firstStickyEnd === -1\n                        ? []\n                        : cellWidths\n                            .slice(firstStickyEnd)\n                            .map((width, index) => (stickyEndStates[index + firstStickyEnd] ? width : null))\n                            .reverse(),\n                });\n            }\n        });\n    }\n    /**\n     * Applies sticky positioning to the row's cells if using the native table layout, and to the\n     * row itself otherwise.\n     * @param rowsToStick The list of rows that should be stuck according to their corresponding\n     *     sticky state and to the provided top or bottom position.\n     * @param stickyStates A list of boolean states where each state represents whether the row\n     *     should be stuck in the particular top or bottom position.\n     * @param position The position direction in which the row should be stuck if that row should be\n     *     sticky.\n     *\n     */\n    stickRows(rowsToStick, stickyStates, position) {\n        // Since we can't measure the rows on the server, we can't stick the rows properly.\n        if (!this._isBrowser) {\n            return;\n        }\n        // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n        // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n        // sticky states need to be reversed as well.\n        const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n        const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n        // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n        const stickyOffsets = [];\n        const stickyCellHeights = [];\n        const elementsToStick = [];\n        for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n            if (!states[rowIndex]) {\n                continue;\n            }\n            stickyOffsets[rowIndex] = stickyOffset;\n            const row = rows[rowIndex];\n            elementsToStick[rowIndex] = this._isNativeHtmlTable\n                ? Array.from(row.children)\n                : [row];\n            const height = row.getBoundingClientRect().height;\n            stickyOffset += height;\n            stickyCellHeights[rowIndex] = height;\n        }\n        const borderedRowIndex = states.lastIndexOf(true);\n        // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n        // (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n                if (!states[rowIndex]) {\n                    continue;\n                }\n                const offset = stickyOffsets[rowIndex];\n                const isBorderedRowIndex = rowIndex === borderedRowIndex;\n                for (const element of elementsToStick[rowIndex]) {\n                    this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n                }\n            }\n            if (position === 'top') {\n                this._positionListener?.stickyHeaderRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n            else {\n                this._positionListener?.stickyFooterRowsUpdated({\n                    sizes: stickyCellHeights,\n                    offsets: stickyOffsets,\n                    elements: elementsToStick,\n                });\n            }\n        });\n    }\n    /**\n     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n     * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n     * the tfoot element.\n     */\n    updateStickyFooterContainer(tableElement, stickyStates) {\n        if (!this._isNativeHtmlTable) {\n            return;\n        }\n        const tfoot = tableElement.querySelector('tfoot');\n        // Coalesce with other sticky updates (and potentially other changes like column resize).\n        this._coalescedStyleScheduler.schedule(() => {\n            if (stickyStates.some(state => !state)) {\n                this._removeStickyStyle(tfoot, ['bottom']);\n            }\n            else {\n                this._addStickyStyle(tfoot, 'bottom', 0, false);\n            }\n        });\n    }\n    /**\n     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n     * the zIndex, removing each of the provided sticky directions, and removing the\n     * sticky position if there are no more directions.\n     */\n    _removeStickyStyle(element, stickyDirections) {\n        for (const dir of stickyDirections) {\n            element.style[dir] = '';\n            element.classList.remove(this._borderCellCss[dir]);\n        }\n        // If the element no longer has any more sticky directions, remove sticky positioning and\n        // the sticky CSS class.\n        // Short-circuit checking element.style[dir] for stickyDirections as they\n        // were already removed above.\n        const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n        if (hasDirection) {\n            element.style.zIndex = this._getCalculatedZIndex(element);\n        }\n        else {\n            // When not hasDirection, _getCalculatedZIndex will always return ''.\n            element.style.zIndex = '';\n            if (this._needsPositionStickyOnElement) {\n                element.style.position = '';\n            }\n            element.classList.remove(this._stickCellCss);\n        }\n    }\n    /**\n     * Adds the sticky styling to the element by adding the sticky style class, changing position\n     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n     * direction and value.\n     */\n    _addStickyStyle(element, dir, dirValue, isBorderElement) {\n        element.classList.add(this._stickCellCss);\n        if (isBorderElement) {\n            element.classList.add(this._borderCellCss[dir]);\n        }\n        element.style[dir] = `${dirValue}px`;\n        element.style.zIndex = this._getCalculatedZIndex(element);\n        if (this._needsPositionStickyOnElement) {\n            element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n        }\n    }\n    /**\n     * Calculate what the z-index should be for the element, depending on what directions (top,\n     * bottom, left, right) have been set. It should be true that elements with a top direction\n     * should have the highest index since these are elements like a table header. If any of those\n     * elements are also sticky in another direction, then they should appear above other elements\n     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n     * (e.g. footer rows) should then be next in the ordering such that they are below the header\n     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n     * should minimally increment so that they are above non-sticky elements but below top and bottom\n     * elements.\n     */\n    _getCalculatedZIndex(element) {\n        const zIndexIncrements = {\n            top: 100,\n            bottom: 10,\n            left: 1,\n            right: 1,\n        };\n        let zIndex = 0;\n        // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n        // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n        // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n        for (const dir of STICKY_DIRECTIONS) {\n            if (element.style[dir]) {\n                zIndex += zIndexIncrements[dir];\n            }\n        }\n        return zIndex ? `${zIndex}` : '';\n    }\n    /** Gets the widths for each cell in the provided row. */\n    _getCellWidths(row, recalculateCellWidths = true) {\n        if (!recalculateCellWidths && this._cachedCellWidths.length) {\n            return this._cachedCellWidths;\n        }\n        const cellWidths = [];\n        const firstRowCells = row.children;\n        for (let i = 0; i < firstRowCells.length; i++) {\n            let cell = firstRowCells[i];\n            cellWidths.push(cell.getBoundingClientRect().width);\n        }\n        this._cachedCellWidths = cellWidths;\n        return cellWidths;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyStartColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = 0; i < widths.length; i++) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n    /**\n     * Determines the left and right positions of each sticky column cell, which will be the\n     * accumulation of all sticky column cell widths to the left and right, respectively.\n     * Non-sticky cells do not need to have a value set since their positions will not be applied.\n     */\n    _getStickyEndColumnPositions(widths, stickyStates) {\n        const positions = [];\n        let nextPosition = 0;\n        for (let i = widths.length; i > 0; i--) {\n            if (stickyStates[i]) {\n                positions[i] = nextPosition;\n                nextPosition += widths[i];\n            }\n        }\n        return positions;\n    }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n    return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n    return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n    return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n    return Error(`Could not find a matching row definition for the` +\n        `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n    return Error('Missing definitions for header, footer, and row; ' +\n        'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n    return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n    return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n    return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass CdkRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkRecycleRows, selector: \"cdk-table[recycleRows], table[cdk-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'cdk-table[recycleRows], table[cdk-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nclass DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: DataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: DataRowOutlet, selector: \"[rowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: DataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[rowOutlet]' }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nclass HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: HeaderRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: HeaderRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[headerRowOutlet]' }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nclass FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: FooterRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: FooterRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[footerRowOutlet]' }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nclass NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n        this.viewContainer = viewContainer;\n        this.elementRef = elementRef;\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: NoDataRowOutlet, deps: [{ token: i0.ViewContainerRef }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\", ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: NoDataRowOutlet, decorators: [{\n            type: Directive,\n            args: [{ selector: '[noDataRowOutlet]' }]\n        }], ctorParameters: () => [{ type: i0.ViewContainerRef }, { type: i0.ElementRef }] });\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE = \n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {\n}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nclass CdkTable {\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n        return this._trackByFn;\n    }\n    set trackBy(fn) {\n        if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n        }\n        this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n        return this._dataSource;\n    }\n    set dataSource(dataSource) {\n        if (this._dataSource !== dataSource) {\n            this._switchDataSource(dataSource);\n        }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n        return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(value) {\n        this._multiTemplateDataRows = value;\n        // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n        // this setter will be invoked before the row outlet has been defined hence the null check.\n        if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n            this._forceRenderDataRows();\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n        return this._fixedLayout;\n    }\n    set fixedLayout(value) {\n        this._fixedLayout = value;\n        // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n        this._forceRecalculateCellWidths = true;\n        this._stickyColumnStylesNeedReset = true;\n    }\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler, \n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener, \n    /**\n     * @deprecated `_ngZone` parameter to become required.\n     * @breaking-change 14.0.0\n     */\n    _ngZone) {\n        this._differs = _differs;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        this._platform = _platform;\n        this._viewRepeater = _viewRepeater;\n        this._coalescedStyleScheduler = _coalescedStyleScheduler;\n        this._viewportRuler = _viewportRuler;\n        this._stickyPositioningListener = _stickyPositioningListener;\n        this._ngZone = _ngZone;\n        /** Subject that emits when the component has been destroyed. */\n        this._onDestroy = new Subject();\n        /**\n         * Map of all the user's defined columns (header, data, and footer cell template) identified by\n         * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n         * any custom column definitions added to `_customColumnDefs`.\n         */\n        this._columnDefsByName = new Map();\n        /**\n         * Column definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * column definitions as *its* content child.\n         */\n        this._customColumnDefs = new Set();\n        /**\n         * Data row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in data rows as *its* content child.\n         */\n        this._customRowDefs = new Set();\n        /**\n         * Header row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n         * built-in header rows as *its* content child.\n         */\n        this._customHeaderRowDefs = new Set();\n        /**\n         * Footer row definitions that were defined outside of the direct content children of the table.\n         * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n         * built-in footer row as *its* content child.\n         */\n        this._customFooterRowDefs = new Set();\n        /**\n         * Whether the header row definition has been changed. Triggers an update to the header row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._headerRowDefChanged = true;\n        /**\n         * Whether the footer row definition has been changed. Triggers an update to the footer row after\n         * content is checked. Initialized as true so that the table renders the initial set of rows.\n         */\n        this._footerRowDefChanged = true;\n        /**\n         * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n         * change.\n         */\n        this._stickyColumnStylesNeedReset = true;\n        /**\n         * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n         * `false`, cached values will be used instead. This is only applicable to tables with\n         * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n         */\n        this._forceRecalculateCellWidths = true;\n        /**\n         * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n         * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n         * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n         * and row template matches, which allows the `IterableDiffer` to check rows by reference\n         * and understand which rows are added/moved/removed.\n         *\n         * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n         * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n         * contains an array of created pairs. The array is necessary to handle cases where the data\n         * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n         * stored.\n         */\n        this._cachedRenderRowsMap = new Map();\n        /**\n         * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n         * table subclasses.\n         */\n        this.stickyCssClass = 'cdk-table-sticky';\n        /**\n         * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n         * the position is set in a selector associated with the value of stickyCssClass. May be\n         * overridden by table subclasses\n         */\n        this.needsPositionStickyOnElement = true;\n        /** Whether the no data row is currently showing anything. */\n        this._isShowingNoDataRow = false;\n        this._multiTemplateDataRows = false;\n        this._fixedLayout = false;\n        /**\n         * Emits when the table completes rendering a set of data rows based on the latest data from the\n         * data source, even if the set of rows is empty.\n         */\n        this.contentChanged = new EventEmitter();\n        // TODO(andrewseguin): Remove max value as the end index\n        //   and instead calculate the view on init and scroll.\n        /**\n         * Stream containing the latest information on what rows are being displayed on screen.\n         * Can be used by the data source to as a heuristic of what data should be provided.\n         *\n         * @docs-private\n         */\n        this.viewChange = new BehaviorSubject({\n            start: 0,\n            end: Number.MAX_VALUE,\n        });\n        if (!role) {\n            this._elementRef.nativeElement.setAttribute('role', 'table');\n        }\n        this._document = _document;\n        this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    ngOnInit() {\n        this._setupStickyStyler();\n        if (this._isNativeHtmlTable) {\n            this._applyNativeTableSections();\n        }\n        // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n        // the user has provided a custom trackBy, return the result of that function as evaluated\n        // with the values of the `RenderRow`'s data and index.\n        this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n            return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n        });\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(() => {\n            this._forceRecalculateCellWidths = true;\n        });\n    }\n    ngAfterContentChecked() {\n        // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n        this._cacheRowDefs();\n        this._cacheColumnDefs();\n        // Make sure that the user has at least added header, footer, or data row def.\n        if (!this._headerRowDefs.length &&\n            !this._footerRowDefs.length &&\n            !this._rowDefs.length &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingRowDefsError();\n        }\n        // Render updates if the list of columns have been changed for the header, row, or footer defs.\n        const columnsChanged = this._renderUpdatedColumns();\n        const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n        // Ensure sticky column styles are reset if set to `true` elsewhere.\n        this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n        this._forceRecalculateCellWidths = rowDefsChanged;\n        // If the header row definition has been changed, trigger a render to the header row.\n        if (this._headerRowDefChanged) {\n            this._forceRenderHeaderRows();\n            this._headerRowDefChanged = false;\n        }\n        // If the footer row definition has been changed, trigger a render to the footer row.\n        if (this._footerRowDefChanged) {\n            this._forceRenderFooterRows();\n            this._footerRowDefChanged = false;\n        }\n        // If there is a data source and row definitions, connect to the data source unless a\n        // connection has already been made.\n        if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n            this._observeRenderChanges();\n        }\n        else if (this._stickyColumnStylesNeedReset) {\n            // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n            // called when it row data arrives. Otherwise, we need to call it proactively.\n            this.updateStickyColumnStyles();\n        }\n        this._checkStickyStates();\n    }\n    ngOnDestroy() {\n        [\n            this._rowOutlet.viewContainer,\n            this._headerRowOutlet.viewContainer,\n            this._footerRowOutlet.viewContainer,\n            this._cachedRenderRowsMap,\n            this._customColumnDefs,\n            this._customRowDefs,\n            this._customHeaderRowDefs,\n            this._customFooterRowDefs,\n            this._columnDefsByName,\n        ].forEach(def => {\n            def.clear();\n        });\n        this._headerRowDefs = [];\n        this._footerRowDefs = [];\n        this._defaultRowDef = null;\n        this._onDestroy.next();\n        this._onDestroy.complete();\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n        this._renderRows = this._getAllRenderRows();\n        const changes = this._dataDiffer.diff(this._renderRows);\n        if (!changes) {\n            this._updateNoDataRow();\n            this.contentChanged.next();\n            return;\n        }\n        const viewContainer = this._rowOutlet.viewContainer;\n        this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, (change) => {\n            if (change.operation === 1 /* _ViewRepeaterOperation.INSERTED */ && change.context) {\n                this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n        });\n        // Update the meta context of a row's context data (index, count, first, last, ...)\n        this._updateRowIndexContext();\n        // Update rows that did not get added/removed/moved but may have had their identity changed,\n        // e.g. if trackBy matched data on some property but the actual data reference changed.\n        changes.forEachIdentityChange((record) => {\n            const rowView = viewContainer.get(record.currentIndex);\n            rowView.context.$implicit = record.item.data;\n        });\n        this._updateNoDataRow();\n        // Allow the new row data to render before measuring it.\n        // @breaking-change 14.0.0 Remove undefined check once _ngZone is required.\n        if (this._ngZone && NgZone.isInAngularZone()) {\n            this._ngZone.onStable.pipe(take(1), takeUntil(this._onDestroy)).subscribe(() => {\n                this.updateStickyColumnStyles();\n            });\n        }\n        else {\n            this.updateStickyColumnStyles();\n        }\n        this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n        this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n        this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n        this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n        this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.add(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n        this._customHeaderRowDefs.delete(headerRowDef);\n        this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.add(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n        this._customFooterRowDefs.delete(footerRowDef);\n        this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n        this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the thead element if there are no header rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const thead = tableElement.querySelector('thead');\n        if (thead) {\n            thead.style.display = headerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._headerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n        this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        const tableElement = this._elementRef.nativeElement;\n        // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n        // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n        // required child `row`.\n        const tfoot = tableElement.querySelector('tfoot');\n        if (tfoot) {\n            tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n        const stickyStates = this._footerRowDefs.map(def => def.sticky);\n        this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n        this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n        this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n        // Reset the dirty state of the sticky input change since it has been used.\n        this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n        const headerRows = this._getRenderedRows(this._headerRowOutlet);\n        const dataRows = this._getRenderedRows(this._rowOutlet);\n        const footerRows = this._getRenderedRows(this._footerRowOutlet);\n        // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n        // In a table using a fixed layout, row content won't affect column width, so sticky styles\n        // don't need to be cleared unless either the sticky column config changes or one of the row\n        // defs change.\n        if ((this._isNativeHtmlTable && !this._fixedLayout) || this._stickyColumnStylesNeedReset) {\n            // Clear the left and right positioning from all columns in the table across all rows since\n            // sticky columns span across all table sections (header, data, footer)\n            this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n            this._stickyColumnStylesNeedReset = false;\n        }\n        // Update the sticky styles for each header row depending on the def's sticky state\n        headerRows.forEach((headerRow, i) => {\n            this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n        });\n        // Update the sticky styles for each data row depending on its def's sticky state\n        this._rowDefs.forEach(rowDef => {\n            // Collect all the rows rendered with this row definition.\n            const rows = [];\n            for (let i = 0; i < dataRows.length; i++) {\n                if (this._renderRows[i].rowDef === rowDef) {\n                    rows.push(dataRows[i]);\n                }\n            }\n            this._addStickyColumnStyles(rows, rowDef);\n        });\n        // Update the sticky styles for each footer row depending on the def's sticky state\n        footerRows.forEach((footerRow, i) => {\n            this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n        });\n        // Reset the dirty state of the sticky input change since it has been used.\n        Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n        const renderRows = [];\n        // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n        // new cache while unused ones can be picked up by garbage collection.\n        const prevCachedRenderRows = this._cachedRenderRowsMap;\n        this._cachedRenderRowsMap = new Map();\n        // For each data object, get the list of rows that should be rendered, represented by the\n        // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n        for (let i = 0; i < this._data.length; i++) {\n            let data = this._data[i];\n            const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n            if (!this._cachedRenderRowsMap.has(data)) {\n                this._cachedRenderRowsMap.set(data, new WeakMap());\n            }\n            for (let j = 0; j < renderRowsForData.length; j++) {\n                let renderRow = renderRowsForData[j];\n                const cache = this._cachedRenderRowsMap.get(renderRow.data);\n                if (cache.has(renderRow.rowDef)) {\n                    cache.get(renderRow.rowDef).push(renderRow);\n                }\n                else {\n                    cache.set(renderRow.rowDef, [renderRow]);\n                }\n                renderRows.push(renderRow);\n            }\n        }\n        return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n        const rowDefs = this._getRowDefs(data, dataIndex);\n        return rowDefs.map(rowDef => {\n            const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n            if (cachedRenderRows.length) {\n                const dataRow = cachedRenderRows.shift();\n                dataRow.dataIndex = dataIndex;\n                return dataRow;\n            }\n            else {\n                return { data, rowDef, dataIndex };\n            }\n        });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n        this._columnDefsByName.clear();\n        const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n        columnDefs.forEach(columnDef => {\n            if (this._columnDefsByName.has(columnDef.name) &&\n                (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableDuplicateColumnNameError(columnDef.name);\n            }\n            this._columnDefsByName.set(columnDef.name, columnDef);\n        });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n        this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n        this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n        this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n        // After all row definitions are determined, find the row definition to be considered default.\n        const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n        if (!this.multiTemplateDataRows &&\n            defaultRowDefs.length > 1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMultipleDefaultRowDefsError();\n        }\n        this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n        const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n        // Force re-render data rows if the list of column definitions have changed.\n        const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n        if (dataColumnsChanged) {\n            this._forceRenderDataRows();\n        }\n        // Force re-render header/footer rows if the list of column definitions have changed.\n        const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n        if (headerColumnsChanged) {\n            this._forceRenderHeaderRows();\n        }\n        const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n        if (footerColumnsChanged) {\n            this._forceRenderFooterRows();\n        }\n        return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n        this._data = [];\n        if (isDataSource(this.dataSource)) {\n            this.dataSource.disconnect(this);\n        }\n        // Stop listening for data from the previous data source.\n        if (this._renderChangeSubscription) {\n            this._renderChangeSubscription.unsubscribe();\n            this._renderChangeSubscription = null;\n        }\n        if (!dataSource) {\n            if (this._dataDiffer) {\n                this._dataDiffer.diff([]);\n            }\n            this._rowOutlet.viewContainer.clear();\n        }\n        this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n        // If no data source has been set, there is nothing to observe for changes.\n        if (!this.dataSource) {\n            return;\n        }\n        let dataStream;\n        if (isDataSource(this.dataSource)) {\n            dataStream = this.dataSource.connect(this);\n        }\n        else if (isObservable(this.dataSource)) {\n            dataStream = this.dataSource;\n        }\n        else if (Array.isArray(this.dataSource)) {\n            dataStream = of(this.dataSource);\n        }\n        if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableUnknownDataSourceError();\n        }\n        this._renderChangeSubscription = dataStream\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(data => {\n            this._data = data || [];\n            this.renderRows();\n        });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n        // Clear the header row outlet if any content exists.\n        if (this._headerRowOutlet.viewContainer.length > 0) {\n            this._headerRowOutlet.viewContainer.clear();\n        }\n        this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n        this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n        // Clear the footer row outlet if any content exists.\n        if (this._footerRowOutlet.viewContainer.length > 0) {\n            this._footerRowOutlet.viewContainer.clear();\n        }\n        this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n        this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n        const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n            const columnDef = this._columnDefsByName.get(columnName);\n            if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnName);\n            }\n            return columnDef;\n        });\n        const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n        const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n        this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n        const renderedRows = [];\n        for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n            const viewRef = rowOutlet.viewContainer.get(i);\n            renderedRows.push(viewRef.rootNodes[0]);\n        }\n        return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n        if (this._rowDefs.length == 1) {\n            return [this._rowDefs[0]];\n        }\n        let rowDefs = [];\n        if (this.multiTemplateDataRows) {\n            rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n        }\n        else {\n            let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n            if (rowDef) {\n                rowDefs.push(rowDef);\n            }\n        }\n        if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableMissingMatchingRowDefError(data);\n        }\n        return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n        const rowDef = renderRow.rowDef;\n        const context = { $implicit: renderRow.data };\n        return {\n            templateRef: rowDef.template,\n            context,\n            index,\n        };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n        // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n        const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n        this._renderCellTemplateForItem(rowDef, context);\n        return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n        for (let cellTemplate of this._getCellTemplates(rowDef)) {\n            if (CdkCellOutlet.mostRecentCellOutlet) {\n                CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n        const viewContainer = this._rowOutlet.viewContainer;\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n            const viewRef = viewContainer.get(renderIndex);\n            const context = viewRef.context;\n            context.count = count;\n            context.first = renderIndex === 0;\n            context.last = renderIndex === count - 1;\n            context.even = renderIndex % 2 === 0;\n            context.odd = !context.even;\n            if (this.multiTemplateDataRows) {\n                context.dataIndex = this._renderRows[renderIndex].dataIndex;\n                context.renderIndex = renderIndex;\n            }\n            else {\n                context.index = this._renderRows[renderIndex].dataIndex;\n            }\n        }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n        if (!rowDef || !rowDef.columns) {\n            return [];\n        }\n        return Array.from(rowDef.columns, columnId => {\n            const column = this._columnDefsByName.get(columnId);\n            if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getTableUnknownColumnError(columnId);\n            }\n            return rowDef.extractCellTemplate(column);\n        });\n    }\n    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n    _applyNativeTableSections() {\n        const documentFragment = this._document.createDocumentFragment();\n        const sections = [\n            { tag: 'thead', outlets: [this._headerRowOutlet] },\n            { tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet] },\n            { tag: 'tfoot', outlets: [this._footerRowOutlet] },\n        ];\n        for (const section of sections) {\n            const element = this._document.createElement(section.tag);\n            element.setAttribute('role', 'rowgroup');\n            for (const outlet of section.outlets) {\n                element.appendChild(outlet.elementRef.nativeElement);\n            }\n            documentFragment.appendChild(element);\n        }\n        // Use a DocumentFragment so we don't hit the DOM on each iteration.\n        this._elementRef.nativeElement.appendChild(documentFragment);\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n        this._dataDiffer.diff([]);\n        this._rowOutlet.viewContainer.clear();\n        this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n        const stickyCheckReducer = (acc, d) => {\n            return acc || d.hasStickyChanged();\n        };\n        // Note that the check needs to occur for every definition since it notifies the definition\n        // that it can reset its dirty state. Using another operator like `some` may short-circuit\n        // remaining definitions and leave them in an unchecked state.\n        if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyHeaderRowStyles();\n        }\n        if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n            this.updateStickyFooterRowStyles();\n        }\n        if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n            this._stickyColumnStylesNeedReset = true;\n            this.updateStickyColumnStyles();\n        }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n        const direction = this._dir ? this._dir.value : 'ltr';\n        this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n        (this._dir ? this._dir.change : of())\n            .pipe(takeUntil(this._onDestroy))\n            .subscribe(value => {\n            this._stickyStyler.direction = value;\n            this.updateStickyColumnStyles();\n        });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n        return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n        const noDataRow = this._customNoDataRow || this._noDataRow;\n        if (!noDataRow) {\n            return;\n        }\n        const shouldShow = this._rowOutlet.viewContainer.length === 0;\n        if (shouldShow === this._isShowingNoDataRow) {\n            return;\n        }\n        const container = this._noDataRowOutlet.viewContainer;\n        if (shouldShow) {\n            const view = container.createEmbeddedView(noDataRow.templateRef);\n            const rootNode = view.rootNodes[0];\n            // Only add the attributes if we have a single root node since it's hard\n            // to figure out which one to add it to when there are multiple.\n            if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n                rootNode.setAttribute('role', 'row');\n                rootNode.classList.add(noDataRow._contentClassName);\n            }\n        }\n        else {\n            container.clear();\n        }\n        this._isShowingNoDataRow = shouldShow;\n        this._changeDetectorRef.markForCheck();\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTable, deps: [{ token: i0.IterableDiffers }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: 'role', attribute: true }, { token: i1.Directionality, optional: true }, { token: DOCUMENT }, { token: i2.Platform }, { token: _VIEW_REPEATER_STRATEGY }, { token: _COALESCED_STYLE_SCHEDULER }, { token: i3.ViewportRuler }, { token: STICKY_POSITIONING_LISTENER, optional: true, skipSelf: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"17.0.0\", type: CdkTable, selector: \"cdk-table, table[cdk-table]\", inputs: { trackBy: \"trackBy\", dataSource: \"dataSource\", multiTemplateDataRows: [\"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute], fixedLayout: [\"fixedLayout\", \"fixedLayout\", booleanAttribute] }, outputs: { contentChanged: \"contentChanged\" }, host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.cdk-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"cdk-table\" }, providers: [\n            { provide: CDK_TABLE, useExisting: CdkTable },\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], queries: [{ propertyName: \"_noDataRow\", first: true, predicate: CdkNoDataRow, descendants: true }, { propertyName: \"_contentColumnDefs\", predicate: CdkColumnDef, descendants: true }, { propertyName: \"_contentRowDefs\", predicate: CdkRowDef, descendants: true }, { propertyName: \"_contentHeaderRowDefs\", predicate: CdkHeaderRowDef, descendants: true }, { propertyName: \"_contentFooterRowDefs\", predicate: CdkFooterRowDef, descendants: true }], viewQueries: [{ propertyName: \"_rowOutlet\", first: true, predicate: DataRowOutlet, descendants: true, static: true }, { propertyName: \"_headerRowOutlet\", first: true, predicate: HeaderRowOutlet, descendants: true, static: true }, { propertyName: \"_footerRowOutlet\", first: true, predicate: FooterRowOutlet, descendants: true, static: true }, { propertyName: \"_noDataRowOutlet\", first: true, predicate: NoDataRowOutlet, descendants: true, static: true }], exportAs: [\"cdkTable\"], ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"], dependencies: [{ kind: \"directive\", type: DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'cdk-table, table[cdk-table]', exportAs: 'cdkTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'cdk-table',\n                        '[class.cdk-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, providers: [\n                        { provide: CDK_TABLE, useExisting: CdkTable },\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"] }]\n        }], ctorParameters: () => [{ type: i0.IterableDiffers }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                    type: Attribute,\n                    args: ['role']\n                }] }, { type: i1.Directionality, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [DOCUMENT]\n                }] }, { type: i2.Platform }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [_VIEW_REPEATER_STRATEGY]\n                }] }, { type: _CoalescedStyleScheduler, decorators: [{\n                    type: Inject,\n                    args: [_COALESCED_STYLE_SCHEDULER]\n                }] }, { type: i3.ViewportRuler }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: SkipSelf\n                }, {\n                    type: Inject,\n                    args: [STICKY_POSITIONING_LISTENER]\n                }] }, { type: i0.NgZone, decorators: [{\n                    type: Optional\n                }] }], propDecorators: { trackBy: [{\n                type: Input\n            }], dataSource: [{\n                type: Input\n            }], multiTemplateDataRows: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], fixedLayout: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], contentChanged: [{\n                type: Output\n            }], _rowOutlet: [{\n                type: ViewChild,\n                args: [DataRowOutlet, { static: true }]\n            }], _headerRowOutlet: [{\n                type: ViewChild,\n                args: [HeaderRowOutlet, { static: true }]\n            }], _footerRowOutlet: [{\n                type: ViewChild,\n                args: [FooterRowOutlet, { static: true }]\n            }], _noDataRowOutlet: [{\n                type: ViewChild,\n                args: [NoDataRowOutlet, { static: true }]\n            }], _contentColumnDefs: [{\n                type: ContentChildren,\n                args: [CdkColumnDef, { descendants: true }]\n            }], _contentRowDefs: [{\n                type: ContentChildren,\n                args: [CdkRowDef, { descendants: true }]\n            }], _contentHeaderRowDefs: [{\n                type: ContentChildren,\n                args: [CdkHeaderRowDef, {\n                        descendants: true,\n                    }]\n            }], _contentFooterRowDefs: [{\n                type: ContentChildren,\n                args: [CdkFooterRowDef, {\n                        descendants: true,\n                    }]\n            }], _noDataRow: [{\n                type: ContentChild,\n                args: [CdkNoDataRow]\n            }] } });\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n    return array.concat(Array.from(set));\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass CdkTextColumn {\n    /** Column name that should be used to reference this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._name = name;\n        // With Ivy, inputs can be initialized before static query results are\n        // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n        this._syncColumnDefName();\n    }\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n        this._table = _table;\n        this._options = _options;\n        /** Alignment of the cell values. */\n        this.justify = 'start';\n        this._options = _options || {};\n    }\n    ngOnInit() {\n        this._syncColumnDefName();\n        if (this.headerText === undefined) {\n            this.headerText = this._createDefaultHeaderText();\n        }\n        if (!this.dataAccessor) {\n            this.dataAccessor =\n                this._options.defaultDataAccessor || ((data, name) => data[name]);\n        }\n        if (this._table) {\n            // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n            // since the columnDef will not pick up its content by the time the table finishes checking\n            // its content and initializing the rows.\n            this.columnDef.cell = this.cell;\n            this.columnDef.headerCell = this.headerCell;\n            this._table.addColumnDef(this.columnDef);\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getTableTextColumnMissingParentTableError();\n        }\n    }\n    ngOnDestroy() {\n        if (this._table) {\n            this._table.removeColumnDef(this.columnDef);\n        }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n        const name = this.name;\n        if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getTableTextColumnMissingNameError();\n        }\n        if (this._options && this._options.defaultHeaderTextTransform) {\n            return this._options.defaultHeaderTextTransform(name);\n        }\n        return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n        if (this.columnDef) {\n            this.columnDef.name = this.name;\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTextColumn, deps: [{ token: CdkTable, optional: true }, { token: TEXT_COLUMN_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: CdkTextColumn, selector: \"cdk-text-column\", inputs: { name: \"name\", headerText: \"headerText\", dataAccessor: \"dataAccessor\", justify: \"justify\" }, viewQueries: [{ propertyName: \"columnDef\", first: true, predicate: CdkColumnDef, descendants: true, static: true }, { propertyName: \"cell\", first: true, predicate: CdkCellDef, descendants: true, static: true }, { propertyName: \"headerCell\", first: true, predicate: CdkHeaderCellDef, descendants: true, static: true }], ngImport: i0, template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: CdkCellDef, selector: \"[cdkCellDef]\" }, { kind: \"directive\", type: CdkHeaderCellDef, selector: \"[cdkHeaderCellDef]\" }, { kind: \"directive\", type: CdkColumnDef, selector: \"[cdkColumnDef]\", inputs: [\"sticky\", \"cdkColumnDef\", \"stickyEnd\"] }, { kind: \"directive\", type: CdkCell, selector: \"cdk-cell, td[cdk-cell]\" }, { kind: \"directive\", type: CdkHeaderCell, selector: \"cdk-header-cell, th[cdk-header-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'cdk-text-column',\n                    template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }], ctorParameters: () => [{ type: CdkTable, decorators: [{\n                    type: Optional\n                }] }, { type: undefined, decorators: [{\n                    type: Optional\n                }, {\n                    type: Inject,\n                    args: [TEXT_COLUMN_OPTIONS]\n                }] }], propDecorators: { name: [{\n                type: Input\n            }], headerText: [{\n                type: Input\n            }], dataAccessor: [{\n                type: Input\n            }], justify: [{\n                type: Input\n            }], columnDef: [{\n                type: ViewChild,\n                args: [CdkColumnDef, { static: true }]\n            }], cell: [{\n                type: ViewChild,\n                args: [CdkCellDef, { static: true }]\n            }], headerCell: [{\n                type: ViewChild,\n                args: [CdkHeaderCellDef, { static: true }]\n            }] } });\n\nconst EXPORTED_DECLARATIONS = [\n    CdkTable,\n    CdkRowDef,\n    CdkCellDef,\n    CdkCellOutlet,\n    CdkHeaderCellDef,\n    CdkFooterCellDef,\n    CdkColumnDef,\n    CdkCell,\n    CdkRow,\n    CdkHeaderCell,\n    CdkFooterCell,\n    CdkHeaderRow,\n    CdkHeaderRowDef,\n    CdkFooterRow,\n    CdkFooterRowDef,\n    DataRowOutlet,\n    HeaderRowOutlet,\n    FooterRowOutlet,\n    CdkTextColumn,\n    CdkNoDataRow,\n    CdkRecycleRows,\n    NoDataRowOutlet,\n];\nclass CdkTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTableModule, declarations: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet], imports: [ScrollingModule], exports: [CdkTable,\n            CdkRowDef,\n            CdkCellDef,\n            CdkCellOutlet,\n            CdkHeaderCellDef,\n            CdkFooterCellDef,\n            CdkColumnDef,\n            CdkCell,\n            CdkRow,\n            CdkHeaderCell,\n            CdkFooterCell,\n            CdkHeaderRow,\n            CdkHeaderRowDef,\n            CdkFooterRow,\n            CdkFooterRowDef,\n            DataRowOutlet,\n            HeaderRowOutlet,\n            FooterRowOutlet,\n            CdkTextColumn,\n            CdkNoDataRow,\n            CdkRecycleRows,\n            NoDataRowOutlet] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTableModule, imports: [ScrollingModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: CdkTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: EXPORTED_DECLARATIONS,\n                    declarations: EXPORTED_DECLARATIONS,\n                    imports: [ScrollingModule],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-mdc-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        // After ngOnInit, the `CdkTable` has created and inserted the table sections (thead, tbody,\n        // tfoot). MDC requires the `mdc-data-table__content` class to be added to the body. Note that\n        // this only applies to native tables, because we don't wrap the content of flexbox-based ones.\n        if (this._isNativeHtmlTable) {\n            const tbody = this._elementRef.nativeElement.querySelector('tbody');\n            tbody.classList.add('mdc-data-table__content');\n        }\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { attributes: { \"ngSkipHydration\": \"\" }, properties: { \"class.mdc-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-mdc-table mdc-data-table__table\" }, providers: [\n            { provide: CdkTable, useExisting: MatTable },\n            { provide: CDK_TABLE, useExisting: MatTable },\n            { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n            // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n            //  is only included in the build if used.\n            { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n            // Prevent nested tables from seeing this table's StickyPositioningListener.\n            { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n        ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: `\n    <ng-content select=\"caption\"></ng-content>\n    <ng-content select=\"colgroup, col\"></ng-content>\n    <ng-container headerRowOutlet></ng-container>\n    <ng-container rowOutlet></ng-container>\n    <ng-container noDataRowOutlet></ng-container>\n    <ng-container footerRowOutlet></ng-container>\n  `, isInline: true, styles: [\".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"], dependencies: [{ kind: \"directive\", type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { kind: \"directive\", type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { kind: \"directive\", type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }, { kind: \"directive\", type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: `\n    <ng-content select=\"caption\"></ng-content>\n    <ng-content select=\"colgroup, col\"></ng-content>\n    <ng-container headerRowOutlet></ng-container>\n    <ng-container rowOutlet></ng-container>\n    <ng-container noDataRowOutlet></ng-container>\n    <ng-container footerRowOutlet></ng-container>\n  `, host: {\n                        'class': 'mat-mdc-table mdc-data-table__table',\n                        '[class.mdc-table-fixed-layout]': 'fixedLayout',\n                        'ngSkipHydration': '',\n                    }, providers: [\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\".mat-mdc-table-sticky{position:sticky !important}.mdc-data-table{-webkit-overflow-scrolling:touch;display:inline-flex;flex-direction:column;box-sizing:border-box;position:relative}.mdc-data-table__table-container{-webkit-overflow-scrolling:touch;overflow-x:auto;width:100%}.mdc-data-table__table{min-width:100%;border:0;white-space:nowrap;border-spacing:0;table-layout:fixed}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell,.mdc-data-table__cell[dir=rtl]{text-align:right}.mdc-data-table__cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__cell--numeric,.mdc-data-table__cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell{box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mdc-data-table__header-cell,.mdc-data-table__header-cell[dir=rtl]{text-align:right}.mdc-data-table__header-cell--numeric{text-align:right}[dir=rtl] .mdc-data-table__header-cell--numeric,.mdc-data-table__header-cell--numeric[dir=rtl]{text-align:left}.mdc-data-table__header-cell-wrapper{align-items:center;display:inline-flex;vertical-align:middle}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px 0 16px}.mdc-data-table__header-cell--checkbox,.mdc-data-table__cell--checkbox{padding-left:4px;padding-right:0}[dir=rtl] .mdc-data-table__header-cell--checkbox,[dir=rtl] .mdc-data-table__cell--checkbox,.mdc-data-table__header-cell--checkbox[dir=rtl],.mdc-data-table__cell--checkbox[dir=rtl]{padding-left:0;padding-right:4px}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"] }]\n        }] });\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n            { provide: CdkColumnDef, useExisting: MatColumnDef },\n            { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n        ], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-mdc-header-cell mdc-data-table__header-cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-mdc-header-cell mdc-data-table__header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { classAttribute: \"mat-mdc-footer-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-mdc-footer-cell mdc-data-table__cell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { classAttribute: \"mat-mdc-cell mdc-data-table__cell\" }, usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-mdc-cell mdc-data-table__cell',\n                    },\n                }]\n        }] });\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-header-row mdc-data-table__header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-header-row mdc-data-table__header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-footer-row mdc-data-table__row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-footer-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-mdc-row mdc-data-table__row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, dependencies: [{ kind: \"directive\", type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-mdc-row mdc-data-table__row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-mdc-no-data-row';\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive }); }\n    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"17.0.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, dependencies: [{ kind: \"directive\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { kind: \"directive\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { kind: \"directive\", type: MatCellDef, selector: \"[matCellDef]\" }, { kind: \"directive\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { kind: \"directive\", type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTableModule, declarations: [\n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn], imports: [MatCommonModule, CdkTableModule], exports: [MatCommonModule, \n            // Table\n            MatTable,\n            MatRecycleRows,\n            // Template defs\n            MatHeaderCellDef,\n            MatHeaderRowDef,\n            MatColumnDef,\n            MatCellDef,\n            MatRowDef,\n            MatFooterCellDef,\n            MatFooterRowDef,\n            // Cell directives\n            MatHeaderCell,\n            MatCell,\n            MatFooterCell,\n            // Row directives\n            MatHeaderRow,\n            MatRow,\n            MatFooterRow,\n            MatNoDataRow,\n            MatTextColumn] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTableModule, imports: [MatCommonModule, CdkTableModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"17.0.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, CdkTableModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the paginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the paginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterPredicate function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterPredicate.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided paginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        this._renderChangesSubscription?.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n"],"names":["i1","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","isDataSource","_DisposeViewRepeaterStrategy","DataSource","i2","i3","ScrollingModule","DOCUMENT","i0","InjectionToken","Directive","booleanAttribute","Inject","Optional","Input","ContentChild","Injectable","Component","ChangeDetectionStrategy","ViewEncapsulation","EmbeddedViewRef","EventEmitter","NgZone","Attribute","SkipSelf","Output","ViewChild","ContentChildren","NgModule","Subject","from","BehaviorSubject","isObservable","of","takeUntil","take","coerceBooleanProperty","_c0","_c1","CdkTextColumn_th_1_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵstyleProp","justify","ɵɵadvance","ɵɵtextInterpolate1","headerText","CdkTextColumn_td_2_Template","data_r2","$implicit","ctx_r1","dataAccessor","name","mixinHasStickyInput","base","sticky","_sticky","v","prevValue","_hasStickyChanged","hasStickyChanged","resetStickyChanged","constructor","args","CDK_TABLE","TEXT_COLUMN_OPTIONS","CdkCellDef","template","_","ɵfac","CdkCellDef_Factory","t","ɵɵdirectiveInject","TemplateRef","_2","ɵdir","ɵɵdefineDirective","type","selectors","ngDevMode","ɵsetClassMetadata","selector","CdkHeaderCellDef","CdkHeaderCellDef_Factory","CdkFooterCellDef","CdkFooterCellDef_Factory","CdkColumnDefBase","_CdkColumnDefBase","CdkColumnDef","_name","_setNameInput","stickyEnd","_stickyEnd","value","_table","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","replace","CdkColumnDef_Factory","contentQueries","CdkColumnDef_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","cell","first","headerCell","footerCell","inputs","features","ɵɵProvidersFeature","provide","useExisting","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","providers","undefined","decorators","transform","BaseCdkCell","columnDef","elementRef","nativeElement","classList","add","CdkHeaderCell","CdkHeaderCell_Factory","ElementRef","hostAttrs","host","CdkFooterCell","_elementRef","nodeType","tableRole","getAttribute","role","setAttribute","CdkFooterCell_Factory","CdkCell","CdkCell_Factory","_Schedule","tasks","endTasks","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_ngZone","_currentSchedule","_destroyed","schedule","task","_createScheduleIfNeeded","push","scheduleEnd","ngOnDestroy","next","complete","_getScheduleObservable","pipe","subscribe","length","isStable","Promise","resolve","onStable","_CoalescedStyleScheduler_Factory","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","CDK_ROW_TEMPLATE","BaseRowDef","_differs","ngOnChanges","changes","_columnsDiffer","columns","currentValue","find","create","diff","getColumnsDiff","extractCellTemplate","column","CdkHeaderRowDef","CdkFooterRowDef","BaseRowDef_Factory","IterableDiffers","ɵɵNgOnChangesFeature","CdkHeaderRowDefBase","_CdkHeaderRowDefBase","CdkHeaderRowDef_Factory","CdkFooterRowDefBase","_CdkFooterRowDefBase","CdkFooterRowDef_Factory","CdkRowDef","CdkRowDef_Factory","when","CdkCellOutlet","mostRecentCellOutlet","_viewContainer","CdkCellOutlet_Factory","ViewContainerRef","_3","CdkHeaderRow","CdkHeaderRow_Factory","ɵcmp","ɵɵdefineComponent","decls","vars","consts","CdkHeaderRow_Template","ɵɵelementContainer","dependencies","encapsulation","changeDetection","Default","None","CdkFooterRow","CdkFooterRow_Factory","CdkFooterRow_Template","CdkRow","CdkRow_Factory","CdkRow_Template","CdkNoDataRow","templateRef","_contentClassName","CdkNoDataRow_Factory","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","_cachedCellWidths","_borderCellCss","clearStickyPositioning","rows","stickyDirections","elementsToClear","row","ELEMENT_NODE","i","children","element","_removeStickyStyle","updateStickyColumns","stickyStartStates","stickyEndStates","recalculateCellWidths","some","state","stickyColumnsUpdated","sizes","stickyEndColumnsUpdated","firstRow","numCells","cellWidths","_getCellWidths","startPositions","_getStickyStartColumnPositions","endPositions","_getStickyEndColumnPositions","lastStickyStart","lastIndexOf","firstStickyEnd","indexOf","isRtl","start","end","_addStickyStyle","slice","map","width","index","reverse","stickRows","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","Array","height","getBoundingClientRect","borderedRowIndex","offset","isBorderedRowIndex","stickyHeaderRowsUpdated","offsets","elements","stickyFooterRowsUpdated","updateStickyFooterContainer","tableElement","tfoot","querySelector","dir","style","remove","hasDirection","zIndex","_getCalculatedZIndex","dirValue","isBorderElement","cssText","zIndexIncrements","top","bottom","left","right","firstRowCells","widths","positions","nextPosition","getTableUnknownColumnError","id","Error","getTableDuplicateColumnNameError","getTableMultipleDefaultRowDefsError","getTableMissingMatchingRowDefError","data","JSON","stringify","getTableMissingRowDefsError","getTableUnknownDataSourceError","getTableTextColumnMissingParentTableError","getTableTextColumnMissingNameError","STICKY_POSITIONING_LISTENER","CdkRecycleRows","CdkRecycleRows_Factory","useClass","DataRowOutlet","viewContainer","DataRowOutlet_Factory","HeaderRowOutlet","HeaderRowOutlet_Factory","FooterRowOutlet","FooterRowOutlet_Factory","NoDataRowOutlet","NoDataRowOutlet_Factory","CDK_TABLE_TEMPLATE","RowViewRef","CdkTable","trackBy","_trackByFn","fn","console","warn","dataSource","_dataSource","_switchDataSource","multiTemplateDataRows","_multiTemplateDataRows","_rowOutlet","_forceRenderDataRows","updateStickyColumnStyles","fixedLayout","_fixedLayout","_forceRecalculateCellWidths","_stickyColumnStylesNeedReset","_changeDetectorRef","_dir","_document","_platform","_viewRepeater","_viewportRuler","_stickyPositioningListener","_onDestroy","_columnDefsByName","Map","_customColumnDefs","Set","_customRowDefs","_customHeaderRowDefs","_customFooterRowDefs","_headerRowDefChanged","_footerRowDefChanged","_cachedRenderRowsMap","stickyCssClass","needsPositionStickyOnElement","_isShowingNoDataRow","contentChanged","viewChange","Number","MAX_VALUE","nodeName","ngOnInit","_setupStickyStyler","_applyNativeTableSections","_dataDiffer","_i","dataRow","dataIndex","change","ngAfterContentChecked","_cacheRowDefs","_cacheColumnDefs","_headerRowDefs","_footerRowDefs","_rowDefs","columnsChanged","_renderUpdatedColumns","rowDefsChanged","_forceRenderHeaderRows","_forceRenderFooterRows","_renderChangeSubscription","_observeRenderChanges","_checkStickyStates","_headerRowOutlet","_footerRowOutlet","forEach","def","clear","_defaultRowDef","disconnect","renderRows","_renderRows","_getAllRenderRows","_updateNoDataRow","applyChanges","record","_adjustedPreviousIndex","currentIndex","_getEmbeddedViewArgs","item","operation","context","_renderCellTemplateForItem","rowDef","_updateRowIndexContext","forEachIdentityChange","rowView","get","isInAngularZone","addColumnDef","removeColumnDef","delete","addRowDef","removeRowDef","addHeaderRowDef","headerRowDef","removeHeaderRowDef","addFooterRowDef","footerRowDef","removeFooterRowDef","setNoDataRow","noDataRow","_customNoDataRow","updateStickyHeaderRowStyles","headerRows","_getRenderedRows","thead","display","_stickyStyler","updateStickyFooterRowStyles","footerRows","dataRows","headerRow","_addStickyColumnStyles","footerRow","values","prevCachedRenderRows","_data","renderRowsForData","_getRenderRowsForData","has","set","WeakMap","j","renderRow","cache","rowDefs","_getRowDefs","cachedRenderRows","shift","columnDefs","mergeArrayAndSet","_getOwnDefs","_contentColumnDefs","_contentHeaderRowDefs","_contentFooterRowDefs","_contentRowDefs","defaultRowDefs","filter","columnsDiffReducer","acc","dataColumnsChanged","reduce","headerColumnsChanged","footerColumnsChanged","unsubscribe","dataStream","connect","isArray","_renderRow","columnName","rowOutlet","renderedRows","viewRef","rootNodes","outlet","view","createEmbeddedView","cellTemplate","_getCellTemplates","markForCheck","renderIndex","count","last","even","odd","columnId","documentFragment","createDocumentFragment","sections","tag","outlets","_noDataRowOutlet","section","createElement","appendChild","stickyCheckReducer","d","isBrowser","items","_noDataRow","shouldShow","container","rootNode","CdkTable_Factory","ChangeDetectorRef","ɵɵinjectAttribute","Directionality","Platform","ViewportRuler","CdkTable_ContentQueries","viewQuery","CdkTable_Query","ɵɵviewQuery","hostVars","hostBindings","CdkTable_HostBindings","ɵɵclassProp","outputs","exportAs","useValue","ngContentSelectors","CdkTable_Template","ɵɵprojectionDef","ɵɵprojection","styles","static","descendants","array","concat","CdkTextColumn","_syncColumnDefName","_options","_createDefaultHeaderText","defaultDataAccessor","defaultHeaderTextTransform","toUpperCase","CdkTextColumn_Factory","CdkTextColumn_Query","CdkTextColumn_Template","ɵɵelementContainerStart","ɵɵtemplate","ɵɵelementContainerEnd","EXPORTED_DECLARATIONS","CdkTableModule","CdkTableModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","exports","declarations","MatCommonModule","merge","combineLatest","_isNumberValue","MatTextColumn_th_1_Template","MatTextColumn_td_2_Template","MatRecycleRows","MatRecycleRows_Factory","MatTable","arguments","tbody","ɵMatTable_BaseFactory","MatTable_Factory","ɵɵgetInheritedFactory","MatTable_HostBindings","MatTable_Template","MatCellDef","ɵMatCellDef_BaseFactory","MatCellDef_Factory","MatHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatHeaderCellDef_Factory","MatFooterCellDef","ɵMatFooterCellDef_BaseFactory","MatFooterCellDef_Factory","MatColumnDef","ɵMatColumnDef_BaseFactory","MatColumnDef_Factory","MatHeaderCell","ɵMatHeaderCell_BaseFactory","MatHeaderCell_Factory","MatFooterCell","ɵMatFooterCell_BaseFactory","MatFooterCell_Factory","MatCell","ɵMatCell_BaseFactory","MatCell_Factory","ROW_TEMPLATE","MatHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","MatHeaderRowDef_Factory","MatFooterRowDef","ɵMatFooterRowDef_BaseFactory","MatFooterRowDef_Factory","MatRowDef","ɵMatRowDef_BaseFactory","MatRowDef_Factory","MatHeaderRow","ɵMatHeaderRow_BaseFactory","MatHeaderRow_Factory","MatHeaderRow_Template","MatFooterRow","ɵMatFooterRow_BaseFactory","MatFooterRow_Factory","MatFooterRow_Template","MatRow","ɵMatRow_BaseFactory","MatRow_Factory","MatRow_Template","MatNoDataRow","ɵMatNoDataRow_BaseFactory","MatNoDataRow_Factory","MatTextColumn","ɵMatTextColumn_BaseFactory","MatTextColumn_Factory","MatTextColumn_Template","MatTableModule","MatTableModule_Factory","MAX_SAFE_INTEGER","MatTableDataSource","_renderChangesSubscription","_filterData","_filter","sort","_sort","_updateChangeSubscription","paginator","_paginator","initialData","_renderData","_internalPageChanges","sortingDataAccessor","sortHeaderId","numberValue","sortData","active","a","b","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","Object","keys","currentTerm","key","toLowerCase","transformedFilter","trim","sortChange","initialized","pageChange","page","filteredData","orderedData","_orderData","paginatedData","_pageData","obj","_updatePaginator","startIndex","pageIndex","pageSize","filteredDataLength","then","lastPageIndex","Math","ceil","newPageIndex","min"],"sourceRoot":"webpack:///","x_google_ignoreList":[0,1]}