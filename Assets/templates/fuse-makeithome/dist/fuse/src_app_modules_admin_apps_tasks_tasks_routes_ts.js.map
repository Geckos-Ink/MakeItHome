{"version":3,"file":"src_app_modules_admin_apps_tasks_tasks_routes_ts.js","mappings":"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","sources":["./src/app/modules/admin/apps/tasks/details/details.component.ts","./src/app/modules/admin/apps/tasks/details/details.component.html","./src/app/modules/admin/apps/tasks/list/list.component.ts","./src/app/modules/admin/apps/tasks/list/list.component.html","./src/app/modules/admin/apps/tasks/tasks.component.ts","./src/app/modules/admin/apps/tasks/tasks.component.html","./src/app/modules/admin/apps/tasks/tasks.routes.ts","./src/app/modules/admin/apps/tasks/tasks.service.ts"],"sourcesContent":["import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { DatePipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\nimport { ActivatedRoute, NavigationEnd, Router, RouterLink } from '@angular/router';\nimport { FuseFindByKeyPipe } from '@fuse/pipes/find-by-key/find-by-key.pipe';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { TasksListComponent } from 'app/modules/admin/apps/tasks/list/list.component';\nimport { TasksService } from 'app/modules/admin/apps/tasks/tasks.service';\nimport { Tag, Task } from 'app/modules/admin/apps/tasks/tasks.types';\nimport { assign } from 'lodash-es';\nimport { DateTime } from 'luxon';\nimport { debounceTime, filter, Subject, takeUntil, tap } from 'rxjs';\n\n@Component({\n    selector       : 'tasks-details',\n    templateUrl    : './details.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [FormsModule, ReactiveFormsModule, MatButtonModule, NgIf, MatIconModule, MatMenuModule, RouterLink, MatDividerModule, MatFormFieldModule, MatInputModule, TextFieldModule, NgFor, MatRippleModule, MatCheckboxModule, NgClass, MatDatepickerModule, FuseFindByKeyPipe, DatePipe],\n})\nexport class TasksDetailsComponent implements OnInit, AfterViewInit, OnDestroy\n{\n    @ViewChild('tagsPanelOrigin') private _tagsPanelOrigin: ElementRef;\n    @ViewChild('tagsPanel') private _tagsPanel: TemplateRef<any>;\n    @ViewChild('titleField') private _titleField: ElementRef;\n\n    tags: Tag[];\n    tagsEditMode: boolean = false;\n    filteredTags: Tag[];\n    task: Task;\n    taskForm: UntypedFormGroup;\n    tasks: Task[];\n    private _tagsPanelOverlayRef: OverlayRef;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _formBuilder: UntypedFormBuilder,\n        private _fuseConfirmationService: FuseConfirmationService,\n        private _renderer2: Renderer2,\n        private _router: Router,\n        private _tasksListComponent: TasksListComponent,\n        private _tasksService: TasksService,\n        private _overlay: Overlay,\n        private _viewContainerRef: ViewContainerRef,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Open the drawer\n        this._tasksListComponent.matDrawer.open();\n\n        // Create the task form\n        this.taskForm = this._formBuilder.group({\n            id       : [''],\n            type     : [''],\n            title    : [''],\n            notes    : [''],\n            completed: [false],\n            dueDate  : [null],\n            priority : [0],\n            tags     : [[]],\n            order    : [0],\n        });\n\n        // Get the tags\n        this._tasksService.tags$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((tags: Tag[]) =>\n            {\n                this.tags = tags;\n                this.filteredTags = tags;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the tasks\n        this._tasksService.tasks$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((tasks: Task[]) =>\n            {\n                this.tasks = tasks;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the task\n        this._tasksService.task$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((task: Task) =>\n            {\n                // Open the drawer in case it is closed\n                this._tasksListComponent.matDrawer.open();\n\n                // Get the task\n                this.task = task;\n\n                // Patch values to the form from the task\n                this.taskForm.patchValue(task, {emitEvent: false});\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Update task when there is a value change on the task form\n        this.taskForm.valueChanges\n            .pipe(\n                tap((value) =>\n                {\n                    // Update the task object\n                    this.task = assign(this.task, value);\n                }),\n                debounceTime(300),\n                takeUntil(this._unsubscribeAll),\n            )\n            .subscribe((value) =>\n            {\n                // Update the task on the server\n                this._tasksService.updateTask(value.id, value).subscribe();\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Listen for NavigationEnd event to focus on the title field\n        this._router.events\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                filter(event => event instanceof NavigationEnd),\n            )\n            .subscribe(() =>\n            {\n                // Focus on the title field\n                this._titleField.nativeElement.focus();\n            });\n    }\n\n    /**\n     * After view init\n     */\n    ngAfterViewInit(): void\n    {\n        // Listen for matDrawer opened change\n        this._tasksListComponent.matDrawer.openedChange\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                filter(opened => opened),\n            )\n            .subscribe(() =>\n            {\n                // Focus on the title element\n                this._titleField.nativeElement.focus();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n\n        // Dispose the overlay\n        if ( this._tagsPanelOverlayRef )\n        {\n            this._tagsPanelOverlayRef.dispose();\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Close the drawer\n     */\n    closeDrawer(): Promise<MatDrawerToggleResult>\n    {\n        return this._tasksListComponent.matDrawer.close();\n    }\n\n    /**\n     * Toggle the completed status\n     */\n    toggleCompleted(): void\n    {\n        // Get the form control for 'completed'\n        const completedFormControl = this.taskForm.get('completed');\n\n        // Toggle the completed status\n        completedFormControl.setValue(!completedFormControl.value);\n    }\n\n    /**\n     * Open tags panel\n     */\n    openTagsPanel(): void\n    {\n        // Create the overlay\n        this._tagsPanelOverlayRef = this._overlay.create({\n            backdropClass   : '',\n            hasBackdrop     : true,\n            scrollStrategy  : this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._tagsPanelOrigin.nativeElement)\n                .withFlexibleDimensions(true)\n                .withViewportMargin(64)\n                .withLockedPosition(true)\n                .withPositions([\n                    {\n                        originX : 'start',\n                        originY : 'bottom',\n                        overlayX: 'start',\n                        overlayY: 'top',\n                    },\n                ]),\n        });\n\n        // Subscribe to the attachments observable\n        this._tagsPanelOverlayRef.attachments().subscribe(() =>\n        {\n            // Focus to the search input once the overlay has been attached\n            this._tagsPanelOverlayRef.overlayElement.querySelector('input').focus();\n        });\n\n        // Create a portal from the template\n        const templatePortal = new TemplatePortal(this._tagsPanel, this._viewContainerRef);\n\n        // Attach the portal to the overlay\n        this._tagsPanelOverlayRef.attach(templatePortal);\n\n        // Subscribe to the backdrop click\n        this._tagsPanelOverlayRef.backdropClick().subscribe(() =>\n        {\n            // If overlay exists and attached...\n            if ( this._tagsPanelOverlayRef && this._tagsPanelOverlayRef.hasAttached() )\n            {\n                // Detach it\n                this._tagsPanelOverlayRef.detach();\n\n                // Reset the tag filter\n                this.filteredTags = this.tags;\n\n                // Toggle the edit mode off\n                this.tagsEditMode = false;\n            }\n\n            // If template portal exists and attached...\n            if ( templatePortal && templatePortal.isAttached )\n            {\n                // Detach it\n                templatePortal.detach();\n            }\n        });\n    }\n\n    /**\n     * Toggle the tags edit mode\n     */\n    toggleTagsEditMode(): void\n    {\n        this.tagsEditMode = !this.tagsEditMode;\n    }\n\n    /**\n     * Filter tags\n     *\n     * @param event\n     */\n    filterTags(event): void\n    {\n        // Get the value\n        const value = event.target.value.toLowerCase();\n\n        // Filter the tags\n        this.filteredTags = this.tags.filter(tag => tag.title.toLowerCase().includes(value));\n    }\n\n    /**\n     * Filter tags input key down event\n     *\n     * @param event\n     */\n    filterTagsInputKeyDown(event): void\n    {\n        // Return if the pressed key is not 'Enter'\n        if ( event.key !== 'Enter' )\n        {\n            return;\n        }\n\n        // If there is no tag available...\n        if ( this.filteredTags.length === 0 )\n        {\n            // Create the tag\n            this.createTag(event.target.value);\n\n            // Clear the input\n            event.target.value = '';\n\n            // Return\n            return;\n        }\n\n        // If there is a tag...\n        const tag = this.filteredTags[0];\n        const isTagApplied = this.task.tags.find(id => id === tag.id);\n\n        // If the found tag is already applied to the task...\n        if ( isTagApplied )\n        {\n            // Remove the tag from the task\n            this.deleteTagFromTask(tag);\n        }\n        else\n        {\n            // Otherwise add the tag to the task\n            this.addTagToTask(tag);\n        }\n    }\n\n    /**\n     * Create a new tag\n     *\n     * @param title\n     */\n    createTag(title: string): void\n    {\n        const tag = {\n            title,\n        };\n\n        // Create tag on the server\n        this._tasksService.createTag(tag)\n            .subscribe((response) =>\n            {\n                // Add the tag to the task\n                this.addTagToTask(response);\n            });\n    }\n\n    /**\n     * Update the tag title\n     *\n     * @param tag\n     * @param event\n     */\n    updateTagTitle(tag: Tag, event): void\n    {\n        // Update the title on the tag\n        tag.title = event.target.value;\n\n        // Update the tag on the server\n        this._tasksService.updateTag(tag.id, tag)\n            .pipe(debounceTime(300))\n            .subscribe();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Delete the tag\n     *\n     * @param tag\n     */\n    deleteTag(tag: Tag): void\n    {\n        // Delete the tag from the server\n        this._tasksService.deleteTag(tag.id).subscribe();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Add tag to the task\n     *\n     * @param tag\n     */\n    addTagToTask(tag: Tag): void\n    {\n        // Add the tag\n        this.task.tags.unshift(tag.id);\n\n        // Update the task form\n        this.taskForm.get('tags').patchValue(this.task.tags);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Delete tag from the task\n     *\n     * @param tag\n     */\n    deleteTagFromTask(tag: Tag): void\n    {\n        // Remove the tag\n        this.task.tags.splice(this.task.tags.findIndex(item => item === tag.id), 1);\n\n        // Update the task form\n        this.taskForm.get('tags').patchValue(this.task.tags);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Toggle task tag\n     *\n     * @param tag\n     */\n    toggleTaskTag(tag: Tag): void\n    {\n        if ( this.task.tags.includes(tag.id) )\n        {\n            this.deleteTagFromTask(tag);\n        }\n        else\n        {\n            this.addTagToTask(tag);\n        }\n    }\n\n    /**\n     * Should the create tag button be visible\n     *\n     * @param inputValue\n     */\n    shouldShowCreateTagButton(inputValue: string): boolean\n    {\n        return !!!(inputValue === '' || this.tags.findIndex(tag => tag.title.toLowerCase() === inputValue.toLowerCase()) > -1);\n    }\n\n    /**\n     * Set the task priority\n     *\n     * @param priority\n     */\n    setTaskPriority(priority): void\n    {\n        // Set the value\n        this.taskForm.get('priority').setValue(priority);\n    }\n\n    /**\n     * Check if the task is overdue or not\n     */\n    isOverdue(): boolean\n    {\n        return DateTime.fromISO(this.task.dueDate).startOf('day') < DateTime.now().startOf('day');\n    }\n\n    /**\n     * Delete the task\n     */\n    deleteTask(): void\n    {\n        // Open the confirmation dialog\n        const confirmation = this._fuseConfirmationService.open({\n            title  : 'Delete task',\n            message: 'Are you sure you want to delete this task? This action cannot be undone!',\n            actions: {\n                confirm: {\n                    label: 'Delete',\n                },\n            },\n        });\n\n        // Subscribe to the confirmation dialog closed action\n        confirmation.afterClosed().subscribe((result) =>\n        {\n            // If the confirm button pressed...\n            if ( result === 'confirmed' )\n            {\n                // Get the current task's id\n                const id = this.task.id;\n\n                // Get the next/previous task's id\n                const currentTaskIndex = this.tasks.findIndex(item => item.id === id);\n                const nextTaskIndex = currentTaskIndex + ((currentTaskIndex === (this.tasks.length - 1)) ? -1 : 1);\n                const nextTaskId = (this.tasks.length === 1 && this.tasks[0].id === id) ? null : this.tasks[nextTaskIndex].id;\n\n                // Delete the task\n                this._tasksService.deleteTask(id)\n                    .subscribe((isDeleted) =>\n                    {\n                        // Return if the task wasn't deleted...\n                        if ( !isDeleted )\n                        {\n                            return;\n                        }\n\n                        // Navigate to the next task if available\n                        if ( nextTaskId )\n                        {\n                            this._router.navigate(['../', nextTaskId], {relativeTo: this._activatedRoute});\n                        }\n                        // Otherwise, navigate to the parent\n                        else\n                        {\n                            this._router.navigate(['../'], {relativeTo: this._activatedRoute});\n                        }\n                    });\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<style>\n    .mat-datepicker-popup {\n        scale:0.7;\n        translate: 0px 70px !important;\n    }\n</style>\n\n<div class=\"flex flex-auto\">\n\n    <form\n        class=\"flex flex-col flex-auto p-6 pt-10 sm:p-8 sm:pt-10 overflow-y-auto\"\n        [formGroup]=\"taskForm\">\n\n        <!-- Header -->\n        <div class=\"flex items-center justify-between -mt-3 -ml-4\">\n\n            <!-- Mark as ... button -->\n            <button\n                class=\"pr-4 pl-3.5\"\n                mat-button\n                (click)=\"toggleCompleted()\">\n\n                <!-- Mark as complete -->\n                <ng-container *ngIf=\"!taskForm.get('completed').value\">\n                    <div class=\"flex items-center justify-center\">\n                        <mat-icon [svgIcon]=\"'heroicons_outline:check-circle'\"></mat-icon>\n                        <span class=\"ml-2 font-semibold\">MARK AS COMPLETE</span>\n                    </div>\n                </ng-container>\n\n                <!-- Mark as incomplete -->\n                <ng-container *ngIf=\"taskForm.get('completed').value\">\n                    <div class=\"flex items-center justify-center\">\n                        <mat-icon\n                            class=\"text-primary\"\n                            [svgIcon]=\"'heroicons_outline:check-circle'\"></mat-icon>\n                        <span class=\"ml-2 font-semibold\">MARK AS INCOMPLETE</span>\n                    </div>\n                </ng-container>\n            </button>\n\n            <div class=\"flex items-center\">\n                <!-- More menu -->\n                <button\n                    mat-icon-button\n                    [matMenuTriggerFor]=\"moreMenu\">\n                    <mat-icon [svgIcon]=\"'heroicons_outline:ellipsis-vertical'\"></mat-icon>\n                </button>\n                <mat-menu #moreMenu=\"matMenu\">\n                    <button\n                        mat-menu-item\n                        (click)=\"deleteTask()\">\n                        <mat-icon [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                        <span>Delete {{task.type === 'task' ? 'task' : 'section'}}</span>\n                    </button>\n                </mat-menu>\n\n                <!-- Close button -->\n                <a\n                    mat-icon-button\n                    [routerLink]=\"['../']\">\n                    <mat-icon [svgIcon]=\"'heroicons_outline:x-mark'\"></mat-icon>\n                </a>\n            </div>\n\n        </div>\n\n        <mat-divider class=\"mt-6 mb-8\"></mat-divider>\n\n        <!-- Title -->\n        <div>\n            <mat-form-field\n                class=\"w-full\"\n                [subscriptSizing]=\"'dynamic'\">\n                <mat-label>{{task.type === 'task' ? 'Task title' : 'Section title'}}</mat-label>\n                <textarea\n                    matInput\n                    [formControlName]=\"'title'\"\n                    [spellcheck]=\"false\"\n                    cdkTextareaAutosize\n                    #titleField></textarea>\n            </mat-form-field>\n        </div>\n\n        <!-- Tags -->\n        <div class=\"mt-8\">\n            <div class=\"font-medium mb-1.5\">Tags</div>\n            <div class=\"flex flex-wrap items-center -m-1.5\">\n                <!-- Tags -->\n                <ng-container *ngIf=\"task.tags.length\">\n                    <ng-container *ngFor=\"let tag of (task.tags | fuseFindByKey:'id':tags); trackBy: trackByFn\">\n                        <div class=\"flex items-center justify-center px-4 m-1.5 rounded-full leading-9 text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                            <span class=\"text-md font-medium whitespace-nowrap\">{{tag.title}}</span>\n                        </div>\n                    </ng-container>\n                </ng-container>\n                <div\n                    class=\"flex items-center justify-center px-4 m-1.5 rounded-full leading-9 cursor-pointer text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\"\n                    (click)=\"openTagsPanel()\"\n                    #tagsPanelOrigin>\n\n                    <ng-container *ngIf=\"task.tags.length\">\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'heroicons_solid:pencil-square'\"></mat-icon>\n                        <span class=\"ml-1.5 text-md font-medium whitespace-nowrap\">Edit</span>\n                    </ng-container>\n\n                    <ng-container *ngIf=\"!task.tags.length\">\n                        <mat-icon\n                            class=\"icon-size-5\"\n                            [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                        <span class=\"ml-1.5 text-md font-medium whitespace-nowrap\">Add</span>\n                    </ng-container>\n\n                    <!-- Tags panel -->\n                    <ng-template #tagsPanel>\n                        <div class=\"w-60 rounded border shadow-md bg-card\">\n                            <!-- Tags panel header -->\n                            <div class=\"flex items-center m-3 mr-2\">\n                                <div class=\"flex items-center\">\n                                    <mat-icon\n                                        class=\"icon-size-5\"\n                                        [svgIcon]=\"'heroicons_solid:magnifying-glass'\"></mat-icon>\n                                    <div class=\"ml-2\">\n                                        <input\n                                            class=\"w-full min-w-0 py-1 border-0\"\n                                            type=\"text\"\n                                            placeholder=\"Enter tag name\"\n                                            (input)=\"filterTags($event)\"\n                                            (keydown)=\"filterTagsInputKeyDown($event)\"\n                                            [maxLength]=\"30\"\n                                            #newTagInput>\n                                    </div>\n                                </div>\n                                <button\n                                    class=\"ml-1\"\n                                    mat-icon-button\n                                    (click)=\"toggleTagsEditMode()\">\n                                    <mat-icon\n                                        *ngIf=\"!tagsEditMode\"\n                                        class=\"icon-size-5\"\n                                        [svgIcon]=\"'heroicons_solid:pencil-square'\"></mat-icon>\n                                    <mat-icon\n                                        *ngIf=\"tagsEditMode\"\n                                        class=\"icon-size-5\"\n                                        [svgIcon]=\"'heroicons_solid:check'\"></mat-icon>\n                                </button>\n                            </div>\n                            <div\n                                class=\"flex flex-col max-h-64 py-2 border-t overflow-y-auto\">\n                                <!-- Tags -->\n                                <ng-container *ngIf=\"!tagsEditMode\">\n                                    <ng-container *ngFor=\"let tag of filteredTags; trackBy: trackByFn\">\n                                        <div\n                                            class=\"flex items-center h-10 min-h-10 pl-1 pr-4 cursor-pointer hover:bg-hover\"\n                                            (click)=\"toggleTaskTag(tag)\"\n                                            matRipple>\n                                            <mat-checkbox\n                                                class=\"flex items-center h-10 min-h-10 pointer-events-none\"\n                                                [checked]=\"task.tags.includes(tag.id)\"\n                                                [color]=\"'primary'\"\n                                                [disableRipple]=\"true\">\n                                            </mat-checkbox>\n                                            <div class=\"ml-1\">{{tag.title}}</div>\n                                        </div>\n                                    </ng-container>\n                                </ng-container>\n                                <!-- Tags editing -->\n                                <ng-container *ngIf=\"tagsEditMode\">\n                                    <div class=\"py-2 space-y-2\">\n                                        <ng-container *ngFor=\"let tag of filteredTags; trackBy: trackByFn\">\n                                            <div class=\"flex items-center\">\n                                                <mat-form-field\n                                                    class=\"fuse-mat-dense w-full mx-4\"\n                                                    [subscriptSizing]=\"'dynamic'\">\n                                                    <input\n                                                        matInput\n                                                        [value]=\"tag.title\"\n                                                        (input)=\"updateTagTitle(tag, $event)\">\n                                                    <button\n                                                        mat-icon-button\n                                                        (click)=\"deleteTag(tag)\"\n                                                        matSuffix>\n                                                        <mat-icon\n                                                            class=\"icon-size-5 ml-2\"\n                                                            [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                                                    </button>\n                                                </mat-form-field>\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                </ng-container>\n                                <!-- Create tag -->\n                                <div\n                                    class=\"flex items-center h-10 min-h-10 -ml-0.5 pl-4 pr-3 leading-none cursor-pointer hover:bg-hover\"\n                                    *ngIf=\"shouldShowCreateTagButton(newTagInput.value)\"\n                                    (click)=\"createTag(newTagInput.value); newTagInput.value = ''\"\n                                    matRipple>\n                                    <mat-icon\n                                        class=\"mr-2 icon-size-5\"\n                                        [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                                    <div class=\"break-all\">Create \"<b>{{newTagInput.value}}</b>\"</div>\n                                </div>\n                            </div>\n                        </div>\n                    </ng-template>\n                </div>\n            </div>\n        </div>\n\n        <!-- Priority and Due date -->\n        <div class=\"flex flex-wrap items-center mt-8\">\n\n            <!-- Priority -->\n            <div>\n                <div class=\"font-medium\">Priority</div>\n                <div\n                    class=\"flex items-center mt-1.5 px-4 leading-9 rounded-full cursor-pointer\"\n                    [ngClass]=\"{'text-green-800 bg-green-200 dark:text-green-100 dark:bg-green-500': task.priority === 0,\n                                'text-gray-800 bg-gray-200 dark:text-gray-100 dark:bg-gray-500': task.priority === 1,\n                                'text-red-800 bg-red-200 dark:text-red-100 dark:bg-red-500': task.priority === 2}\"\n                    [matMenuTriggerFor]=\"priorityMenu\">\n\n                    <!-- Low -->\n                    <ng-container *ngIf=\"task.priority === 0\">\n                        <mat-icon\n                            class=\"icon-size-4 text-current\"\n                            [svgIcon]=\"'heroicons_mini:arrow-long-down'\"></mat-icon>\n                        <span class=\"ml-2 mr-1 text-md font-medium\">Low</span>\n                    </ng-container>\n\n                    <!-- Normal -->\n                    <ng-container *ngIf=\"task.priority === 1\">\n                        <mat-icon\n                            class=\"icon-size-4 text-current\"\n                            [svgIcon]=\"'heroicons_solid:minus'\"></mat-icon>\n                        <span class=\"ml-2 mr-1 text-md font-medium\">Normal</span>\n                    </ng-container>\n\n                    <!-- High -->\n                    <ng-container *ngIf=\"task.priority === 2\">\n                        <mat-icon\n                            class=\"icon-size-4 text-current\"\n                            [svgIcon]=\"'heroicons_mini:arrow-long-up'\"></mat-icon>\n                        <span class=\"ml-2 mr-1 text-md font-medium\">High</span>\n                    </ng-container>\n                </div>\n                <mat-menu #priorityMenu=\"matMenu\">\n                    <!-- Low -->\n                    <button\n                        [ngClass]=\"{'bg-hover': task.priority === 0}\"\n                        mat-menu-item\n                        (click)=\"setTaskPriority(0)\">\n                        <span class=\"inline-flex items-center justify-between w-full min-w-30 leading-5\">\n                            <span class=\"font-medium\">Low</span>\n                            <mat-icon\n                                class=\"mr-0 icon-size-4 text-green-600 dark:text-green-500\"\n                                [svgIcon]=\"'heroicons_mini:arrow-long-down'\"></mat-icon>\n                        </span>\n                    </button>\n\n                    <!-- Normal -->\n                    <button\n                        [ngClass]=\"{'bg-hover': task.priority === 1}\"\n                        mat-menu-item\n                        (click)=\"setTaskPriority(1)\">\n                        <span class=\"inline-flex items-center justify-between w-full min-w-30 leading-5\">\n                            <span class=\"font-medium\">Normal</span>\n                            <mat-icon\n                                class=\"mr-0 icon-size-4 text-gray-600 dark:text-gray-500\"\n                                [svgIcon]=\"'heroicons_solid:minus'\"></mat-icon>\n                        </span>\n                    </button>\n\n                    <!-- High -->\n                    <button\n                        [ngClass]=\"{'bg-hover': task.priority === 2}\"\n                        mat-menu-item\n                        (click)=\"setTaskPriority(2)\">\n                        <span class=\"inline-flex items-center justify-between w-full min-w-30 leading-5\">\n                            <span class=\"font-medium\">High</span>\n                            <mat-icon\n                                class=\"mr-0 icon-size-4 text-red-600 dark:text-red-500\"\n                                [svgIcon]=\"'heroicons_mini:arrow-long-up'\"></mat-icon>\n                        </span>\n                    </button>\n                </mat-menu>\n            </div>\n\n            <!-- Due date -->\n            <div class=\"ml-6\">\n                <div class=\"font-medium\">Due date</div>\n                <div\n                    class=\"relative flex items-center mt-1.5 px-4 leading-9 rounded-full cursor-pointer\"\n                    [ngClass]=\"{'text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700': !task.dueDate,\n                                'text-green-800 bg-green-200 dark:text-green-100 dark:bg-green-500': task.dueDate && !isOverdue(),\n                                'text-red-800 bg-red-200 dark:text-red-100 dark:bg-red-500': task.dueDate && isOverdue()}\"\n                    (click)=\"dueDatePicker.open()\">\n                    <mat-icon\n                        class=\"icon-size-5 text-current\"\n                        [svgIcon]=\"'heroicons_solid:calendar'\"></mat-icon>\n                    <span class=\"ml-2 text-md font-medium\">\n                        <ng-container *ngIf=\"task.dueDate\">{{task.dueDate | date:'longDate'}}</ng-container>\n                        <ng-container *ngIf=\"!task.dueDate\">Not set</ng-container>\n                    </span>\n                    <mat-form-field\n                        class=\"fuse-mat-dense invisible absolute inset-0 -mt-2.5 opacity-0 pointer-events-none\"\n                        [subscriptSizing]=\"'dynamic'\">\n                        <input\n                            matInput\n                            [formControlName]=\"'dueDate'\"\n                            [matDatepicker]=\"dueDatePicker\">\n                        <mat-datepicker #dueDatePicker>\n                            <mat-datepicker-actions>\n                                <button\n                                    mat-button\n                                    (click)=\"taskForm.get('dueDate').setValue(null)\"\n                                    matDatepickerCancel>Clear\n                                </button>\n                                <button\n                                    class=\"\"\n                                    mat-flat-button\n                                    [color]=\"'primary'\"\n                                    matDatepickerApply>Select\n                                </button>\n                            </mat-datepicker-actions>\n                        </mat-datepicker>\n                    </mat-form-field>\n                </div>\n            </div>\n\n        </div>\n\n        <!-- Notes -->\n        <div class=\"mt-8\">\n            <mat-form-field\n                class=\"w-full\"\n                [subscriptSizing]=\"'dynamic'\">\n                <mat-label>Notes</mat-label>\n                <textarea\n                    matInput\n                    [formControlName]=\"'notes'\"\n                    [spellcheck]=\"false\"\n                    cdkTextareaAutosize></textarea>\n            </mat-form-field>\n        </div>\n\n    </form>\n\n</div>\n","import { CdkDrag, CdkDragDrop, CdkDragHandle, CdkDragPreview, CdkDropList, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { DatePipe, DOCUMENT, NgClass, NgFor, NgIf, TitleCasePipe } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDrawer, MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ActivatedRoute, Router, RouterLink, RouterOutlet } from '@angular/router';\nimport { FuseNavigationService, FuseVerticalNavigationComponent } from '@fuse/components/navigation';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { TasksService } from 'app/modules/admin/apps/tasks/tasks.service';\nimport { Tag, Task } from 'app/modules/admin/apps/tasks/tasks.types';\nimport { filter, fromEvent, Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'tasks-list',\n    templateUrl    : './list.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatSidenavModule, RouterOutlet, NgIf, MatButtonModule, MatTooltipModule, MatIconModule, CdkDropList, NgFor, CdkDrag, NgClass, CdkDragPreview, CdkDragHandle, RouterLink, TitleCasePipe, DatePipe],\n})\nexport class TasksListComponent implements OnInit, OnDestroy\n{\n    @ViewChild('matDrawer', {static: true}) matDrawer: MatDrawer;\n\n    drawerMode: 'side' | 'over';\n    selectedTask: Task;\n    tags: Tag[];\n    tasks: Task[];\n    tasksCount: any = {\n        completed : 0,\n        incomplete: 0,\n        total     : 0,\n    };\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _changeDetectorRef: ChangeDetectorRef,\n        @Inject(DOCUMENT) private _document: any,\n        private _router: Router,\n        private _tasksService: TasksService,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n        private _fuseNavigationService: FuseNavigationService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the tags\n        this._tasksService.tags$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((tags: Tag[]) =>\n            {\n                this.tags = tags;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the tasks\n        this._tasksService.tasks$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((tasks: Task[]) =>\n            {\n                this.tasks = tasks;\n\n                // Update the counts\n                this.tasksCount.total = this.tasks.filter(task => task.type === 'task').length;\n                this.tasksCount.completed = this.tasks.filter(task => task.type === 'task' && task.completed).length;\n                this.tasksCount.incomplete = this.tasksCount.total - this.tasksCount.completed;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n\n                // Update the count on the navigation\n                setTimeout(() =>\n                {\n                    // Get the component -> navigation data -> item\n                    const mainNavigationComponent = this._fuseNavigationService.getComponent<FuseVerticalNavigationComponent>('mainNavigation');\n\n                    // If the main navigation component exists...\n                    if ( mainNavigationComponent )\n                    {\n                        const mainNavigation = mainNavigationComponent.navigation;\n                        const menuItem = this._fuseNavigationService.getItem('apps.tasks', mainNavigation);\n\n                        // Update the subtitle of the item\n                        menuItem.subtitle = this.tasksCount.incomplete + ' remaining tasks';\n\n                        // Refresh the navigation\n                        mainNavigationComponent.refresh();\n                    }\n                });\n            });\n\n        // Get the task\n        this._tasksService.task$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((task: Task) =>\n            {\n                this.selectedTask = task;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Subscribe to media query change\n        this._fuseMediaWatcherService.onMediaQueryChange$('(min-width: 1440px)')\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((state) =>\n            {\n                // Calculate the drawer mode\n                this.drawerMode = state.matches ? 'side' : 'over';\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Listen for shortcuts\n        fromEvent(this._document, 'keydown')\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                filter<KeyboardEvent>(event =>\n                    (event.ctrlKey === true || event.metaKey) // Ctrl or Cmd\n                    && (event.key === '/' || event.key === '.'), // '/' or '.' key\n                ),\n            )\n            .subscribe((event: KeyboardEvent) =>\n            {\n                // If the '/' pressed\n                if ( event.key === '/' )\n                {\n                    this.createTask('task');\n                }\n\n                // If the '.' pressed\n                if ( event.key === '.' )\n                {\n                    this.createTask('section');\n                }\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On backdrop clicked\n     */\n    onBackdropClicked(): void\n    {\n        // Go back to the list\n        this._router.navigate(['./'], {relativeTo: this._activatedRoute});\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create task\n     *\n     * @param type\n     */\n    createTask(type: 'task' | 'section'): void\n    {\n        // Create the task\n        this._tasksService.createTask(type).subscribe((newTask) =>\n        {\n            // Go to the new task\n            this._router.navigate(['./', newTask.id], {relativeTo: this._activatedRoute});\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * Toggle the completed status\n     * of the given task\n     *\n     * @param task\n     */\n    toggleCompleted(task: Task): void\n    {\n        // Toggle the completed status\n        task.completed = !task.completed;\n\n        // Update the task on the server\n        this._tasksService.updateTask(task.id, task).subscribe();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Task dropped\n     *\n     * @param event\n     */\n    dropped(event: CdkDragDrop<Task[]>): void\n    {\n        // Move the item in the array\n        moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n\n        // Save the new order\n        this._tasksService.updateTasksOrders(event.container.data).subscribe();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\n\n    <mat-drawer-container\n        class=\"flex-auto h-full bg-card dark:bg-transparent\"\n        (backdropClick)=\"onBackdropClicked()\">\n\n        <!-- Drawer -->\n        <mat-drawer\n            class=\"w-full sm:w-128 dark:bg-gray-900\"\n            [mode]=\"drawerMode\"\n            [opened]=\"false\"\n            [position]=\"'end'\"\n            [disableClose]=\"true\"\n            #matDrawer>\n            <router-outlet></router-outlet>\n        </mat-drawer>\n\n        <mat-drawer-content class=\"flex flex-col\">\n\n            <!-- Main -->\n            <div class=\"flex flex-col flex-auto\">\n\n                <!-- Header -->\n                <div class=\"flex flex-col sm:flex-row items-start sm:items-center sm:justify-between py-8 px-6 md:px-8\">\n                    <!-- Title -->\n                    <div>\n                        <div class=\"text-4xl font-extrabold tracking-tight leading-none\">Tasks</div>\n                        <div class=\"ml-0.5 font-medium text-secondary\">\n                            <span *ngIf=\"tasksCount.incomplete === 0\">All tasks completed!</span>\n                            <span *ngIf=\"tasksCount.incomplete !== 0\">{{tasksCount.incomplete}} remaining tasks</span>\n                        </div>\n                    </div>\n                    <!-- Actions -->\n                    <div class=\"mt-4 sm:mt-0\">\n                        <!-- Add section button -->\n                        <button\n                            mat-flat-button\n                            [color]=\"'accent'\"\n                            (click)=\"createTask('section')\"\n                            [matTooltip]=\"'Shortcut: Ctrl + .'\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n                            <span class=\"ml-2 mr-1\">Add Section</span>\n                        </button>\n                        <!-- Add task button -->\n                        <button\n                            class=\"ml-3\"\n                            mat-flat-button\n                            [color]=\"'primary'\"\n                            (click)=\"createTask('task')\"\n                            [matTooltip]=\"'Shortcut: Ctrl + /'\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n                            <span class=\"ml-2 mr-1\">Add Task</span>\n                        </button>\n                    </div>\n                </div>\n\n                <!-- Tasks list -->\n                <ng-container *ngIf=\"tasks && tasks.length > 0; else noTasks\">\n                    <div\n                        class=\"divide-y\"\n                        cdkDropList\n                        [cdkDropListData]=\"tasks\"\n                        (cdkDropListDropped)=\"dropped($event)\">\n\n                        <!-- Task -->\n                        <ng-container *ngFor=\"let task of tasks; let first = first; trackBy: trackByFn\">\n                            <div\n                                [id]=\"'task-' + task.id\"\n                                class=\"group w-full select-none hover:bg-gray-100 dark:hover:bg-hover\"\n                                [ngClass]=\"{'h-12 text-lg font-semibold bg-gray-50 dark:bg-transparent': task.type === 'section',\n                                            'h-16': task.type === 'task',\n                                            'text-hint': task.completed}\"\n                                [class.border-t]=\"first\"\n                                cdkDrag\n                                [cdkDragLockAxis]=\"'y'\">\n\n                                <!-- Drag preview -->\n                                <div\n                                    class=\"flex flex-0 w-0 h-0\"\n                                    *cdkDragPreview></div>\n\n                                <!-- Task content -->\n                                <div class=\"relative flex items-center h-full pl-10\">\n\n                                    <!-- Selected indicator -->\n                                    <ng-container *ngIf=\"selectedTask && selectedTask.id === task.id\">\n                                        <div class=\"z-10 absolute -top-px right-0 -bottom-px flex flex-0 w-1 bg-primary\"></div>\n                                    </ng-container>\n\n                                    <!-- Drag handle -->\n                                    <div\n                                        class=\"md:hidden absolute flex items-center justify-center inset-y-0 left-0 w-8 cursor-move md:group-hover:flex\"\n                                        cdkDragHandle>\n                                        <mat-icon\n                                            class=\"icon-size-5 text-hint\"\n                                            [svgIcon]=\"'heroicons_solid:bars-3'\"></mat-icon>\n                                    </div>\n\n                                    <!-- Complete task button -->\n                                    <button\n                                        class=\"mr-2 -ml-2.5 leading-none\"\n                                        *ngIf=\"task.type === 'task'\"\n                                        (click)=\"toggleCompleted(task)\"\n                                        mat-icon-button>\n                                        <ng-container *ngIf=\"task.completed\">\n                                            <mat-icon\n                                                class=\"text-primary\"\n                                                [svgIcon]=\"'heroicons_outline:check-circle'\"></mat-icon>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!task.completed\">\n                                            <mat-icon\n                                                class=\"text-hint\"\n                                                [svgIcon]=\"'heroicons_outline:check-circle'\"></mat-icon>\n                                        </ng-container>\n                                    </button>\n\n                                    <!-- Task link -->\n                                    <a\n                                        class=\"flex flex-auto items-center min-w-0 h-full pr-7\"\n                                        [routerLink]=\"[task.id]\">\n                                        <!-- Title & Placeholder -->\n                                        <div class=\"flex-auto mr-2 truncate\">\n                                            <ng-container *ngIf=\"task.title\">\n                                                <span>{{task.title}}</span>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"!task.title\">\n                                                <span class=\"select-none text-hint\">{{task.type | titlecase}} title</span>\n                                            </ng-container>\n                                        </div>\n                                        <!-- Priority -->\n                                        <ng-container *ngIf=\"task.type === 'task'\">\n                                            <div class=\"w-4 h-4 mr-3\">\n                                                <!-- Low -->\n                                                <mat-icon\n                                                    class=\"icon-size-4 text-green-600 dark:text-green-400\"\n                                                    *ngIf=\"task.priority === 0\"\n                                                    [svgIcon]=\"'heroicons_mini:arrow-long-down'\"\n                                                    [title]=\"'Low'\"></mat-icon>\n                                                <!-- High -->\n                                                <mat-icon\n                                                    class=\"icon-size-4 text-red-600 dark:text-red-400\"\n                                                    *ngIf=\"task.priority === 2\"\n                                                    [svgIcon]=\"'heroicons_mini:arrow-long-up'\"\n                                                    [title]=\"'High'\"></mat-icon>\n                                            </div>\n                                        </ng-container>\n                                        <!-- Due date -->\n                                        <div\n                                            class=\"text-sm whitespace-nowrap text-secondary\"\n                                            *ngIf=\"task.type === 'task'\">\n                                            {{task.dueDate | date:'LLL dd'}}\n                                        </div>\n                                    </a>\n                                </div>\n                            </div>\n                        </ng-container>\n                    </div>\n\n                </ng-container>\n\n                <ng-template #noTasks>\n                    <div class=\"flex flex-auto flex-col items-center justify-center bg-gray-100 dark:bg-transparent\">\n                        <mat-icon\n                            class=\"icon-size-24\"\n                            [svgIcon]=\"'heroicons_outline:clipboard-document-list'\"></mat-icon>\n                        <div class=\"mt-4 text-2xl font-semibold tracking-tight text-secondary\">Add a task to start planning!</div>\n                    </div>\n                </ng-template>\n\n            </div>\n\n        </mat-drawer-content>\n\n    </mat-drawer-container>\n\n</div>\n","import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n    selector       : 'tasks',\n    templateUrl    : './tasks.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [RouterOutlet],\n})\nexport class TasksComponent\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<router-outlet></router-outlet>\n","import { inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, Routes } from '@angular/router';\nimport { TasksDetailsComponent } from 'app/modules/admin/apps/tasks/details/details.component';\nimport { TasksListComponent } from 'app/modules/admin/apps/tasks/list/list.component';\nimport { TasksComponent } from 'app/modules/admin/apps/tasks/tasks.component';\nimport { TasksService } from 'app/modules/admin/apps/tasks/tasks.service';\nimport { catchError, throwError } from 'rxjs';\n\n/**\n * Task resolver\n *\n * @param route\n * @param state\n */\nconst taskResolver = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\n{\n    const tasksService = inject(TasksService);\n    const router = inject(Router);\n\n    return tasksService.getTaskById(route.paramMap.get('id'))\n        .pipe(\n            // Error here means the requested task is not available\n            catchError((error) =>\n            {\n                // Log the error\n                console.error(error);\n\n                // Get the parent url\n                const parentUrl = state.url.split('/').slice(0, -1).join('/');\n\n                // Navigate to there\n                router.navigateByUrl(parentUrl);\n\n                // Throw an error\n                return throwError(error);\n            }),\n        );\n};\n\n/**\n * Can deactivate tasks details\n *\n * @param component\n * @param currentRoute\n * @param currentState\n * @param nextState\n */\nconst canDeactivateTasksDetails = (\n    component: TasksDetailsComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot) =>\n{\n    // Get the next route\n    let nextRoute: ActivatedRouteSnapshot = nextState.root;\n    while ( nextRoute.firstChild )\n    {\n        nextRoute = nextRoute.firstChild;\n    }\n\n    // If the next state doesn't contain '/tasks'\n    // it means we are navigating away from the\n    // tasks app\n    if ( !nextState.url.includes('/tasks') )\n    {\n        // Let it navigate\n        return true;\n    }\n\n    // If we are navigating to another task...\n    if ( nextRoute.paramMap.get('id') )\n    {\n        // Just navigate\n        return true;\n    }\n\n    // Otherwise, close the drawer first, and then navigate\n    return component.closeDrawer().then(() => true);\n};\n\nexport default [\n    {\n        path     : '',\n        component: TasksComponent,\n        resolve  : {\n            tags: () => inject(TasksService).getTags(),\n        },\n        children : [\n            {\n                path     : '',\n                component: TasksListComponent,\n                resolve  : {\n                    tasks: () => inject(TasksService).getTasks(),\n                },\n                children : [\n                    {\n                        path         : ':id',\n                        component    : TasksDetailsComponent,\n                        resolve      : {\n                            task: taskResolver,\n                        },\n                        canDeactivate: [canDeactivateTasksDetails],\n                    },\n                ],\n            },\n        ],\n    },\n] as Routes;\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Tag, Task } from 'app/modules/admin/apps/tasks/tasks.types';\nimport { BehaviorSubject, filter, map, Observable, of, switchMap, take, tap, throwError } from 'rxjs';\n\nimport { FuseMockApiUtils } from '@fuse/lib/mock-api/mock-api.utils';\nimport { assign, cloneDeep } from 'lodash-es';\n\n@Injectable({providedIn: 'root'})\nexport class TasksService\n{\n    // Private\n    private _tags: BehaviorSubject<Tag[] | null> = new BehaviorSubject(null);\n    private _task: BehaviorSubject<Task | null> = new BehaviorSubject(null);\n    private _tasks: BehaviorSubject<Task[] | null> = new BehaviorSubject(null);\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for tags\n     */\n    get tags$(): Observable<Tag[]>\n    {\n        return this._tags.asObservable();\n    }\n\n    /**\n     * Getter for task\n     */\n    get task$(): Observable<Task>\n    {\n        return this._task.asObservable();\n    }\n\n    /**\n     * Getter for tasks\n     */\n    get tasks$(): Observable<Task[]>\n    {\n        return this._tasks.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get tags\n     */\n    getTags(): Observable<Tag[]>\n    {\n        return this._httpClient.get<Tag[]>('api/apps/tasks/tags').pipe(\n            tap((response: any) =>\n            {\n                this._tags.next(response);\n            }),\n        );\n    }\n\n    updateTags(){\n        let tags = this._tags.value\n\n        return this._httpClient.post<Tag[]>('api/apps/tasks/tags', tags).pipe(\n            tap((response: any) =>\n            {\n                this._tags.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Crate tag\n     *\n     * @param tag\n     */\n    createTag(tag: Tag): Observable<Tag>\n    {\n        let tags = this._tags.value || []\n\n        tag.id = FuseMockApiUtils.guid()\n\n        tags = [...tags, tag]\n\n        // Update the tags with the new tag\n        this._tags.next(tags);\n\n        this.updateTags().subscribe();\n\n        // Return new tag from observable\n        let resp = new BehaviorSubject<Tag>(tag)\n        return resp.asObservable()\n    }\n\n    /**\n     * Update the tag\n     *\n     * @param id\n     * @param tag\n     */\n    updateTag(id: string, tag: Tag): Observable<Tag>\n    {\n        let tags = this._tags.value \n\n        // Find the index of the updated tag\n        const index = tags.findIndex(item => item.id === id);\n\n        // Update the tag\n        tags[index] = tag;\n\n        // Update the tags\n        this._tags.next(tags);\n\n        this.updateTags().subscribe()\n\n        let resp = new BehaviorSubject<Tag>(tag)\n        return resp.asObservable()\n    }\n\n    /**\n     * Delete the tag\n     *\n     * @param id\n     */\n    deleteTag(id: string): Observable<boolean>\n    {\n        let tags = this._tags.value \n        let tasks = this._tasks.value\n\n        // Find the index of the deleted tag\n        const index = tags.findIndex(item => item.id === id);\n\n        // Delete the tag\n        tags.splice(index, 1);\n\n        // Update the tags\n        this._tags.next(tags);\n\n        // Iterate through the tasks\n        tasks.forEach((task) =>\n        {\n            const tagIndex = task.tags.findIndex(tag => tag === id);\n\n            // If the task has a tag, remove it\n            if ( tagIndex > -1 )\n            {\n                task.tags.splice(tagIndex, 1);\n                this._tasks.next(tasks)\n                this.updateTasks().subscribe();                \n            }\n        });  \n\n        this.updateTags().subscribe();\n        \n        let resp = new BehaviorSubject<boolean>(true)\n        return resp.asObservable()\n    }\n\n    /**\n     * Get tasks\n     */\n    getTasks(): Observable<Task[]>\n    {\n        return this._httpClient.get<Task[]>('api/apps/tasks').pipe(\n            tap((response) =>\n            {\n                this._tasks.next(response);\n            }),\n        );\n    }\n\n    /**\n     * Update tasks orders\n     *\n     * @param tasks\n     */\n    updateTasksOrders(tasks: Task[]): Observable<Task[]>\n    {\n        // Go through the tasks\n        this._tasks.value.forEach((task) =>\n        {\n            // Find this task's index within the tasks array that comes with the request\n            // and assign that index as the new order number for the task\n            task.order = tasks.findIndex((item: any) => item.id === task.id);\n        });\n\n        // Clone the tasks\n        this._tasks.next(tasks)\n\n        return this._httpClient.patch<Task[]>('api/apps/tasks', tasks);\n    }\n\n    updateTasks(){\n        let tasks = this._tasks.getValue()\n        return this._httpClient.post<Task[]>('api/apps/tasks', tasks).pipe(\n            tap((response) =>\n            {\n                if(!deepEqual(response, tasks)){                    \n                    setTimeout(()=>{\n                        this.updateTasks().subscribe()\n                    }, 100)   \n                }\n            }),\n        );\n    }\n\n    /**\n     * Search tasks with given query\n     *\n     * @param query\n     */\n    searchTasks(query: string): Observable<Task[] | null>\n    {\n        // Prepare the search results\n        let results;\n\n        // If the query exists...\n        if ( query )\n        {\n            // Clone the tasks\n            let tasks = cloneDeep(this._tasks.value);\n\n            // Filter the tasks\n            tasks = tasks.filter(task => task.title && task.title.toLowerCase().includes(query.toLowerCase()) || task.notes && task.notes.toLowerCase()\n                .includes(query.toLowerCase()));\n\n            // Mark the found chars\n            tasks.forEach((task) =>\n            {\n                const re = new RegExp('(' + query.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&') + ')', 'ig');\n                task.title = task.title.replace(re, '<mark>$1</mark>');\n            });\n\n            // Set them as the search result\n            results = tasks;\n        }\n        // Otherwise, set the results to null\n        else\n        {\n            results = null\n        }\n            \n        let resp = new BehaviorSubject<Task[]|null>(results)\n        return resp.asObservable()\n    }\n\n    /**\n     * Get task by id\n     */\n    getTaskById(id: string): Observable<Task>\n    {\n        const tasks = this._tasks.value;\n\n        // Find the task\n        const task = tasks.find(item => item.id === id) || null;\n\n        // Update the task\n        this._task.next(task);\n\n        // Return the task\n        return of(task);\n    }\n\n    /**\n     * Create task\n     *\n     * @param type\n     */\n    createTask(type: string): Observable<Task>\n    {\n        let tasks = this._tasks.value || []\n\n        // Generate a new task\n        const newTask = {\n            id       : FuseMockApiUtils.guid(),\n            type     : type,\n            title    : '',\n            notes    : null,\n            completed: false,\n            dueDate  : null,\n            priority : 1,\n            tags     : [],\n            order    : 0,\n        };\n\n        // Update the tasks with the new task\n        this._tasks.next([newTask as Task, ...tasks]);\n        \n        this.updateTasks().subscribe();\n\n        // Return the new task\n        return of(newTask as Task);\n    }\n\n    /**\n     * Update task\n     *\n     * @param id\n     * @param task\n     */\n    updateTask(id: string, task: Task): Observable<Task>\n    {\n        let tasks = this._tasks.value\n\n        // Find the index of the updated task\n        const index = tasks.findIndex(item => item.id === id);\n\n        // Update the task\n        tasks[index] = task;\n\n        // Update the tasks\n        this._tasks.next(tasks);\n\n        this.updateTasks().subscribe()\n\n        // Return the updated task\n        return of(task);\n    }\n\n    /**\n     * Delete the task\n     *\n     * @param id\n     */\n    deleteTask(id: string): Observable<boolean>\n    {\n        let tasks = this._tasks.value\n\n        // Find the index of the deleted task\n        const index = tasks.findIndex(item => item.id === id);\n\n        // Delete the task\n        tasks.splice(index, 1);\n\n        // Update the tasks\n        this._tasks.next(tasks);\n\n        this.updateTasks().subscribe()\n\n        // Return the deleted status\n        return of(true);\n    }\n}\n\n// same function in notes. todo: create import\nfunction deepEqual(obj1, obj2) {\n    // Check if the objects are of the same type\n    if (typeof obj1 !== typeof obj2) {\n      return false;\n    }\n  \n    // If both are primitive types or null, compare them directly\n    if (obj1 === obj2) {\n      return true;\n    }\n  \n    // If one of them is null, they are not equal\n    if (obj1 === null || obj2 === null) {\n      return false;\n    }\n  \n    // If they are objects, compare their properties recursively\n    if (typeof obj1 === 'object' && typeof obj2 === 'object') {\n      const keys1 = Object.keys(obj1);\n      const keys2 = Object.keys(obj2);\n  \n      // Check if they have the same number of properties\n      if (keys1.length !== keys2.length) {\n        return false;\n      }\n  \n      // Check if all properties are deeply equal\n      for (const key of keys1) {\n        if (!deepEqual(obj1[key], obj2[key])) {\n          return false;\n        }\n      }\n  \n      return true;\n    }\n  \n    // If none of the above conditions match, the objects are not equal\n    return false;\n  }"],"names":["TemplatePortal","TextFieldModule","DatePipe","NgClass","NgFor","NgIf","FormsModule","ReactiveFormsModule","MatButtonModule","MatCheckboxModule","MatRippleModule","MatDatepickerModule","MatDividerModule","MatFormFieldModule","MatIconModule","MatInputModule","MatMenuModule","NavigationEnd","RouterLink","FuseFindByKeyPipe","assign","DateTime","debounceTime","filter","Subject","takeUntil","tap","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ɵɵtextInterpolate","tag_r18","title","ɵɵtemplate","TasksDetailsComponent_ng_container_28_ng_container_1_Template","ɵɵpipeBind3","ctx_r4","task","tags","trackByFn","ɵɵlistener","TasksDetailsComponent_ng_template_33_ng_container_11_ng_container_1_Template_div_click_1_listener","restoredCtx","ɵɵrestoreView","_r28","tag_r26","$implicit","ctx_r27","ɵɵnextContext","ɵɵresetView","toggleTaskTag","ctx_r25","includes","id","TasksDetailsComponent_ng_template_33_ng_container_11_ng_container_1_Template","ctx_r22","filteredTags","TasksDetailsComponent_ng_template_33_ng_container_12_ng_container_2_Template_input_input_3_listener","$event","_r32","tag_r30","ctx_r31","updateTagTitle","TasksDetailsComponent_ng_template_33_ng_container_12_ng_container_2_Template_button_click_4_listener","ctx_r33","deleteTag","TasksDetailsComponent_ng_template_33_ng_container_12_ng_container_2_Template","ctx_r23","TasksDetailsComponent_ng_template_33_div_13_Template_div_click_0_listener","_r35","_r19","ɵɵreference","ctx_r34","createTag","value","TasksDetailsComponent_ng_template_33_Template_input_input_5_listener","_r37","ctx_r36","filterTags","TasksDetailsComponent_ng_template_33_Template_input_keydown_5_listener","ctx_r38","filterTagsInputKeyDown","TasksDetailsComponent_ng_template_33_Template_button_click_7_listener","ctx_r39","toggleTagsEditMode","TasksDetailsComponent_ng_template_33_mat_icon_8_Template","TasksDetailsComponent_ng_template_33_mat_icon_9_Template","TasksDetailsComponent_ng_template_33_ng_container_11_Template","TasksDetailsComponent_ng_template_33_ng_container_12_Template","TasksDetailsComponent_ng_template_33_div_13_Template","ctx_r8","tagsEditMode","shouldShowCreateTagButton","ɵɵpipeBind2","ctx_r14","dueDate","TasksDetailsComponent","constructor","_activatedRoute","_changeDetectorRef","_formBuilder","_fuseConfirmationService","_renderer2","_router","_tasksListComponent","_tasksService","_overlay","_viewContainerRef","_unsubscribeAll","ngOnInit","matDrawer","open","taskForm","group","type","notes","completed","priority","order","tags$","pipe","subscribe","markForCheck","tasks$","tasks","task$","patchValue","emitEvent","valueChanges","updateTask","events","event","_titleField","nativeElement","focus","ngAfterViewInit","openedChange","opened","ngOnDestroy","next","complete","_tagsPanelOverlayRef","dispose","closeDrawer","close","toggleCompleted","completedFormControl","get","setValue","openTagsPanel","create","backdropClass","hasBackdrop","scrollStrategy","scrollStrategies","block","positionStrategy","position","flexibleConnectedTo","_tagsPanelOrigin","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","attachments","overlayElement","querySelector","templatePortal","_tagsPanel","attach","backdropClick","hasAttached","detach","isAttached","target","toLowerCase","tag","key","length","isTagApplied","find","deleteTagFromTask","addTagToTask","response","updateTag","unshift","splice","findIndex","item","inputValue","setTaskPriority","isOverdue","fromISO","startOf","now","deleteTask","confirmation","message","actions","confirm","label","afterClosed","result","currentTaskIndex","nextTaskIndex","nextTaskId","isDeleted","navigate","relativeTo","index","_","ɵɵdirectiveInject","i1","ActivatedRoute","ChangeDetectorRef","i2","UntypedFormBuilder","i3","FuseConfirmationService","Renderer2","Router","i4","TasksListComponent","i5","TasksService","i6","Overlay","ViewContainerRef","_2","selectors","viewQuery","TasksDetailsComponent_Query","rf","ctx","TasksDetailsComponent_Template_button_click_3_listener","TasksDetailsComponent_ng_container_4_Template","TasksDetailsComponent_ng_container_5_Template","TasksDetailsComponent_Template_button_click_11_listener","TasksDetailsComponent_ng_container_28_Template","TasksDetailsComponent_Template_div_click_29_listener","TasksDetailsComponent_ng_container_31_Template","TasksDetailsComponent_ng_container_32_Template","TasksDetailsComponent_ng_template_33_Template","ɵɵtemplateRefExtractor","TasksDetailsComponent_ng_container_40_Template","TasksDetailsComponent_ng_container_41_Template","TasksDetailsComponent_ng_container_42_Template","TasksDetailsComponent_Template_button_click_45_listener","TasksDetailsComponent_Template_button_click_50_listener","TasksDetailsComponent_Template_button_click_55_listener","TasksDetailsComponent_Template_div_click_63_listener","_r40","_r16","TasksDetailsComponent_ng_container_66_Template","TasksDetailsComponent_ng_container_67_Template","TasksDetailsComponent_Template_button_click_73_listener","_r2","ɵɵtextInterpolate1","ɵɵpureFunction0","_c3","ɵɵpureFunction3","_c4","_r13","ɵɵpureFunction1","_c5","_c6","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","i7","MatButton","MatIconAnchor","MatIconButton","i8","MatIcon","i9","MatMenu","MatMenuItem","MatMenuTrigger","i10","MatDivider","i11","MatFormField","MatLabel","MatSuffix","i12","MatInput","i13","CdkTextareaAutosize","i14","MatRipple","i15","MatCheckbox","i16","MatDatepicker","MatDatepickerInput","MatDatepickerActions","MatDatepickerCancel","MatDatepickerApply","styles","encapsulation","changeDetection","CdkDrag","CdkDragHandle","CdkDragPreview","CdkDropList","moveItemInArray","DOCUMENT","TitleCasePipe","MatSidenavModule","MatTooltipModule","RouterOutlet","fromEvent","ctx_r2","tasksCount","incomplete","TasksListComponent_ng_container_23_ng_container_2_button_7_Template_button_click_0_listener","_r20","task_r7","ctx_r18","TasksListComponent_ng_container_23_ng_container_2_button_7_ng_container_1_Template","TasksListComponent_ng_container_23_ng_container_2_button_7_ng_container_2_Template","ɵɵpipeBind1","TasksListComponent_ng_container_23_ng_container_2_ng_container_12_mat_icon_2_Template","TasksListComponent_ng_container_23_ng_container_2_ng_container_12_mat_icon_3_Template","TasksListComponent_ng_container_23_ng_container_2_div_2_Template","TasksListComponent_ng_container_23_ng_container_2_ng_container_4_Template","TasksListComponent_ng_container_23_ng_container_2_button_7_Template","TasksListComponent_ng_container_23_ng_container_2_ng_container_10_Template","TasksListComponent_ng_container_23_ng_container_2_ng_container_11_Template","TasksListComponent_ng_container_23_ng_container_2_ng_container_12_Template","TasksListComponent_ng_container_23_ng_container_2_div_13_Template","ɵɵclassProp","first_r8","_c1","ctx_r6","selectedTask","_c2","TasksListComponent_ng_container_23_Template_div_cdkDropListDropped_1_listener","_r29","ctx_r28","dropped","TasksListComponent_ng_container_23_ng_container_2_Template","ctx_r3","_document","_fuseMediaWatcherService","_fuseNavigationService","total","setTimeout","mainNavigationComponent","getComponent","mainNavigation","navigation","menuItem","getItem","subtitle","refresh","onMediaQueryChange$","state","drawerMode","matches","ctrlKey","metaKey","createTask","onBackdropClicked","newTask","container","data","previousIndex","currentIndex","updateTasksOrders","FuseMediaWatcherService","FuseNavigationService","TasksListComponent_Query","TasksListComponent_Template_mat_drawer_container_backdropClick_1_listener","TasksListComponent_span_12_Template","TasksListComponent_span_13_Template","TasksListComponent_Template_button_click_15_listener","TasksListComponent_Template_button_click_19_listener","TasksListComponent_ng_container_23_Template","TasksListComponent_ng_template_24_Template","_r5","MatDrawer","MatDrawerContainer","MatDrawerContent","MatTooltip","TasksComponent","standalone","features","ɵɵStandaloneFeature","decls","vars","template","TasksComponent_Template","inject","catchError","throwError","taskResolver","route","tasksService","router","getTaskById","paramMap","error","console","parentUrl","url","split","slice","join","navigateByUrl","canDeactivateTasksDetails","component","currentRoute","currentState","nextState","nextRoute","root","firstChild","then","path","resolve","getTags","children","getTasks","canDeactivate","BehaviorSubject","of","FuseMockApiUtils","cloneDeep","_httpClient","_tags","_task","_tasks","asObservable","updateTags","post","guid","resp","forEach","tagIndex","updateTasks","patch","getValue","deepEqual","searchTasks","query","results","re","RegExp","replace","ɵɵinject","HttpClient","factory","ɵfac","providedIn","obj1","obj2","keys1","Object","keys","keys2"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}