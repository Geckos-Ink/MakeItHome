{"version":3,"file":"src_app_modules_admin_apps_contacts_contacts_routes_ts.js","mappings":"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","sources":["./src/app/modules/admin/apps/contacts/contacts.component.ts","./src/app/modules/admin/apps/contacts/contacts.component.html","./src/app/modules/admin/apps/contacts/contacts.routes.ts","./src/app/modules/admin/apps/contacts/contacts.service.ts","./src/app/modules/admin/apps/contacts/details/details.component.ts","./src/app/modules/admin/apps/contacts/details/details.component.html","./src/app/modules/admin/apps/contacts/list/list.component.ts","./src/app/modules/admin/apps/contacts/list/list.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, ViewEncapsulation } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n    selector       : 'contacts',\n    templateUrl    : './contacts.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [RouterOutlet],\n})\nexport class ContactsComponent\n{\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n}\n","<router-outlet></router-outlet>\n","import { inject } from '@angular/core';\nimport { ActivatedRouteSnapshot, Router, RouterStateSnapshot, Routes } from '@angular/router';\nimport { ContactsComponent } from 'app/modules/admin/apps/contacts/contacts.component';\nimport { ContactsService } from 'app/modules/admin/apps/contacts/contacts.service';\nimport { ContactsDetailsComponent } from 'app/modules/admin/apps/contacts/details/details.component';\nimport { ContactsListComponent } from 'app/modules/admin/apps/contacts/list/list.component';\nimport { catchError, throwError } from 'rxjs';\n\n/**\n * Contact resolver\n *\n * @param route\n * @param state\n */\nconst contactResolver = (route: ActivatedRouteSnapshot, state: RouterStateSnapshot) =>\n{\n    const contactsService = inject(ContactsService);\n    const router = inject(Router);\n\n    return contactsService.getContactById(route.paramMap.get('id'))\n        .pipe(\n            // Error here means the requested contact is not available\n            catchError((error) =>\n            {\n                // Log the error\n                console.error(error);\n\n                // Get the parent url\n                const parentUrl = state.url.split('/').slice(0, -1).join('/');\n\n                // Navigate to there\n                router.navigateByUrl(parentUrl);\n\n                // Throw an error\n                return throwError(error);\n            }),\n        );\n};\n\n/**\n * Can deactivate contacts details\n *\n * @param component\n * @param currentRoute\n * @param currentState\n * @param nextState\n */\nconst canDeactivateContactsDetails = (\n    component: ContactsDetailsComponent,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState: RouterStateSnapshot) =>\n{\n    // Get the next route\n    let nextRoute: ActivatedRouteSnapshot = nextState.root;\n    while ( nextRoute.firstChild )\n    {\n        nextRoute = nextRoute.firstChild;\n    }\n\n    // If the next state doesn't contain '/contacts'\n    // it means we are navigating away from the\n    // contacts app\n    if ( !nextState.url.includes('/contacts') )\n    {\n        // Let it navigate\n        return true;\n    }\n\n    // If we are navigating to another contact...\n    if ( nextRoute.paramMap.get('id') )\n    {\n        // Just navigate\n        return true;\n    }\n\n    // Otherwise, close the drawer first, and then navigate\n    return component.closeDrawer().then(() => true);\n};\n\nexport default [\n    {\n        path     : '',\n        component: ContactsComponent,\n        resolve  : {\n            tags: () => inject(ContactsService).getTags(),\n        },\n        children : [\n            {\n                path     : '',\n                component: ContactsListComponent,\n                resolve  : {\n                    contacts : () => inject(ContactsService).getContacts(),\n                    countries: () => inject(ContactsService).getCountries(),\n                },\n                children : [\n                    {\n                        path         : ':id',\n                        component    : ContactsDetailsComponent,\n                        resolve      : {\n                            contact  : contactResolver,\n                            countries: () => inject(ContactsService).getCountries(),\n                        },\n                        canDeactivate: [canDeactivateContactsDetails],\n                    },\n                ],\n            },\n        ],\n    },\n] as Routes;\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Contact, Country, Tag } from 'app/modules/admin/apps/contacts/contacts.types';\nimport { BehaviorSubject, filter, map, Observable, of, switchMap, take, tap, throwError } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class ContactsService\n{\n    // Private\n    private _contact: BehaviorSubject<Contact | null> = new BehaviorSubject(null);\n    private _contacts: BehaviorSubject<Contact[] | null> = new BehaviorSubject(null);\n    private _countries: BehaviorSubject<Country[] | null> = new BehaviorSubject(null);\n    private _tags: BehaviorSubject<Tag[] | null> = new BehaviorSubject(null);\n\n    /**\n     * Constructor\n     */\n    constructor(private _httpClient: HttpClient)\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for contact\n     */\n    get contact$(): Observable<Contact>\n    {\n        return this._contact.asObservable();\n    }\n\n    /**\n     * Getter for contacts\n     */\n    get contacts$(): Observable<Contact[]>\n    {\n        return this._contacts.asObservable();\n    }\n\n    /**\n     * Getter for countries\n     */\n    get countries$(): Observable<Country[]>\n    {\n        return this._countries.asObservable();\n    }\n\n    /**\n     * Getter for tags\n     */\n    get tags$(): Observable<Tag[]>\n    {\n        return this._tags.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Get contacts\n     */\n    getContacts(): Observable<Contact[]>\n    {\n        return this._httpClient.get<Contact[]>('api/apps/contacts/all').pipe(\n            tap((contacts) =>\n            {\n                this._contacts.next(contacts);\n            }),\n        );\n    }\n\n    /**\n     * Search contacts with given query\n     *\n     * @param query\n     */\n    searchContacts(query: string): Observable<Contact[]>\n    {\n        return this._httpClient.get<Contact[]>('api/apps/contacts/search', {\n            params: {query},\n        }).pipe(\n            tap((contacts) =>\n            {\n                this._contacts.next(contacts);\n            }),\n        );\n    }\n\n    /**\n     * Get contact by id\n     */\n    getContactById(id: string): Observable<Contact>\n    {\n        return this._contacts.pipe(\n            take(1),\n            map((contacts) =>\n            {\n                // Find the contact\n                const contact = contacts.find(item => item.id === id) || null;\n\n                // Update the contact\n                this._contact.next(contact);\n\n                // Return the contact\n                return contact;\n            }),\n            switchMap((contact) =>\n            {\n                if ( !contact )\n                {\n                    return throwError('Could not found contact with id of ' + id + '!');\n                }\n\n                return of(contact);\n            }),\n        );\n    }\n\n    /**\n     * Create contact\n     */\n    createContact(): Observable<Contact>\n    {\n        return this.contacts$.pipe(\n            take(1),\n            switchMap(contacts => this._httpClient.post<Contact>('api/apps/contacts/contact', {}).pipe(\n                map((newContact) =>\n                {\n                    // Update the contacts with the new contact\n                    this._contacts.next([newContact, ...contacts]);\n\n                    // Return the new contact\n                    return newContact;\n                }),\n            )),\n        );\n    }\n\n    /**\n     * Update contact\n     *\n     * @param id\n     * @param contact\n     */\n    updateContact(id: string, contact: Contact): Observable<Contact>\n    {\n        return this.contacts$.pipe(\n            take(1),\n            switchMap(contacts => this._httpClient.patch<Contact>('api/apps/contacts/contact', {\n                id,\n                contact,\n            }).pipe(\n                map((updatedContact) =>\n                {\n                    // Find the index of the updated contact\n                    const index = contacts.findIndex(item => item.id === id);\n\n                    // Update the contact\n                    contacts[index] = updatedContact;\n\n                    // Update the contacts\n                    this._contacts.next(contacts);\n\n                    // Return the updated contact\n                    return updatedContact;\n                }),\n                switchMap(updatedContact => this.contact$.pipe(\n                    take(1),\n                    filter(item => item && item.id === id),\n                    tap(() =>\n                    {\n                        // Update the contact if it's selected\n                        this._contact.next(updatedContact);\n\n                        // Return the updated contact\n                        return updatedContact;\n                    }),\n                )),\n            )),\n        );\n    }\n\n    /**\n     * Delete the contact\n     *\n     * @param id\n     */\n    deleteContact(id: string): Observable<boolean>\n    {\n        return this.contacts$.pipe(\n            take(1),\n            switchMap(contacts => this._httpClient.delete('api/apps/contacts/contact', {params: {id}}).pipe(\n                map((isDeleted: boolean) =>\n                {\n                    // Find the index of the deleted contact\n                    const index = contacts.findIndex(item => item.id === id);\n\n                    // Delete the contact\n                    contacts.splice(index, 1);\n\n                    // Update the contacts\n                    this._contacts.next(contacts);\n\n                    // Return the deleted status\n                    return isDeleted;\n                }),\n            )),\n        );\n    }\n\n    /**\n     * Get countries\n     */\n    getCountries(): Observable<Country[]>\n    {\n        return this._httpClient.get<Country[]>('api/apps/contacts/countries').pipe(\n            tap((countries) =>\n            {\n                this._countries.next(countries);\n            }),\n        );\n    }\n\n    /**\n     * Get tags\n     */\n    getTags(): Observable<Tag[]>\n    {\n        return this._httpClient.get<Tag[]>('api/apps/contacts/tags').pipe(\n            tap((tags) =>\n            {\n                this._tags.next(tags);\n            }),\n        );\n    }\n\n    /**\n     * Create tag\n     *\n     * @param tag\n     */\n    createTag(tag: Tag): Observable<Tag>\n    {\n        return this.tags$.pipe(\n            take(1),\n            switchMap(tags => this._httpClient.post<Tag>('api/apps/contacts/tag', {tag}).pipe(\n                map((newTag) =>\n                {\n                    // Update the tags with the new tag\n                    this._tags.next([...tags, newTag]);\n\n                    // Return new tag from observable\n                    return newTag;\n                }),\n            )),\n        );\n    }\n\n    /**\n     * Update the tag\n     *\n     * @param id\n     * @param tag\n     */\n    updateTag(id: string, tag: Tag): Observable<Tag>\n    {\n        return this.tags$.pipe(\n            take(1),\n            switchMap(tags => this._httpClient.patch<Tag>('api/apps/contacts/tag', {\n                id,\n                tag,\n            }).pipe(\n                map((updatedTag) =>\n                {\n                    // Find the index of the updated tag\n                    const index = tags.findIndex(item => item.id === id);\n\n                    // Update the tag\n                    tags[index] = updatedTag;\n\n                    // Update the tags\n                    this._tags.next(tags);\n\n                    // Return the updated tag\n                    return updatedTag;\n                }),\n            )),\n        );\n    }\n\n    /**\n     * Delete the tag\n     *\n     * @param id\n     */\n    deleteTag(id: string): Observable<boolean>\n    {\n        return this.tags$.pipe(\n            take(1),\n            switchMap(tags => this._httpClient.delete('api/apps/contacts/tag', {params: {id}}).pipe(\n                map((isDeleted: boolean) =>\n                {\n                    // Find the index of the deleted tag\n                    const index = tags.findIndex(item => item.id === id);\n\n                    // Delete the tag\n                    tags.splice(index, 1);\n\n                    // Update the tags\n                    this._tags.next(tags);\n\n                    // Return the deleted status\n                    return isDeleted;\n                }),\n                filter(isDeleted => isDeleted),\n                switchMap(isDeleted => this.contacts$.pipe(\n                    take(1),\n                    map((contacts) =>\n                    {\n                        // Iterate through the contacts\n                        contacts.forEach((contact) =>\n                        {\n                            const tagIndex = contact.tags.findIndex(tag => tag === id);\n\n                            // If the contact has the tag, remove it\n                            if ( tagIndex > -1 )\n                            {\n                                contact.tags.splice(tagIndex, 1);\n                            }\n                        });\n\n                        // Return the deleted status\n                        return isDeleted;\n                    }),\n                )),\n            )),\n        );\n    }\n\n    /**\n     * Update the avatar of the given contact\n     *\n     * @param id\n     * @param avatar\n     */\n    uploadAvatar(id: string, avatar: File): Observable<Contact>\n    {\n        return this.contacts$.pipe(\n            take(1),\n            switchMap(contacts => this._httpClient.post<Contact>('api/apps/contacts/avatar', {\n                id,\n                avatar,\n            }, {\n                headers: {\n                    // eslint-disable-next-line @typescript-eslint/naming-convention\n                    'Content-Type': avatar.type,\n                },\n            }).pipe(\n                map((updatedContact) =>\n                {\n                    // Find the index of the updated contact\n                    const index = contacts.findIndex(item => item.id === id);\n\n                    // Update the contact\n                    contacts[index] = updatedContact;\n\n                    // Update the contacts\n                    this._contacts.next(contacts);\n\n                    // Return the updated contact\n                    return updatedContact;\n                }),\n                switchMap(updatedContact => this.contact$.pipe(\n                    take(1),\n                    filter(item => item && item.id === id),\n                    tap(() =>\n                    {\n                        // Update the contact if it's selected\n                        this._contact.next(updatedContact);\n\n                        // Return the updated contact\n                        return updatedContact;\n                    }),\n                )),\n            )),\n        );\n    }\n}\n","import { Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { TextFieldModule } from '@angular/cdk/text-field';\nimport { DatePipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, OnDestroy, OnInit, Renderer2, TemplateRef, ViewChild, ViewContainerRef, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatOptionModule, MatRippleModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDrawerToggleResult } from '@angular/material/sidenav';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { ActivatedRoute, Router, RouterLink } from '@angular/router';\nimport { FuseFindByKeyPipe } from '@fuse/pipes/find-by-key/find-by-key.pipe';\nimport { FuseConfirmationService } from '@fuse/services/confirmation';\nimport { ContactsService } from 'app/modules/admin/apps/contacts/contacts.service';\nimport { Contact, Country, Tag } from 'app/modules/admin/apps/contacts/contacts.types';\nimport { ContactsListComponent } from 'app/modules/admin/apps/contacts/list/list.component';\nimport { debounceTime, Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'contacts-details',\n    templateUrl    : './details.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [NgIf, MatButtonModule, MatTooltipModule, RouterLink, MatIconModule, NgFor, FormsModule, ReactiveFormsModule, MatRippleModule, MatFormFieldModule, MatInputModule, MatCheckboxModule, NgClass, MatSelectModule, MatOptionModule, MatDatepickerModule, TextFieldModule, FuseFindByKeyPipe, DatePipe],\n})\nexport class ContactsDetailsComponent implements OnInit, OnDestroy\n{\n    @ViewChild('avatarFileInput') private _avatarFileInput: ElementRef;\n    @ViewChild('tagsPanel') private _tagsPanel: TemplateRef<any>;\n    @ViewChild('tagsPanelOrigin') private _tagsPanelOrigin: ElementRef;\n\n    editMode: boolean = false;\n    tags: Tag[];\n    tagsEditMode: boolean = false;\n    filteredTags: Tag[];\n    contact: Contact;\n    contactForm: UntypedFormGroup;\n    contacts: Contact[];\n    countries: Country[];\n    private _tagsPanelOverlayRef: OverlayRef;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _contactsListComponent: ContactsListComponent,\n        private _contactsService: ContactsService,\n        private _formBuilder: UntypedFormBuilder,\n        private _fuseConfirmationService: FuseConfirmationService,\n        private _renderer2: Renderer2,\n        private _router: Router,\n        private _overlay: Overlay,\n        private _viewContainerRef: ViewContainerRef,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Open the drawer\n        this._contactsListComponent.matDrawer.open();\n\n        // Create the contact form\n        this.contactForm = this._formBuilder.group({\n            id          : [''],\n            avatar      : [null],\n            name        : ['', [Validators.required]],\n            emails      : this._formBuilder.array([]),\n            phoneNumbers: this._formBuilder.array([]),\n            title       : [''],\n            company     : [''],\n            birthday    : [null],\n            address     : [null],\n            notes       : [null],\n            tags        : [[]],\n        });\n\n        // Get the contacts\n        this._contactsService.contacts$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((contacts: Contact[]) =>\n            {\n                this.contacts = contacts;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the contact\n        this._contactsService.contact$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((contact: Contact) =>\n            {\n                // Open the drawer in case it is closed\n                this._contactsListComponent.matDrawer.open();\n\n                // Get the contact\n                this.contact = contact;\n\n                // Clear the emails and phoneNumbers form arrays\n                (this.contactForm.get('emails') as UntypedFormArray).clear();\n                (this.contactForm.get('phoneNumbers') as UntypedFormArray).clear();\n\n                // Patch values to the form\n                this.contactForm.patchValue(contact);\n\n                // Setup the emails form array\n                const emailFormGroups = [];\n\n                if ( contact.emails.length > 0 )\n                {\n                    // Iterate through them\n                    contact.emails.forEach((email) =>\n                    {\n                        // Create an email form group\n                        emailFormGroups.push(\n                            this._formBuilder.group({\n                                email: [email.email],\n                                label: [email.label],\n                            }),\n                        );\n                    });\n                }\n                else\n                {\n                    // Create an email form group\n                    emailFormGroups.push(\n                        this._formBuilder.group({\n                            email: [''],\n                            label: [''],\n                        }),\n                    );\n                }\n\n                // Add the email form groups to the emails form array\n                emailFormGroups.forEach((emailFormGroup) =>\n                {\n                    (this.contactForm.get('emails') as UntypedFormArray).push(emailFormGroup);\n                });\n\n                // Setup the phone numbers form array\n                const phoneNumbersFormGroups = [];\n\n                if ( contact.phoneNumbers.length > 0 )\n                {\n                    // Iterate through them\n                    contact.phoneNumbers.forEach((phoneNumber) =>\n                    {\n                        // Create an email form group\n                        phoneNumbersFormGroups.push(\n                            this._formBuilder.group({\n                                country    : [phoneNumber.country],\n                                phoneNumber: [phoneNumber.phoneNumber],\n                                label      : [phoneNumber.label],\n                            }),\n                        );\n                    });\n                }\n                else\n                {\n                    // Create a phone number form group\n                    phoneNumbersFormGroups.push(\n                        this._formBuilder.group({\n                            country    : ['us'],\n                            phoneNumber: [''],\n                            label      : [''],\n                        }),\n                    );\n                }\n\n                // Add the phone numbers form groups to the phone numbers form array\n                phoneNumbersFormGroups.forEach((phoneNumbersFormGroup) =>\n                {\n                    (this.contactForm.get('phoneNumbers') as UntypedFormArray).push(phoneNumbersFormGroup);\n                });\n\n                // Toggle the edit mode off\n                this.toggleEditMode(false);\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the country telephone codes\n        this._contactsService.countries$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((codes: Country[]) =>\n            {\n                this.countries = codes;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the tags\n        this._contactsService.tags$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((tags: Tag[]) =>\n            {\n                this.tags = tags;\n                this.filteredTags = tags;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n\n        // Dispose the overlays if they are still on the DOM\n        if ( this._tagsPanelOverlayRef )\n        {\n            this._tagsPanelOverlayRef.dispose();\n        }\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Close the drawer\n     */\n    closeDrawer(): Promise<MatDrawerToggleResult>\n    {\n        return this._contactsListComponent.matDrawer.close();\n    }\n\n    /**\n     * Toggle edit mode\n     *\n     * @param editMode\n     */\n    toggleEditMode(editMode: boolean | null = null): void\n    {\n        if ( editMode === null )\n        {\n            this.editMode = !this.editMode;\n        }\n        else\n        {\n            this.editMode = editMode;\n        }\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Update the contact\n     */\n    updateContact(): void\n    {\n        // Get the contact object\n        const contact = this.contactForm.getRawValue();\n\n        // Go through the contact object and clear empty values\n        contact.emails = contact.emails.filter(email => email.email);\n\n        contact.phoneNumbers = contact.phoneNumbers.filter(phoneNumber => phoneNumber.phoneNumber);\n\n        // Update the contact on the server\n        this._contactsService.updateContact(contact.id, contact).subscribe(() =>\n        {\n            // Toggle the edit mode off\n            this.toggleEditMode(false);\n        });\n    }\n\n    /**\n     * Delete the contact\n     */\n    deleteContact(): void\n    {\n        // Open the confirmation dialog\n        const confirmation = this._fuseConfirmationService.open({\n            title  : 'Delete contact',\n            message: 'Are you sure you want to delete this contact? This action cannot be undone!',\n            actions: {\n                confirm: {\n                    label: 'Delete',\n                },\n            },\n        });\n\n        // Subscribe to the confirmation dialog closed action\n        confirmation.afterClosed().subscribe((result) =>\n        {\n            // If the confirm button pressed...\n            if ( result === 'confirmed' )\n            {\n                // Get the current contact's id\n                const id = this.contact.id;\n\n                // Get the next/previous contact's id\n                const currentContactIndex = this.contacts.findIndex(item => item.id === id);\n                const nextContactIndex = currentContactIndex + ((currentContactIndex === (this.contacts.length - 1)) ? -1 : 1);\n                const nextContactId = (this.contacts.length === 1 && this.contacts[0].id === id) ? null : this.contacts[nextContactIndex].id;\n\n                // Delete the contact\n                this._contactsService.deleteContact(id)\n                    .subscribe((isDeleted) =>\n                    {\n                        // Return if the contact wasn't deleted...\n                        if ( !isDeleted )\n                        {\n                            return;\n                        }\n\n                        // Navigate to the next contact if available\n                        if ( nextContactId )\n                        {\n                            this._router.navigate(['../', nextContactId], {relativeTo: this._activatedRoute});\n                        }\n                        // Otherwise, navigate to the parent\n                        else\n                        {\n                            this._router.navigate(['../'], {relativeTo: this._activatedRoute});\n                        }\n\n                        // Toggle the edit mode off\n                        this.toggleEditMode(false);\n                    });\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n\n    }\n\n    /**\n     * Upload avatar\n     *\n     * @param fileList\n     */\n    uploadAvatar(fileList: FileList): void\n    {\n        // Return if canceled\n        if ( !fileList.length )\n        {\n            return;\n        }\n\n        const allowedTypes = ['image/jpeg', 'image/png'];\n        const file = fileList[0];\n\n        // Return if the file is not allowed\n        if ( !allowedTypes.includes(file.type) )\n        {\n            return;\n        }\n\n        // Upload the avatar\n        this._contactsService.uploadAvatar(this.contact.id, file).subscribe();\n    }\n\n    /**\n     * Remove the avatar\n     */\n    removeAvatar(): void\n    {\n        // Get the form control for 'avatar'\n        const avatarFormControl = this.contactForm.get('avatar');\n\n        // Set the avatar as null\n        avatarFormControl.setValue(null);\n\n        // Set the file input value as null\n        this._avatarFileInput.nativeElement.value = null;\n\n        // Update the contact\n        this.contact.avatar = null;\n    }\n\n    /**\n     * Open tags panel\n     */\n    openTagsPanel(): void\n    {\n        // Create the overlay\n        this._tagsPanelOverlayRef = this._overlay.create({\n            backdropClass   : '',\n            hasBackdrop     : true,\n            scrollStrategy  : this._overlay.scrollStrategies.block(),\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._tagsPanelOrigin.nativeElement)\n                .withFlexibleDimensions(true)\n                .withViewportMargin(64)\n                .withLockedPosition(true)\n                .withPositions([\n                    {\n                        originX : 'start',\n                        originY : 'bottom',\n                        overlayX: 'start',\n                        overlayY: 'top',\n                    },\n                ]),\n        });\n\n        // Subscribe to the attachments observable\n        this._tagsPanelOverlayRef.attachments().subscribe(() =>\n        {\n            // Add a class to the origin\n            this._renderer2.addClass(this._tagsPanelOrigin.nativeElement, 'panel-opened');\n\n            // Focus to the search input once the overlay has been attached\n            this._tagsPanelOverlayRef.overlayElement.querySelector('input').focus();\n        });\n\n        // Create a portal from the template\n        const templatePortal = new TemplatePortal(this._tagsPanel, this._viewContainerRef);\n\n        // Attach the portal to the overlay\n        this._tagsPanelOverlayRef.attach(templatePortal);\n\n        // Subscribe to the backdrop click\n        this._tagsPanelOverlayRef.backdropClick().subscribe(() =>\n        {\n            // Remove the class from the origin\n            this._renderer2.removeClass(this._tagsPanelOrigin.nativeElement, 'panel-opened');\n\n            // If overlay exists and attached...\n            if ( this._tagsPanelOverlayRef && this._tagsPanelOverlayRef.hasAttached() )\n            {\n                // Detach it\n                this._tagsPanelOverlayRef.detach();\n\n                // Reset the tag filter\n                this.filteredTags = this.tags;\n\n                // Toggle the edit mode off\n                this.tagsEditMode = false;\n            }\n\n            // If template portal exists and attached...\n            if ( templatePortal && templatePortal.isAttached )\n            {\n                // Detach it\n                templatePortal.detach();\n            }\n        });\n    }\n\n    /**\n     * Toggle the tags edit mode\n     */\n    toggleTagsEditMode(): void\n    {\n        this.tagsEditMode = !this.tagsEditMode;\n    }\n\n    /**\n     * Filter tags\n     *\n     * @param event\n     */\n    filterTags(event): void\n    {\n        // Get the value\n        const value = event.target.value.toLowerCase();\n\n        // Filter the tags\n        this.filteredTags = this.tags.filter(tag => tag.title.toLowerCase().includes(value));\n    }\n\n    /**\n     * Filter tags input key down event\n     *\n     * @param event\n     */\n    filterTagsInputKeyDown(event): void\n    {\n        // Return if the pressed key is not 'Enter'\n        if ( event.key !== 'Enter' )\n        {\n            return;\n        }\n\n        // If there is no tag available...\n        if ( this.filteredTags.length === 0 )\n        {\n            // Create the tag\n            this.createTag(event.target.value);\n\n            // Clear the input\n            event.target.value = '';\n\n            // Return\n            return;\n        }\n\n        // If there is a tag...\n        const tag = this.filteredTags[0];\n        const isTagApplied = this.contact.tags.find(id => id === tag.id);\n\n        // If the found tag is already applied to the contact...\n        if ( isTagApplied )\n        {\n            // Remove the tag from the contact\n            this.removeTagFromContact(tag);\n        }\n        else\n        {\n            // Otherwise add the tag to the contact\n            this.addTagToContact(tag);\n        }\n    }\n\n    /**\n     * Create a new tag\n     *\n     * @param title\n     */\n    createTag(title: string): void\n    {\n        const tag = {\n            title,\n        };\n\n        // Create tag on the server\n        this._contactsService.createTag(tag)\n            .subscribe((response) =>\n            {\n                // Add the tag to the contact\n                this.addTagToContact(response);\n            });\n    }\n\n    /**\n     * Update the tag title\n     *\n     * @param tag\n     * @param event\n     */\n    updateTagTitle(tag: Tag, event): void\n    {\n        // Update the title on the tag\n        tag.title = event.target.value;\n\n        // Update the tag on the server\n        this._contactsService.updateTag(tag.id, tag)\n            .pipe(debounceTime(300))\n            .subscribe();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Delete the tag\n     *\n     * @param tag\n     */\n    deleteTag(tag: Tag): void\n    {\n        // Delete the tag from the server\n        this._contactsService.deleteTag(tag.id).subscribe();\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Add tag to the contact\n     *\n     * @param tag\n     */\n    addTagToContact(tag: Tag): void\n    {\n        // Add the tag\n        this.contact.tags.unshift(tag.id);\n\n        // Update the contact form\n        this.contactForm.get('tags').patchValue(this.contact.tags);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Remove tag from the contact\n     *\n     * @param tag\n     */\n    removeTagFromContact(tag: Tag): void\n    {\n        // Remove the tag\n        this.contact.tags.splice(this.contact.tags.findIndex(item => item === tag.id), 1);\n\n        // Update the contact form\n        this.contactForm.get('tags').patchValue(this.contact.tags);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Toggle contact tag\n     *\n     * @param tag\n     */\n    toggleContactTag(tag: Tag): void\n    {\n        if ( this.contact.tags.includes(tag.id) )\n        {\n            this.removeTagFromContact(tag);\n        }\n        else\n        {\n            this.addTagToContact(tag);\n        }\n    }\n\n    /**\n     * Should the create tag button be visible\n     *\n     * @param inputValue\n     */\n    shouldShowCreateTagButton(inputValue: string): boolean\n    {\n        return !!!(inputValue === '' || this.tags.findIndex(tag => tag.title.toLowerCase() === inputValue.toLowerCase()) > -1);\n    }\n\n    /**\n     * Add the email field\n     */\n    addEmailField(): void\n    {\n        // Create an empty email form group\n        const emailFormGroup = this._formBuilder.group({\n            email: [''],\n            label: [''],\n        });\n\n        // Add the email form group to the emails form array\n        (this.contactForm.get('emails') as UntypedFormArray).push(emailFormGroup);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Remove the email field\n     *\n     * @param index\n     */\n    removeEmailField(index: number): void\n    {\n        // Get form array for emails\n        const emailsFormArray = this.contactForm.get('emails') as UntypedFormArray;\n\n        // Remove the email field\n        emailsFormArray.removeAt(index);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Add an empty phone number field\n     */\n    addPhoneNumberField(): void\n    {\n        // Create an empty phone number form group\n        const phoneNumberFormGroup = this._formBuilder.group({\n            country    : ['us'],\n            phoneNumber: [''],\n            label      : [''],\n        });\n\n        // Add the phone number form group to the phoneNumbers form array\n        (this.contactForm.get('phoneNumbers') as UntypedFormArray).push(phoneNumberFormGroup);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Remove the phone number field\n     *\n     * @param index\n     */\n    removePhoneNumberField(index: number): void\n    {\n        // Get form array for phone numbers\n        const phoneNumbersFormArray = this.contactForm.get('phoneNumbers') as UntypedFormArray;\n\n        // Remove the phone number field\n        phoneNumbersFormArray.removeAt(index);\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Get country info by iso code\n     *\n     * @param iso\n     */\n    getCountryByIso(iso: string): Country\n    {\n        return this.countries.find(country => country.iso === iso);\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"flex flex-col w-full\">\n\n    <!-- View mode -->\n    <ng-container *ngIf=\"!editMode\">\n\n        <!-- Header -->\n        <div class=\"relative w-full h-40 sm:h-48 px-8 sm:px-12 bg-accent-100 dark:bg-accent-700\">\n            <!-- Background -->\n            <ng-container *ngIf=\"contact.background\">\n                <img\n                    class=\"absolute inset-0 object-cover w-full h-full\"\n                    [src]=\"contact.background\">\n            </ng-container>\n            <!-- Close button -->\n            <div class=\"flex items-center justify-end w-full max-w-3xl mx-auto pt-6\">\n                <a\n                    mat-icon-button\n                    [matTooltip]=\"'Close'\"\n                    [routerLink]=\"['../']\">\n                    <mat-icon\n                        class=\"text-white\"\n                        [svgIcon]=\"'heroicons_outline:x-mark'\"></mat-icon>\n                </a>\n            </div>\n        </div>\n\n        <!-- Contact -->\n        <div class=\"relative flex flex-col flex-auto items-center p-6 pt-0 sm:p-12 sm:pt-0\">\n            <div class=\"w-full max-w-3xl\">\n\n                <!-- Avatar and actions -->\n                <div class=\"flex flex-auto items-end -mt-16\">\n                    <!-- Avatar -->\n                    <div class=\"flex items-center justify-center w-32 h-32 rounded-full overflow-hidden ring-4 ring-bg-card\">\n                        <img\n                            class=\"object-cover w-full h-full\"\n                            *ngIf=\"contact.avatar\"\n                            [src]=\"contact.avatar\">\n                        <div\n                            class=\"flex items-center justify-center w-full h-full rounded overflow-hidden uppercase text-8xl font-bold leading-none bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\"\n                            *ngIf=\"!contact.avatar\">\n                            {{contact.name.charAt(0)}}\n                        </div>\n                    </div>\n                    <!-- Actions -->\n                    <div class=\"flex items-center ml-auto mb-1\">\n                        <button\n                            mat-stroked-button\n                            (click)=\"toggleEditMode(true)\">\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:pencil-square'\"></mat-icon>\n                            <span class=\"ml-2\">Edit</span>\n                        </button>\n                    </div>\n                </div>\n\n                <!-- Name -->\n                <div class=\"mt-3 text-4xl font-bold truncate\">{{contact.name}}</div>\n\n                <!-- Tags -->\n                <ng-container *ngIf=\"contact.tags.length\">\n                    <div class=\"flex flex-wrap items-center mt-2\">\n                        <!-- Tag -->\n                        <ng-container *ngFor=\"let tag of (contact.tags | fuseFindByKey:'id':tags); trackBy: trackByFn\">\n                            <div class=\"flex items-center justify-center py-1 px-3 mr-3 mb-3 rounded-full leading-normal text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                                <span class=\"text-sm font-medium whitespace-nowrap\">{{tag.title}}</span>\n                            </div>\n                        </ng-container>\n                    </div>\n                </ng-container>\n\n                <div class=\"flex flex-col mt-4 pt-6 border-t space-y-8\">\n                    <!-- Title -->\n                    <ng-container *ngIf=\"contact.title\">\n                        <div class=\"flex sm:items-center\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:briefcase'\"></mat-icon>\n                            <div class=\"ml-6 leading-6\">{{contact.title}}</div>\n                        </div>\n                    </ng-container>\n\n                    <!-- Company -->\n                    <ng-container *ngIf=\"contact.company\">\n                        <div class=\"flex sm:items-center\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:building-office-2'\"></mat-icon>\n                            <div class=\"ml-6 leading-6\">{{contact.company}}</div>\n                        </div>\n                    </ng-container>\n\n                    <!-- Emails -->\n                    <ng-container *ngIf=\"contact.emails.length\">\n                        <div class=\"flex\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:envelope'\"></mat-icon>\n                            <div class=\"min-w-0 ml-6 space-y-1\">\n                                <ng-container *ngFor=\"let email of contact.emails; trackBy: trackByFn\">\n                                    <div class=\"flex items-center leading-6\">\n                                        <a\n                                            class=\"hover:underline text-primary-500\"\n                                            [href]=\"'mailto:' + email.email\"\n                                            target=\"_blank\">\n                                            {{email.email}}\n                                        </a>\n                                        <div\n                                            class=\"text-md truncate text-secondary\"\n                                            *ngIf=\"email.label\">\n                                            <span class=\"mx-2\">&bull;</span>\n                                            <span class=\"font-medium\">{{email.label}}</span>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <!-- Phone -->\n                    <ng-container *ngIf=\"contact.phoneNumbers.length\">\n                        <div class=\"flex\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:phone'\"></mat-icon>\n                            <div class=\"min-w-0 ml-6 space-y-1\">\n                                <ng-container *ngFor=\"let phoneNumber of contact.phoneNumbers; trackBy: trackByFn\">\n                                    <div class=\"flex items-center leading-6\">\n                                        <div\n                                            class=\"hidden sm:flex w-6 h-4 overflow-hidden\"\n                                            [matTooltip]=\"getCountryByIso(phoneNumber.country).name\"\n                                            [style.background]=\"'url(\\'/assets/images/apps/contacts/flags.png\\') no-repeat 0 0'\"\n                                            [style.backgroundSize]=\"'24px 3876px'\"\n                                            [style.backgroundPosition]=\"getCountryByIso(phoneNumber.country).flagImagePos\"></div>\n                                        <div class=\"sm:ml-3 font-mono\">{{getCountryByIso(phoneNumber.country).code}}</div>\n                                        <div class=\"ml-2.5 font-mono\">{{phoneNumber.phoneNumber}}</div>\n                                        <div\n                                            class=\"text-md truncate text-secondary\"\n                                            *ngIf=\"phoneNumber.label\">\n                                            <span class=\"mx-2\">&bull;</span>\n                                            <span class=\"font-medium\">{{phoneNumber.label}}</span>\n                                        </div>\n                                    </div>\n                                </ng-container>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <!-- Address -->\n                    <ng-container *ngIf=\"contact.address\">\n                        <div class=\"flex sm:items-center\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:map-pin'\"></mat-icon>\n                            <div class=\"ml-6 leading-6\">{{contact.address}}</div>\n                        </div>\n                    </ng-container>\n\n                    <!-- Birthday -->\n                    <ng-container *ngIf=\"contact.birthday\">\n                        <div class=\"flex sm:items-center\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:cake'\"></mat-icon>\n                            <div class=\"ml-6 leading-6\">{{contact.birthday | date:'longDate'}}</div>\n                        </div>\n                    </ng-container>\n\n                    <!-- Notes -->\n                    <ng-container *ngIf=\"contact.notes\">\n                        <div class=\"flex\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:bars-3-bottom-left'\"></mat-icon>\n                            <div\n                                class=\"max-w-none ml-6 prose prose-sm\"\n                                [innerHTML]=\"contact.notes\"></div>\n                        </div>\n                    </ng-container>\n                </div>\n\n            </div>\n        </div>\n    </ng-container>\n\n    <!-- Edit mode -->\n    <ng-container *ngIf=\"editMode\">\n\n        <!-- Header -->\n        <div class=\"relative w-full h-40 sm:h-48 px-8 sm:px-12 bg-accent-100 dark:bg-accent-700\">\n            <!-- Background -->\n            <ng-container *ngIf=\"contact.background\">\n                <img\n                    class=\"absolute inset-0 object-cover w-full h-full\"\n                    [src]=\"contact.background\">\n            </ng-container>\n            <!-- Close button -->\n            <div class=\"flex items-center justify-end w-full max-w-3xl mx-auto pt-6\">\n                <a\n                    mat-icon-button\n                    [matTooltip]=\"'Close'\"\n                    [routerLink]=\"['../']\">\n                    <mat-icon\n                        class=\"text-white\"\n                        [svgIcon]=\"'heroicons_outline:x-mark'\"></mat-icon>\n                </a>\n            </div>\n        </div>\n\n        <!-- Contact form -->\n        <div class=\"relative flex flex-col flex-auto items-center px-6 sm:px-12\">\n            <div class=\"w-full max-w-3xl\">\n                <form [formGroup]=\"contactForm\">\n\n                    <!-- Avatar -->\n                    <div class=\"flex flex-auto items-end -mt-16\">\n                        <div class=\"relative flex items-center justify-center w-32 h-32 rounded-full overflow-hidden ring-4 ring-bg-card\">\n                            <!-- Upload / Remove avatar -->\n                            <div class=\"absolute inset-0 bg-black bg-opacity-50 z-10\"></div>\n                            <div class=\"absolute inset-0 flex items-center justify-center z-20\">\n                                <div>\n                                    <input\n                                        id=\"avatar-file-input\"\n                                        class=\"absolute h-0 w-0 opacity-0 invisible pointer-events-none\"\n                                        type=\"file\"\n                                        [multiple]=\"false\"\n                                        [accept]=\"'image/jpeg, image/png'\"\n                                        (change)=\"uploadAvatar(avatarFileInput.files)\"\n                                        #avatarFileInput>\n                                    <label\n                                        class=\"flex items-center justify-center w-10 h-10 rounded-full cursor-pointer hover:bg-hover\"\n                                        for=\"avatar-file-input\"\n                                        matRipple>\n                                        <mat-icon\n                                            class=\"text-white\"\n                                            [svgIcon]=\"'heroicons_outline:camera'\"></mat-icon>\n                                    </label>\n                                </div>\n                                <div>\n                                    <button\n                                        mat-icon-button\n                                        (click)=\"removeAvatar()\">\n                                        <mat-icon\n                                            class=\"text-white\"\n                                            [svgIcon]=\"'heroicons_outline:trash'\"></mat-icon>\n                                    </button>\n                                </div>\n                            </div>\n                            <!-- Image/Letter -->\n                            <img\n                                class=\"object-cover w-full h-full\"\n                                *ngIf=\"contact.avatar\"\n                                [src]=\"contact.avatar\">\n                            <div\n                                class=\"flex items-center justify-center w-full h-full rounded overflow-hidden uppercase text-8xl font-bold leading-none bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\"\n                                *ngIf=\"!contact.avatar\">\n                                {{contact.name.charAt(0)}}\n                            </div>\n                        </div>\n                    </div>\n\n                    <!-- Name -->\n                    <div class=\"mt-8\">\n                        <mat-form-field\n                            class=\"w-full\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-label>Name</mat-label>\n                            <mat-icon\n                                matPrefix\n                                class=\"hidden sm:flex icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:user-circle'\"></mat-icon>\n                            <input\n                                matInput\n                                [formControlName]=\"'name'\"\n                                [placeholder]=\"'Name'\"\n                                [spellcheck]=\"false\">\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Tags -->\n                    <div class=\"flex flex-wrap items-center -m-1.5 mt-6\">\n                        <!-- Tags -->\n                        <ng-container *ngIf=\"contact.tags.length\">\n                            <ng-container *ngFor=\"let tag of (contact.tags | fuseFindByKey:'id':tags); trackBy: trackByFn\">\n                                <div class=\"flex items-center justify-center px-4 m-1.5 rounded-full leading-9 text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\">\n                                    <span class=\"text-md font-medium whitespace-nowrap\">{{tag.title}}</span>\n                                </div>\n                            </ng-container>\n                        </ng-container>\n                        <!-- Tags panel and its button -->\n                        <div\n                            class=\"flex items-center justify-center px-4 m-1.5 rounded-full leading-9 cursor-pointer text-gray-500 bg-gray-100 dark:text-gray-300 dark:bg-gray-700\"\n                            (click)=\"openTagsPanel()\"\n                            #tagsPanelOrigin>\n\n                            <ng-container *ngIf=\"contact.tags.length\">\n                                <mat-icon\n                                    class=\"icon-size-5\"\n                                    [svgIcon]=\"'heroicons_solid:pencil-square'\"></mat-icon>\n                                <span class=\"ml-1.5 text-md font-medium whitespace-nowrap\">Edit</span>\n                            </ng-container>\n\n                            <ng-container *ngIf=\"!contact.tags.length\">\n                                <mat-icon\n                                    class=\"icon-size-5\"\n                                    [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                                <span class=\"ml-1.5 text-md font-medium whitespace-nowrap\">Add</span>\n                            </ng-container>\n\n                            <!-- Tags panel -->\n                            <ng-template #tagsPanel>\n                                <div class=\"w-60 rounded border shadow-md bg-card\">\n                                    <!-- Tags panel header -->\n                                    <div class=\"flex items-center m-3 mr-2\">\n                                        <div class=\"flex items-center\">\n                                            <mat-icon\n                                                class=\"icon-size-5\"\n                                                [svgIcon]=\"'heroicons_solid:magnifying-glass'\"></mat-icon>\n                                            <div class=\"ml-2\">\n                                                <input\n                                                    class=\"w-full min-w-0 py-1 border-0\"\n                                                    type=\"text\"\n                                                    placeholder=\"Enter tag name\"\n                                                    (input)=\"filterTags($event)\"\n                                                    (keydown)=\"filterTagsInputKeyDown($event)\"\n                                                    [maxLength]=\"30\"\n                                                    #newTagInput>\n                                            </div>\n                                        </div>\n                                        <button\n                                            class=\"ml-1\"\n                                            mat-icon-button\n                                            (click)=\"toggleTagsEditMode()\">\n                                            <mat-icon\n                                                *ngIf=\"!tagsEditMode\"\n                                                class=\"icon-size-5\"\n                                                [svgIcon]=\"'heroicons_solid:pencil-square'\"></mat-icon>\n                                            <mat-icon\n                                                *ngIf=\"tagsEditMode\"\n                                                class=\"icon-size-5\"\n                                                [svgIcon]=\"'heroicons_solid:check'\"></mat-icon>\n                                        </button>\n                                    </div>\n                                    <div\n                                        class=\"flex flex-col max-h-64 py-2 border-t overflow-y-auto\">\n                                        <!-- Tags -->\n                                        <ng-container *ngIf=\"!tagsEditMode\">\n                                            <ng-container *ngFor=\"let tag of filteredTags; trackBy: trackByFn\">\n                                                <div\n                                                    class=\"flex items-center h-10 min-h-10 pl-1 pr-4 cursor-pointer hover:bg-hover\"\n                                                    (click)=\"toggleContactTag(tag)\"\n                                                    matRipple>\n                                                    <mat-checkbox\n                                                        class=\"flex items-center h-10 min-h-10 pointer-events-none\"\n                                                        [checked]=\"contact.tags.includes(tag.id)\"\n                                                        [color]=\"'primary'\"\n                                                        [disableRipple]=\"true\">\n                                                    </mat-checkbox>\n                                                    <div>{{tag.title}}</div>\n                                                </div>\n                                            </ng-container>\n                                        </ng-container>\n                                        <!-- Tags editing -->\n                                        <ng-container *ngIf=\"tagsEditMode\">\n                                            <div class=\"py-2 space-y-2\">\n                                                <ng-container *ngFor=\"let tag of filteredTags; trackBy: trackByFn\">\n                                                    <div class=\"flex items-center\">\n                                                        <mat-form-field\n                                                            class=\"fuse-mat-dense w-full mx-4\"\n                                                            [subscriptSizing]=\"'dynamic'\">\n                                                            <input\n                                                                matInput\n                                                                [value]=\"tag.title\"\n                                                                (input)=\"updateTagTitle(tag, $event)\">\n                                                            <button\n                                                                mat-icon-button\n                                                                (click)=\"deleteTag(tag)\"\n                                                                matSuffix>\n                                                                <mat-icon\n                                                                    class=\"icon-size-5 ml-2\"\n                                                                    [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                                                            </button>\n                                                        </mat-form-field>\n                                                    </div>\n                                                </ng-container>\n                                            </div>\n                                        </ng-container>\n                                        <!-- Create tag -->\n                                        <div\n                                            class=\"flex items-center h-10 min-h-10 -ml-0.5 pl-4 pr-3 leading-none cursor-pointer hover:bg-hover\"\n                                            *ngIf=\"shouldShowCreateTagButton(newTagInput.value)\"\n                                            (click)=\"createTag(newTagInput.value); newTagInput.value = ''\"\n                                            matRipple>\n                                            <mat-icon\n                                                class=\"mr-2 icon-size-5\"\n                                                [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                                            <div class=\"break-all\">Create \"<b>{{newTagInput.value}}</b>\"</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </div>\n                    </div>\n\n                    <!-- Title -->\n                    <div class=\"mt-8\">\n                        <mat-form-field\n                            class=\"w-full\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-label>Title</mat-label>\n                            <mat-icon\n                                matPrefix\n                                class=\"hidden sm:flex icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:briefcase'\"></mat-icon>\n                            <input\n                                matInput\n                                [formControlName]=\"'title'\"\n                                [placeholder]=\"'Job title'\">\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Company -->\n                    <div class=\"mt-8\">\n                        <mat-form-field\n                            class=\"w-full\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-label>Company</mat-label>\n                            <mat-icon\n                                matPrefix\n                                class=\"hidden sm:flex icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:building-office-2'\"></mat-icon>\n                            <input\n                                matInput\n                                [formControlName]=\"'company'\"\n                                [placeholder]=\"'Company'\">\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Emails -->\n                    <div class=\"mt-8\">\n                        <div class=\"space-y-4\">\n                            <ng-container *ngFor=\"let email of contactForm.get('emails')['controls']; let i = index; let first = first; let last = last; trackBy: trackByFn\">\n                                <div class=\"flex\">\n                                    <mat-form-field\n                                        class=\"flex-auto\"\n                                        [subscriptSizing]=\"'dynamic'\">\n                                        <mat-label *ngIf=\"first\">Email</mat-label>\n                                        <mat-icon\n                                            matPrefix\n                                            class=\"hidden sm:flex icon-size-5\"\n                                            [svgIcon]=\"'heroicons_solid:envelope'\"></mat-icon>\n                                        <input\n                                            matInput\n                                            [formControl]=\"email.get('email')\"\n                                            [placeholder]=\"'Email address'\"\n                                            [spellcheck]=\"false\">\n                                    </mat-form-field>\n                                    <mat-form-field\n                                        class=\"flex-auto w-full max-w-24 sm:max-w-40 ml-2 sm:ml-4\"\n                                        [subscriptSizing]=\"'dynamic'\">\n                                        <mat-label *ngIf=\"first\">Label</mat-label>\n                                        <mat-icon\n                                            matPrefix\n                                            class=\"hidden sm:flex icon-size-5\"\n                                            [svgIcon]=\"'heroicons_solid:tag'\"></mat-icon>\n                                        <input\n                                            matInput\n                                            [formControl]=\"email.get('label')\"\n                                            [placeholder]=\"'Label'\">\n                                    </mat-form-field>\n                                    <!-- Remove email -->\n                                    <ng-container *ngIf=\"!(first && last)\">\n                                        <div\n                                            class=\"flex items-center w-10 pl-2\"\n                                            [ngClass]=\"{'mt-6': first}\">\n                                            <button\n                                                class=\"w-8 h-8 min-h-8\"\n                                                mat-icon-button\n                                                (click)=\"removeEmailField(i)\"\n                                                matTooltip=\"Remove\">\n                                                <mat-icon\n                                                    class=\"icon-size-5\"\n                                                    [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                                            </button>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <div\n                            class=\"group inline-flex items-center mt-2 -ml-4 py-2 px-4 rounded cursor-pointer\"\n                            (click)=\"addEmailField()\">\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                            <span class=\"ml-2 font-medium text-secondary group-hover:underline\">Add an email address</span>\n                        </div>\n                    </div>\n\n                    <!-- Phone numbers -->\n                    <div class=\"mt-8\">\n                        <div class=\"space-y-4\">\n                            <ng-container *ngFor=\"let phoneNumber of contactForm.get('phoneNumbers')['controls']; let i = index; let first = first; let last = last; trackBy: trackByFn\">\n                                <div class=\"relative flex\">\n                                    <mat-form-field\n                                        class=\"flex-auto\"\n                                        [subscriptSizing]=\"'dynamic'\">\n                                        <mat-label *ngIf=\"first\">Phone</mat-label>\n                                        <input\n                                            matInput\n                                            [formControl]=\"phoneNumber.get('phoneNumber')\"\n                                            [placeholder]=\"'Phone'\">\n                                        <mat-select\n                                            class=\"mr-1.5\"\n                                            [formControl]=\"phoneNumber.get('country')\"\n                                            matPrefix>\n                                            <mat-select-trigger>\n                                                <span class=\"flex items-center\">\n                                                    <span\n                                                        class=\"hidden sm:flex w-6 h-4 mr-1 overflow-hidden\"\n                                                        [style.background]=\"'url(\\'/assets/images/apps/contacts/flags.png\\') no-repeat 0 0'\"\n                                                        [style.backgroundSize]=\"'24px 3876px'\"\n                                                        [style.backgroundPosition]=\"getCountryByIso(phoneNumber.get('country').value).flagImagePos\"></span>\n                                                    <span class=\"sm:mx-0.5 font-medium text-default\">{{getCountryByIso(phoneNumber.get('country').value).code}}</span>\n                                                </span>\n                                            </mat-select-trigger>\n                                            <ng-container *ngFor=\"let country of countries; trackBy: trackByFn\">\n                                                <mat-option [value]=\"country.iso\">\n                                                    <span class=\"flex items-center\">\n                                                        <span\n                                                            class=\"w-6 h-4 overflow-hidden\"\n                                                            [style.background]=\"'url(\\'/assets/images/apps/contacts/flags.png\\') no-repeat 0 0'\"\n                                                            [style.backgroundSize]=\"'24px 3876px'\"\n                                                            [style.backgroundPosition]=\"country.flagImagePos\"></span>\n                                                        <span class=\"ml-2\">{{country.name}}</span>\n                                                        <span class=\"ml-2 font-medium\">{{country.code}}</span>\n                                                    </span>\n                                                </mat-option>\n                                            </ng-container>\n                                        </mat-select>\n                                    </mat-form-field>\n                                    <mat-form-field\n                                        class=\"flex-auto w-full max-w-24 sm:max-w-40 ml-2 sm:ml-4\"\n                                        [subscriptSizing]=\"'dynamic'\">\n                                        <mat-label *ngIf=\"first\">Label</mat-label>\n                                        <mat-icon\n                                            matPrefix\n                                            class=\"hidden sm:flex icon-size-5\"\n                                            [svgIcon]=\"'heroicons_solid:tag'\"></mat-icon>\n                                        <input\n                                            matInput\n                                            [formControl]=\"phoneNumber.get('label')\"\n                                            [placeholder]=\"'Label'\">\n                                    </mat-form-field>\n                                    <!-- Remove phone number -->\n                                    <ng-container *ngIf=\"!(first && last)\">\n                                        <div\n                                            class=\"flex items-center w-10 pl-2\"\n                                            [ngClass]=\"{'mt-6': first}\">\n                                            <button\n                                                class=\"w-8 h-8 min-h-8\"\n                                                mat-icon-button\n                                                (click)=\"removePhoneNumberField(i)\"\n                                                matTooltip=\"Remove\">\n                                                <mat-icon\n                                                    class=\"icon-size-5\"\n                                                    [svgIcon]=\"'heroicons_solid:trash'\"></mat-icon>\n                                            </button>\n                                        </div>\n                                    </ng-container>\n                                </div>\n                            </ng-container>\n                        </div>\n                        <div\n                            class=\"group inline-flex items-center mt-2 -ml-4 py-2 px-4 rounded cursor-pointer\"\n                            (click)=\"addPhoneNumberField()\">\n                            <mat-icon\n                                class=\"icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:plus-circle'\"></mat-icon>\n                            <span class=\"ml-2 font-medium text-secondary group-hover:underline\">Add a phone number</span>\n                        </div>\n                    </div>\n\n                    <!-- Address -->\n                    <div class=\"mt-8\">\n                        <mat-form-field\n                            class=\"w-full\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-label>Address</mat-label>\n                            <mat-icon\n                                matPrefix\n                                class=\"hidden sm:flex icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:map-pin'\"></mat-icon>\n                            <input\n                                matInput\n                                [formControlName]=\"'address'\"\n                                [placeholder]=\"'Address'\">\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Birthday -->\n                    <div class=\"mt-8\">\n                        <mat-form-field\n                            class=\"w-full\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-label>Birthday</mat-label>\n                            <mat-icon\n                                matPrefix\n                                class=\"hidden sm:flex icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:cake'\"></mat-icon>\n                            <input\n                                matInput\n                                [matDatepicker]=\"birthdayDatepicker\"\n                                [formControlName]=\"'birthday'\"\n                                [placeholder]=\"'Birthday'\">\n                            <mat-datepicker-toggle\n                                matSuffix\n                                [for]=\"birthdayDatepicker\">\n                            </mat-datepicker-toggle>\n                            <mat-datepicker #birthdayDatepicker></mat-datepicker>\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Notes -->\n                    <div class=\"mt-8\">\n                        <mat-form-field\n                            class=\"w-full\"\n                            [subscriptSizing]=\"'dynamic'\">\n                            <mat-label>Notes</mat-label>\n                            <mat-icon\n                                matPrefix\n                                class=\"hidden sm:flex icon-size-5\"\n                                [svgIcon]=\"'heroicons_solid:bars-3-bottom-left'\"></mat-icon>\n                            <textarea\n                                matInput\n                                [formControlName]=\"'notes'\"\n                                [placeholder]=\"'Notes'\"\n                                [rows]=\"5\"\n                                [spellcheck]=\"false\"\n                                cdkTextareaAutosize></textarea>\n                        </mat-form-field>\n                    </div>\n\n                    <!-- Actions -->\n                    <div class=\"flex items-center mt-10 -mx-6 sm:-mx-12 py-4 pr-4 pl-1 sm:pr-12 sm:pl-7 border-t bg-gray-50 dark:bg-transparent\">\n                        <!-- Delete -->\n                        <button\n                            mat-button\n                            [color]=\"'warn'\"\n                            [matTooltip]=\"'Delete'\"\n                            (click)=\"deleteContact()\">\n                            Delete\n                        </button>\n                        <!-- Cancel -->\n                        <button\n                            class=\"ml-auto\"\n                            mat-button\n                            [matTooltip]=\"'Cancel'\"\n                            (click)=\"toggleEditMode(false)\">\n                            Cancel\n                        </button>\n                        <!-- Save -->\n                        <button\n                            class=\"ml-2\"\n                            mat-flat-button\n                            [color]=\"'primary'\"\n                            [disabled]=\"contactForm.invalid\"\n                            [matTooltip]=\"'Save'\"\n                            (click)=\"updateContact()\">\n                            Save\n                        </button>\n                    </div>\n\n                </form>\n            </div>\n        </div>\n    </ng-container>\n</div>\n","import { AsyncPipe, DOCUMENT, I18nPluralPipe, NgClass, NgFor, NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, Inject, OnDestroy, OnInit, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule, UntypedFormControl } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDrawer, MatSidenavModule } from '@angular/material/sidenav';\nimport { ActivatedRoute, Router, RouterLink, RouterOutlet } from '@angular/router';\nimport { FuseMediaWatcherService } from '@fuse/services/media-watcher';\nimport { ContactsService } from 'app/modules/admin/apps/contacts/contacts.service';\nimport { Contact, Country } from 'app/modules/admin/apps/contacts/contacts.types';\nimport { filter, fromEvent, Observable, Subject, switchMap, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'contacts-list',\n    templateUrl    : './list.component.html',\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    standalone     : true,\n    imports        : [MatSidenavModule, RouterOutlet, NgIf, MatFormFieldModule, MatIconModule, MatInputModule, FormsModule, ReactiveFormsModule, MatButtonModule, NgFor, NgClass, RouterLink, AsyncPipe, I18nPluralPipe],\n})\nexport class ContactsListComponent implements OnInit, OnDestroy\n{\n    @ViewChild('matDrawer', {static: true}) matDrawer: MatDrawer;\n\n    contacts$: Observable<Contact[]>;\n\n    contactsCount: number = 0;\n    contactsTableColumns: string[] = ['name', 'email', 'phoneNumber', 'job'];\n    countries: Country[];\n    drawerMode: 'side' | 'over';\n    searchInputControl: UntypedFormControl = new UntypedFormControl();\n    selectedContact: Contact;\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _activatedRoute: ActivatedRoute,\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _contactsService: ContactsService,\n        @Inject(DOCUMENT) private _document: any,\n        private _router: Router,\n        private _fuseMediaWatcherService: FuseMediaWatcherService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Get the contacts\n        this.contacts$ = this._contactsService.contacts$;\n        this._contactsService.contacts$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((contacts: Contact[]) =>\n            {\n                // Update the counts\n                this.contactsCount = contacts.length;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the contact\n        this._contactsService.contact$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((contact: Contact) =>\n            {\n                // Update the selected contact\n                this.selectedContact = contact;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Get the countries\n        this._contactsService.countries$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe((countries: Country[]) =>\n            {\n                // Update the countries\n                this.countries = countries;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Subscribe to search input field value changes\n        this.searchInputControl.valueChanges\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                switchMap(query =>\n\n                    // Search\n                    this._contactsService.searchContacts(query),\n                ),\n            )\n            .subscribe();\n\n        // Subscribe to MatDrawer opened change\n        this.matDrawer.openedChange.subscribe((opened) =>\n        {\n            if ( !opened )\n            {\n                // Remove the selected contact when drawer closed\n                this.selectedContact = null;\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n\n        // Subscribe to media changes\n        this._fuseMediaWatcherService.onMediaChange$\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(({matchingAliases}) =>\n            {\n                // Set the drawerMode if the given breakpoint is active\n                if ( matchingAliases.includes('lg') )\n                {\n                    this.drawerMode = 'side';\n                }\n                else\n                {\n                    this.drawerMode = 'over';\n                }\n\n                // Mark for check\n                this._changeDetectorRef.markForCheck();\n            });\n\n        // Listen for shortcuts\n        fromEvent(this._document, 'keydown')\n            .pipe(\n                takeUntil(this._unsubscribeAll),\n                filter<KeyboardEvent>(event =>\n                    (event.ctrlKey === true || event.metaKey) // Ctrl or Cmd\n                    && (event.key === '/'), // '/'\n                ),\n            )\n            .subscribe(() =>\n            {\n                this.createContact();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On backdrop clicked\n     */\n    onBackdropClicked(): void\n    {\n        // Go back to the list\n        this._router.navigate(['./'], {relativeTo: this._activatedRoute});\n\n        // Mark for check\n        this._changeDetectorRef.markForCheck();\n    }\n\n    /**\n     * Create contact\n     */\n    createContact(): void\n    {\n        // Create the contact\n        this._contactsService.createContact().subscribe((newContact) =>\n        {\n            // Go to the new contact\n            this._router.navigate(['./', newContact.id], {relativeTo: this._activatedRoute});\n\n            // Mark for check\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n\n    /**\n     * Track by function for ngFor loops\n     *\n     * @param index\n     * @param item\n     */\n    trackByFn(index: number, item: any): any\n    {\n        return item.id || index;\n    }\n}\n","<div class=\"absolute inset-0 flex flex-col min-w-0 overflow-hidden\">\n\n    <mat-drawer-container\n        class=\"flex-auto h-full bg-card dark:bg-transparent\"\n        (backdropClick)=\"onBackdropClicked()\">\n\n        <!-- Drawer -->\n        <mat-drawer\n            class=\"w-full md:w-160 dark:bg-gray-900\"\n            [mode]=\"drawerMode\"\n            [opened]=\"false\"\n            [position]=\"'end'\"\n            [disableClose]=\"true\"\n            #matDrawer>\n            <router-outlet></router-outlet>\n        </mat-drawer>\n\n        <mat-drawer-content class=\"flex flex-col\">\n\n            <!-- Main -->\n            <div class=\"flex-auto\">\n\n                <!-- Header -->\n                <div class=\"flex flex-col sm:flex-row md:flex-col flex-auto justify-between py-8 px-6 md:px-8 border-b\">\n\n                    <!-- Title -->\n                    <div>\n                        <div class=\"text-4xl font-extrabold tracking-tight leading-none\">Contacts</div>\n                        <div class=\"ml-0.5 font-medium text-secondary\">\n                            <ng-container *ngIf=\"contactsCount > 0\">\n                                {{contactsCount}}\n                            </ng-container>\n                            {{contactsCount | i18nPlural: {\n                            '=0'   : 'No contacts',\n                            '=1'   : 'contact',\n                            'other': 'contacts'\n                        } }}\n                        </div>\n                    </div>\n\n                    <!-- Main actions -->\n                    <div class=\"flex items-center mt-4 sm:mt-0 md:mt-4\">\n                        <!-- Search -->\n                        <div class=\"flex-auto\">\n                            <mat-form-field\n                                class=\"fuse-mat-dense fuse-mat-rounded w-full min-w-50\"\n                                subscriptSizing=\"dynamic\">\n                                <mat-icon\n                                    class=\"icon-size-5\"\n                                    matPrefix\n                                    [svgIcon]=\"'heroicons_solid:magnifying-glass'\"></mat-icon>\n                                <input\n                                    matInput\n                                    [formControl]=\"searchInputControl\"\n                                    [autocomplete]=\"'off'\"\n                                    [placeholder]=\"'Search contacts'\">\n                            </mat-form-field>\n                        </div>\n                        <!-- Add contact button -->\n                        <button\n                            class=\"ml-4\"\n                            mat-flat-button\n                            [color]=\"'primary'\"\n                            (click)=\"createContact()\">\n                            <mat-icon [svgIcon]=\"'heroicons_outline:plus'\"></mat-icon>\n                            <span class=\"ml-2 mr-1\">Add</span>\n                        </button>\n                    </div>\n                </div>\n\n                <!-- Contacts list -->\n                <div class=\"relative\">\n                    <ng-container *ngIf=\"contacts$ | async as contacts\">\n                        <ng-container *ngIf=\"contacts.length; else noContacts\">\n                            <ng-container *ngFor=\"let contact of contacts; let i = index; trackBy: trackByFn\">\n                                <!-- Group -->\n                                <ng-container *ngIf=\"i === 0 || contact.name.charAt(0) !== contacts[i - 1].name.charAt(0)\">\n                                    <div class=\"z-10 sticky top-0 -mt-px px-6 py-1 md:px-8 border-t border-b font-medium uppercase text-secondary bg-gray-50 dark:bg-gray-900\">\n                                        {{contact.name.charAt(0)}}\n                                    </div>\n                                </ng-container>\n                                <!-- Contact -->\n                                <a\n                                    class=\"z-20 flex items-center px-6 py-4 md:px-8 cursor-pointer border-b\"\n                                    [ngClass]=\"{'hover:bg-gray-100 dark:hover:bg-hover': !selectedContact || selectedContact.id !== contact.id,\n                                                'bg-primary-50 dark:bg-hover': selectedContact && selectedContact.id === contact.id}\"\n                                    [routerLink]=\"['./', contact.id]\">\n                                    <div class=\"flex flex-0 items-center justify-center w-10 h-10 rounded-full overflow-hidden\">\n                                        <ng-container *ngIf=\"contact.avatar\">\n                                            <img\n                                                class=\"object-cover w-full h-full\"\n                                                [src]=\"contact.avatar\"\n                                                alt=\"Contact avatar\"/>\n                                        </ng-container>\n                                        <ng-container *ngIf=\"!contact.avatar\">\n                                            <div class=\"flex items-center justify-center w-full h-full rounded-full text-lg uppercase bg-gray-200 text-gray-600 dark:bg-gray-700 dark:text-gray-200\">\n                                                {{contact.name.charAt(0)}}\n                                            </div>\n                                        </ng-container>\n                                    </div>\n                                    <div class=\"min-w-0 ml-4\">\n                                        <div class=\"font-medium leading-5 truncate\">{{contact.name}}</div>\n                                        <div class=\"leading-5 truncate text-secondary\">{{contact.title}}</div>\n                                    </div>\n                                </a>\n                            </ng-container>\n                        </ng-container>\n                    </ng-container>\n\n                    <!-- No contacts -->\n                    <ng-template #noContacts>\n                        <div class=\"p-8 sm:p-16 border-t text-4xl font-semibold tracking-tight text-center\">There are no contacts!</div>\n                    </ng-template>\n\n                </div>\n\n            </div>\n\n        </mat-drawer-content>\n\n    </mat-drawer-container>\n\n</div>\n"],"names":["RouterOutlet","ContactsComponent","constructor","_","_2","selectors","standalone","features","i0","ɵɵStandaloneFeature","decls","vars","template","ContactsComponent_Template","rf","ctx","ɵɵelement","encapsulation","changeDetection","inject","Router","ContactsService","ContactsDetailsComponent","ContactsListComponent","catchError","throwError","contactResolver","route","state","contactsService","router","getContactById","paramMap","get","pipe","error","console","parentUrl","url","split","slice","join","navigateByUrl","canDeactivateContactsDetails","component","currentRoute","currentState","nextState","nextRoute","root","firstChild","includes","closeDrawer","then","path","resolve","tags","getTags","children","contacts","getContacts","countries","getCountries","contact","canDeactivate","BehaviorSubject","filter","map","of","switchMap","take","tap","_httpClient","_contact","_contacts","_countries","_tags","contact$","asObservable","contacts$","countries$","tags$","next","searchContacts","query","params","id","find","item","createContact","post","newContact","updateContact","patch","updatedContact","index","findIndex","deleteContact","delete","isDeleted","splice","createTag","tag","newTag","updateTag","updatedTag","deleteTag","forEach","tagIndex","uploadAvatar","avatar","headers","type","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn","TemplatePortal","TextFieldModule","DatePipe","NgClass","NgFor","NgIf","FormsModule","ReactiveFormsModule","Validators","MatButtonModule","MatCheckboxModule","MatOptionModule","MatRippleModule","MatDatepickerModule","MatFormFieldModule","MatIconModule","MatInputModule","MatSelectModule","MatTooltipModule","RouterLink","FuseFindByKeyPipe","debounceTime","Subject","takeUntil","ɵɵelementContainerStart","ɵɵelementContainerEnd","ɵɵadvance","ɵɵproperty","ctx_r2","background","ɵɵsanitizeUrl","ctx_r3","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵtextInterpolate1","ctx_r4","name","charAt","ɵɵtextInterpolate","tag_r14","title","ɵɵtemplate","ContactsDetailsComponent_ng_container_1_ng_container_19_ng_container_2_Template","ɵɵpipeBind3","ctx_r5","trackByFn","ctx_r6","ctx_r7","company","email_r16","label","ContactsDetailsComponent_ng_container_1_ng_container_23_ng_container_4_div_4_Template","email","ContactsDetailsComponent_ng_container_1_ng_container_23_ng_container_4_Template","ctx_r8","emails","phoneNumber_r20","ContactsDetailsComponent_ng_container_1_ng_container_24_ng_container_4_div_7_Template","ɵɵstyleProp","ctx_r19","getCountryByIso","country","flagImagePos","code","phoneNumber","ContactsDetailsComponent_ng_container_1_ng_container_24_ng_container_4_Template","ctx_r9","phoneNumbers","ctx_r10","address","ɵɵpipeBind2","ctx_r11","birthday","ctx_r12","notes","ɵɵsanitizeHtml","ContactsDetailsComponent_ng_container_1_ng_container_2_Template","ContactsDetailsComponent_ng_container_1_img_10_Template","ContactsDetailsComponent_ng_container_1_div_11_Template","ɵɵlistener","ContactsDetailsComponent_ng_container_1_Template_button_click_13_listener","ɵɵrestoreView","_r24","ctx_r23","ɵɵnextContext","ɵɵresetView","toggleEditMode","ContactsDetailsComponent_ng_container_1_ng_container_19_Template","ContactsDetailsComponent_ng_container_1_ng_container_21_Template","ContactsDetailsComponent_ng_container_1_ng_container_22_Template","ContactsDetailsComponent_ng_container_1_ng_container_23_Template","ContactsDetailsComponent_ng_container_1_ng_container_24_Template","ContactsDetailsComponent_ng_container_1_ng_container_25_Template","ContactsDetailsComponent_ng_container_1_ng_container_26_Template","ContactsDetailsComponent_ng_container_1_ng_container_27_Template","ctx_r0","ɵɵpureFunction0","_c3","length","ctx_r25","ctx_r27","ctx_r28","tag_r39","ContactsDetailsComponent_ng_container_2_ng_container_30_ng_container_1_Template","ctx_r29","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_11_ng_container_1_Template_div_click_1_listener","restoredCtx","_r49","tag_r47","$implicit","ctx_r48","toggleContactTag","ctx_r46","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_11_ng_container_1_Template","ctx_r43","filteredTags","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_12_ng_container_2_Template_input_input_3_listener","$event","_r53","tag_r51","ctx_r52","updateTagTitle","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_12_ng_container_2_Template_button_click_4_listener","ctx_r54","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_12_ng_container_2_Template","ctx_r44","ContactsDetailsComponent_ng_container_2_ng_template_35_div_13_Template_div_click_0_listener","_r56","_r40","ɵɵreference","ctx_r55","value","ContactsDetailsComponent_ng_container_2_ng_template_35_Template_input_input_5_listener","_r58","ctx_r57","filterTags","ContactsDetailsComponent_ng_container_2_ng_template_35_Template_input_keydown_5_listener","ctx_r59","filterTagsInputKeyDown","ContactsDetailsComponent_ng_container_2_ng_template_35_Template_button_click_7_listener","ctx_r60","toggleTagsEditMode","ContactsDetailsComponent_ng_container_2_ng_template_35_mat_icon_8_Template","ContactsDetailsComponent_ng_container_2_ng_template_35_mat_icon_9_Template","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_11_Template","ContactsDetailsComponent_ng_container_2_ng_template_35_ng_container_12_Template","ContactsDetailsComponent_ng_container_2_ng_template_35_div_13_Template","ctx_r33","tagsEditMode","shouldShowCreateTagButton","ContactsDetailsComponent_ng_container_2_ng_container_51_ng_container_10_Template_button_click_2_listener","_r70","i_r62","ctx_r68","removeEmailField","ɵɵpureFunction1","_c4","first_r63","ContactsDetailsComponent_ng_container_2_ng_container_51_mat_label_3_Template","ContactsDetailsComponent_ng_container_2_ng_container_51_mat_label_7_Template","ContactsDetailsComponent_ng_container_2_ng_container_51_ng_container_10_Template","email_r61","last_r64","country_r80","iso","ContactsDetailsComponent_ng_container_2_ng_container_58_ng_container_16_Template_button_click_2_listener","_r83","i_r73","ctx_r81","removePhoneNumberField","first_r74","ContactsDetailsComponent_ng_container_2_ng_container_58_mat_label_3_Template","ContactsDetailsComponent_ng_container_2_ng_container_58_ng_container_11_Template","ContactsDetailsComponent_ng_container_2_ng_container_58_mat_label_13_Template","ContactsDetailsComponent_ng_container_2_ng_container_58_ng_container_16_Template","phoneNumber_r72","ctx_r36","last_r75","ContactsDetailsComponent_ng_container_2_ng_container_2_Template","ContactsDetailsComponent_ng_container_2_Template_input_change_14_listener","_r86","_r26","ctx_r85","files","ContactsDetailsComponent_ng_container_2_Template_button_click_19_listener","ctx_r87","removeAvatar","ContactsDetailsComponent_ng_container_2_img_21_Template","ContactsDetailsComponent_ng_container_2_div_22_Template","ContactsDetailsComponent_ng_container_2_ng_container_30_Template","ContactsDetailsComponent_ng_container_2_Template_div_click_31_listener","ctx_r88","openTagsPanel","ContactsDetailsComponent_ng_container_2_ng_container_33_Template","ContactsDetailsComponent_ng_container_2_ng_container_34_Template","ContactsDetailsComponent_ng_container_2_ng_template_35_Template","ɵɵtemplateRefExtractor","ContactsDetailsComponent_ng_container_2_ng_container_51_Template","ContactsDetailsComponent_ng_container_2_Template_div_click_52_listener","ctx_r89","addEmailField","ContactsDetailsComponent_ng_container_2_ng_container_58_Template","ContactsDetailsComponent_ng_container_2_Template_div_click_59_listener","ctx_r90","addPhoneNumberField","ContactsDetailsComponent_ng_container_2_Template_button_click_85_listener","ctx_r91","ContactsDetailsComponent_ng_container_2_Template_button_click_87_listener","ctx_r92","ContactsDetailsComponent_ng_container_2_Template_button_click_89_listener","ctx_r93","ctx_r1","contactForm","_r37","invalid","_activatedRoute","_changeDetectorRef","_contactsListComponent","_contactsService","_formBuilder","_fuseConfirmationService","_renderer2","_router","_overlay","_viewContainerRef","editMode","_unsubscribeAll","ngOnInit","matDrawer","open","group","required","array","subscribe","markForCheck","clear","patchValue","emailFormGroups","push","emailFormGroup","phoneNumbersFormGroups","phoneNumbersFormGroup","codes","ngOnDestroy","complete","_tagsPanelOverlayRef","dispose","close","getRawValue","confirmation","message","actions","confirm","afterClosed","result","currentContactIndex","nextContactIndex","nextContactId","navigate","relativeTo","fileList","allowedTypes","file","avatarFormControl","setValue","_avatarFileInput","nativeElement","create","backdropClass","hasBackdrop","scrollStrategy","scrollStrategies","block","positionStrategy","position","flexibleConnectedTo","_tagsPanelOrigin","withFlexibleDimensions","withViewportMargin","withLockedPosition","withPositions","originX","originY","overlayX","overlayY","attachments","addClass","overlayElement","querySelector","focus","templatePortal","_tagsPanel","attach","backdropClick","removeClass","hasAttached","detach","isAttached","event","target","toLowerCase","key","isTagApplied","removeTagFromContact","addTagToContact","response","unshift","inputValue","emailsFormArray","removeAt","phoneNumberFormGroup","phoneNumbersFormArray","ɵɵdirectiveInject","ActivatedRoute","ChangeDetectorRef","i2","i3","i4","UntypedFormBuilder","i5","FuseConfirmationService","Renderer2","i6","Overlay","ViewContainerRef","viewQuery","ContactsDetailsComponent_Query","ContactsDetailsComponent_ng_container_1_Template","ContactsDetailsComponent_ng_container_2_Template","i7","MatButton","MatIconAnchor","MatIconButton","i8","MatTooltip","i9","MatIcon","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormControlDirective","FormGroupDirective","FormControlName","i10","MatRipple","i11","MatFormField","MatLabel","MatPrefix","MatSuffix","i12","MatInput","i13","CdkTextareaAutosize","i14","MatCheckbox","i15","MatSelect","MatSelectTrigger","MatOption","i16","MatDatepicker","MatDatepickerInput","MatDatepickerToggle","AsyncPipe","DOCUMENT","I18nPluralPipe","UntypedFormControl","MatSidenavModule","fromEvent","contactsCount","contact_r8","ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_1_Template","ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_4_Template","ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_ng_container_5_Template","i_r9","contacts_r5","ɵɵpureFunction2","_c1","selectedContact","_c2","ContactsListComponent_ng_container_25_ng_container_1_ng_container_1_Template","ContactsListComponent_ng_container_25_ng_container_1_Template","_r4","_document","_fuseMediaWatcherService","contactsTableColumns","searchInputControl","valueChanges","openedChange","opened","onMediaChange$","matchingAliases","drawerMode","ctrlKey","metaKey","onBackdropClicked","FuseMediaWatcherService","ContactsListComponent_Query","ContactsListComponent_Template_mat_drawer_container_backdropClick_1_listener","ContactsListComponent_ng_container_12_Template","ContactsListComponent_Template_button_click_20_listener","ContactsListComponent_ng_container_25_Template","ContactsListComponent_ng_template_27_Template","ɵɵpipeBind1","MatDrawer","MatDrawerContainer","MatDrawerContent"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}