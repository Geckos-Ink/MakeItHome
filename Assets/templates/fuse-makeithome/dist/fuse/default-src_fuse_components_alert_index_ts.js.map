{"version":3,"file":"default-src_fuse_components_alert_index_ts.js","mappings":"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","sources":["./src/@fuse/components/alert/alert.component.ts","./src/@fuse/components/alert/alert.component.html","./src/@fuse/components/alert/alert.service.ts","./src/@fuse/components/alert/alert.types.ts","./src/@fuse/components/alert/index.ts","./src/@fuse/components/alert/public-api.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NgIf } from '@angular/common';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Input, OnChanges, OnDestroy, OnInit, Output, SimpleChanges, ViewEncapsulation } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { fuseAnimations } from '@fuse/animations';\nimport { FuseAlertService } from '@fuse/components/alert/alert.service';\nimport { FuseAlertAppearance, FuseAlertType } from '@fuse/components/alert/alert.types';\nimport { FuseUtilsService } from '@fuse/services/utils/utils.service';\nimport { filter, Subject, takeUntil } from 'rxjs';\n\n@Component({\n    selector       : 'fuse-alert',\n    templateUrl    : './alert.component.html',\n    styleUrls      : ['./alert.component.scss'],\n    encapsulation  : ViewEncapsulation.None,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations     : fuseAnimations,\n    exportAs       : 'fuseAlert',\n    standalone     : true,\n    imports        : [NgIf, MatIconModule, MatButtonModule],\n})\nexport class FuseAlertComponent implements OnChanges, OnInit, OnDestroy\n{\n    /* eslint-disable @typescript-eslint/naming-convention */\n    static ngAcceptInputType_dismissible: BooleanInput;\n    static ngAcceptInputType_dismissed: BooleanInput;\n    static ngAcceptInputType_showIcon: BooleanInput;\n    /* eslint-enable @typescript-eslint/naming-convention */\n\n    @Input() appearance: FuseAlertAppearance = 'soft';\n    @Input() dismissed: boolean = false;\n    @Input() dismissible: boolean = false;\n    @Input() name: string = this._fuseUtilsService.randomId();\n    @Input() showIcon: boolean = true;\n    @Input() type: FuseAlertType = 'primary';\n    @Output() readonly dismissedChanged: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    private _unsubscribeAll: Subject<any> = new Subject<any>();\n\n    /**\n     * Constructor\n     */\n    constructor(\n        private _changeDetectorRef: ChangeDetectorRef,\n        private _fuseAlertService: FuseAlertService,\n        private _fuseUtilsService: FuseUtilsService,\n    )\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Host binding for component classes\n     */\n    @HostBinding('class') get classList(): any\n    {\n        /* eslint-disable @typescript-eslint/naming-convention */\n        return {\n            'fuse-alert-appearance-border' : this.appearance === 'border',\n            'fuse-alert-appearance-fill'   : this.appearance === 'fill',\n            'fuse-alert-appearance-outline': this.appearance === 'outline',\n            'fuse-alert-appearance-soft'   : this.appearance === 'soft',\n            'fuse-alert-dismissed'         : this.dismissed,\n            'fuse-alert-dismissible'       : this.dismissible,\n            'fuse-alert-show-icon'         : this.showIcon,\n            'fuse-alert-type-primary'      : this.type === 'primary',\n            'fuse-alert-type-accent'       : this.type === 'accent',\n            'fuse-alert-type-warn'         : this.type === 'warn',\n            'fuse-alert-type-basic'        : this.type === 'basic',\n            'fuse-alert-type-info'         : this.type === 'info',\n            'fuse-alert-type-success'      : this.type === 'success',\n            'fuse-alert-type-warning'      : this.type === 'warning',\n            'fuse-alert-type-error'        : this.type === 'error',\n        };\n        /* eslint-enable @typescript-eslint/naming-convention */\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Lifecycle hooks\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * On changes\n     *\n     * @param changes\n     */\n    ngOnChanges(changes: SimpleChanges): void\n    {\n        // Dismissed\n        if ( 'dismissed' in changes )\n        {\n            // Coerce the value to a boolean\n            this.dismissed = coerceBooleanProperty(changes.dismissed.currentValue);\n\n            // Dismiss/show the alert\n            this._toggleDismiss(this.dismissed);\n        }\n\n        // Dismissible\n        if ( 'dismissible' in changes )\n        {\n            // Coerce the value to a boolean\n            this.dismissible = coerceBooleanProperty(changes.dismissible.currentValue);\n        }\n\n        // Show icon\n        if ( 'showIcon' in changes )\n        {\n            // Coerce the value to a boolean\n            this.showIcon = coerceBooleanProperty(changes.showIcon.currentValue);\n        }\n    }\n\n    /**\n     * On init\n     */\n    ngOnInit(): void\n    {\n        // Subscribe to the dismiss calls\n        this._fuseAlertService.onDismiss\n            .pipe(\n                filter(name => this.name === name),\n                takeUntil(this._unsubscribeAll),\n            )\n            .subscribe(() =>\n            {\n                // Dismiss the alert\n                this.dismiss();\n            });\n\n        // Subscribe to the show calls\n        this._fuseAlertService.onShow\n            .pipe(\n                filter(name => this.name === name),\n                takeUntil(this._unsubscribeAll),\n            )\n            .subscribe(() =>\n            {\n                // Show the alert\n                this.show();\n            });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void\n    {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next(null);\n        this._unsubscribeAll.complete();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Dismiss the alert\n     */\n    dismiss(): void\n    {\n        // Return if the alert is already dismissed\n        if ( this.dismissed )\n        {\n            return;\n        }\n\n        // Dismiss the alert\n        this._toggleDismiss(true);\n    }\n\n    /**\n     * Show the dismissed alert\n     */\n    show(): void\n    {\n        // Return if the alert is already showing\n        if ( !this.dismissed )\n        {\n            return;\n        }\n\n        // Show the alert\n        this._toggleDismiss(false);\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Private methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Dismiss/show the alert\n     *\n     * @param dismissed\n     * @private\n     */\n    private _toggleDismiss(dismissed: boolean): void\n    {\n        // Return if the alert is not dismissible\n        if ( !this.dismissible )\n        {\n            return;\n        }\n\n        // Set the dismissed\n        this.dismissed = dismissed;\n\n        // Execute the observable\n        this.dismissedChanged.next(this.dismissed);\n\n        // Notify the change detector\n        this._changeDetectorRef.markForCheck();\n    }\n}\n","<div\n    class=\"fuse-alert-container\"\n    *ngIf=\"!dismissible || dismissible && !dismissed\"\n    [@fadeIn]=\"!dismissed\"\n    [@fadeOut]=\"!dismissed\">\n\n    <!-- Border -->\n    <div\n        class=\"fuse-alert-border\"\n        *ngIf=\"appearance === 'border'\"></div>\n\n    <!-- Icon -->\n    <div\n        class=\"fuse-alert-icon\"\n        *ngIf=\"showIcon\">\n\n        <!-- Custom icon -->\n        <div class=\"fuse-alert-custom-icon\">\n            <ng-content select=\"[fuseAlertIcon]\"></ng-content>\n        </div>\n\n        <!-- Default icons -->\n        <div class=\"fuse-alert-default-icon\">\n\n            <mat-icon\n                *ngIf=\"type === 'primary'\"\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'accent'\"\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'warn'\"\n                [svgIcon]=\"'heroicons_solid:x-circle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'basic'\"\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'info'\"\n                [svgIcon]=\"'heroicons_solid:information-circle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'success'\"\n                [svgIcon]=\"'heroicons_solid:check-circle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'warning'\"\n                [svgIcon]=\"'heroicons_solid:exclamation-triangle'\"></mat-icon>\n\n            <mat-icon\n                *ngIf=\"type === 'error'\"\n                [svgIcon]=\"'heroicons_solid:x-circle'\"></mat-icon>\n\n        </div>\n\n    </div>\n\n    <!-- Content -->\n    <div class=\"fuse-alert-content\">\n\n        <div class=\"fuse-alert-title\">\n            <ng-content select=\"[fuseAlertTitle]\"></ng-content>\n        </div>\n\n        <div class=\"fuse-alert-message\">\n            <ng-content></ng-content>\n        </div>\n\n    </div>\n\n    <!-- Dismiss button -->\n    <button\n        class=\"fuse-alert-dismiss-button\"\n        mat-icon-button\n        (click)=\"dismiss()\">\n        <mat-icon [svgIcon]=\"'heroicons_solid:x-mark'\"></mat-icon>\n    </button>\n\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\n\n@Injectable({providedIn: 'root'})\nexport class FuseAlertService\n{\n    private readonly _onDismiss: ReplaySubject<string> = new ReplaySubject<string>(1);\n    private readonly _onShow: ReplaySubject<string> = new ReplaySubject<string>(1);\n\n    /**\n     * Constructor\n     */\n    constructor()\n    {\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Accessors\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Getter for onDismiss\n     */\n    get onDismiss(): Observable<any>\n    {\n        return this._onDismiss.asObservable();\n    }\n\n    /**\n     * Getter for onShow\n     */\n    get onShow(): Observable<any>\n    {\n        return this._onShow.asObservable();\n    }\n\n    // -----------------------------------------------------------------------------------------------------\n    // @ Public methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Dismiss the alert\n     *\n     * @param name\n     */\n    dismiss(name: string): void\n    {\n        // Return if the name is not provided\n        if ( !name )\n        {\n            return;\n        }\n\n        // Execute the observable\n        this._onDismiss.next(name);\n    }\n\n    /**\n     * Show the dismissed alert\n     *\n     * @param name\n     */\n    show(name: string): void\n    {\n        // Return if the name is not provided\n        if ( !name )\n        {\n            return;\n        }\n\n        // Execute the observable\n        this._onShow.next(name);\n    }\n\n}\n","export type FuseAlertAppearance =\n    | 'border'\n    | 'fill'\n    | 'outline'\n    | 'soft';\n\nexport type FuseAlertType =\n    | 'primary'\n    | 'accent'\n    | 'warn'\n    | 'basic'\n    | 'info'\n    | 'success'\n    | 'warning'\n    | 'error';\n","export * from '@fuse/components/alert/public-api';\n","export * from '@fuse/components/alert/alert.component';\nexport * from '@fuse/components/alert/alert.service';\nexport * from '@fuse/components/alert/alert.types';\n"],"names":["coerceBooleanProperty","NgIf","EventEmitter","MatButtonModule","MatIconModule","fuseAnimations","filter","Subject","takeUntil","i0","ɵɵelement","ɵɵproperty","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","ɵɵtemplate","FuseAlertComponent_div_0_div_2_mat_icon_4_Template","FuseAlertComponent_div_0_div_2_mat_icon_5_Template","FuseAlertComponent_div_0_div_2_mat_icon_6_Template","FuseAlertComponent_div_0_div_2_mat_icon_7_Template","FuseAlertComponent_div_0_div_2_mat_icon_8_Template","FuseAlertComponent_div_0_div_2_mat_icon_9_Template","FuseAlertComponent_div_0_div_2_mat_icon_10_Template","FuseAlertComponent_div_0_div_2_mat_icon_11_Template","ɵɵadvance","ctx_r2","type","FuseAlertComponent_div_0_div_1_Template","FuseAlertComponent_div_0_div_2_Template","ɵɵlistener","FuseAlertComponent_div_0_Template_button_click_8_listener","ɵɵrestoreView","_r12","ctx_r11","ɵɵnextContext","ɵɵresetView","dismiss","ctx_r0","dismissed","appearance","showIcon","FuseAlertComponent","constructor","_changeDetectorRef","_fuseAlertService","_fuseUtilsService","dismissible","name","randomId","dismissedChanged","_unsubscribeAll","classList","ngOnChanges","changes","currentValue","_toggleDismiss","ngOnInit","onDismiss","pipe","subscribe","onShow","show","ngOnDestroy","next","complete","markForCheck","_","ɵɵdirectiveInject","ChangeDetectorRef","i1","FuseAlertService","i2","FuseUtilsService","_2","selectors","hostVars","hostBindings","FuseAlertComponent_HostBindings","rf","ctx","FuseAlertComponent_div_0_Template","i3","MatIcon","i4","MatIconButton","styles","encapsulation","data","animation","changeDetection","ReplaySubject","_onDismiss","_onShow","asObservable","factory","ɵfac","providedIn"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}